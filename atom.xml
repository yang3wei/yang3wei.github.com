<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[yang3wei的专栏]]></title>
  <link href="http://yang3wei.github.com/atom.xml" rel="self"/>
  <link href="http://yang3wei.github.com/"/>
  <updated>2013-02-08T17:30:03+08:00</updated>
  <id>http://yang3wei.github.com/</id>
  <author>
    <name><![CDATA[yang3wei]]></name>
    <email><![CDATA[88480585@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac 下的 tree 命令]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/mac-xia-de-tree-ming-ling/"/>
    <updated>2013-02-08T17:19:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/mac-xia-de-tree-ming-ling</id>
    <content type="html"><![CDATA[<p>在默认安装安装的 <code>mac</code> 下没有找到 <code>tree</code> 命令，找了一下原来有个比较流氓的解决办法：</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'</span></code></pre></td></tr></table></div></figure>


<p>这个命令行跑起来类似平常<code>tree</code>的效果，比如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.
</span><span class='line'>|____extra
</span><span class='line'>| |____httpd-autoindex.conf
</span><span class='line'>| |____httpd-dav.conf
</span><span class='line'>| |____httpd-default.conf
</span><span class='line'>| |____httpd-info.conf
</span><span class='line'>| |____httpd-languages.conf
</span><span class='line'>| |____httpd-manual.conf
</span><span class='line'>| |____httpd-mpm.conf
</span><span class='line'>| |____httpd-multilang-errordoc.conf
</span><span class='line'>| |____httpd-ssl.conf
</span><span class='line'>| |____httpd-userdir.conf
</span><span class='line'>| |____httpd-vhosts.conf
</span><span class='line'>|____httpd.conf
</span><span class='line'>|____magic
</span><span class='line'>|____mime.types
</span><span class='line'>|____original
</span><span class='line'>| |____extra
</span><span class='line'>| | |____httpd-autoindex.conf
</span><span class='line'>| | |____httpd-dav.conf
</span><span class='line'>| | |____httpd-default.conf
</span><span class='line'>| | |____httpd-info.conf
</span><span class='line'>| | |____httpd-languages.conf
</span><span class='line'>| | |____httpd-manual.conf
</span><span class='line'>| | |____httpd-mpm.conf
</span><span class='line'>| | |____httpd-multilang-errordoc.conf
</span><span class='line'>| | |____httpd-ssl.conf
</span><span class='line'>| | |____httpd-userdir.conf
</span><span class='line'>| | |____httpd-vhosts.conf
</span><span class='line'>| |____httpd.conf
</span><span class='line'>|____other
</span><span class='line'>| |____bonjour.conf
</span><span class='line'>| |____php5.conf
</span><span class='line'>|____users</span></code></pre></td></tr></table></div></figure>


<p>写一个alias到~/.bash_profile里，就更方便了:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>alias tree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"</span></code></pre></td></tr></table></div></figure>


<h3>Update</h3>

<p>现在正在用的是 <code>homebrew</code> 安装的 <code>tree</code> 命令行。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install tree</span></code></pre></td></tr></table></div></figure>


<p>作者: Volcano 发表于November 22, 2010 at 8:34 pm<br/>
版权信息: 可以任意转载, 转载时请务必以超链接形式标明文章原始出处和作者信息及此声明<br/>
永久链接 - <a href="http://www.ooso.net/archives/564">http://www.ooso.net/archives/564</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I found a bug with CCParticleSystem]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/i-found-a-bug-with-ccparticlesystem/"/>
    <updated>2013-02-08T01:41:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/i-found-a-bug-with-ccparticlesystem</id>
    <content type="html"><![CDATA[<p>此次经验对我影响很大，虽然只是一个很小的问题，<br/>
但我还是没有掐掉上报 bug 的想法，于是在论坛上我碰到了一个很友善的老外。<br/>
一念之间，我因为自己的一点小善心而获得了更多的知识，<br/>
了解到了怎么上报 bug，怎么使用 git，还锻炼了英文，<br/>
实乃是一举多得，总结一下，遇到问题还是不要犯懒，稍微较下真儿可能就会受益匪浅！</p>

<!-- more -->


<p>帖子链接：<a href="http://www.cocos2d-iphone.org/forum/topic/36963?replies=1#post-174889">I found a bug with CCParticleSystem.m</a><br/>
发现了一个 cocos2d 粒子系统的bug，<br/>
怎么说呢，也就是同一份由 Particle Designer 生成的 plist 文件，<br/>
放到高低清的不同模式下，竟然得到了不同的视觉呈现。</p>

<p>觉得诡异之余我仔细观察了一下，发现该问题可能是由于y方向的重力数据有异所致。<br/>
于是我切到  <code>CCParticleSysem.m</code> 里面找了一番，发现由 plist 文件里面加载进来的数据，<br/>
差不多都有做乘以  <code>CC_CONTENT_SCALE_FACTOR()</code> 的操作，<br/>
但是 gravity 的 x 和 y 却没有。</p>

<p>后来我将低清分辨率所使用的 plist 文件中的 <code>gravity-x</code>，<code>gravity-y</code> 数据都做了下除2处理，<br/>
再一运行，发现问题已经不再，充分证明这就是问题的症结所在。<br/>
看了下 cocos2d v1.01 和 v2.0.0 以及最新项目的 CHNAGELOG，<br/>
都没有发现已经将这个 bug 修正的痕迹、记录，<br/>
于是便在 cocos2d for iphone 主页申请了一个账号，将这个bug 贴到了论坛里面，<br/>
希望有人能帮我转告 Riq，将这个 bug 修正掉~</p>

<p>cocos2d 在我看来已经相当不错了，但是世界上很难有绝对完美的事物，<br/>
经此一役，充分印证了这一点儿，一直以来都使用免费的 cocos2d 做游戏开发，<br/>
现在终于能为 cocos2d 贡献出自己的一点儿微薄力量来了，甚感欣慰~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C盘Windows XP D盘Windows7 双系统安装纪录]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/cpan-windows-xp-dpan-windows7-shuang-xi-tong-an-zhuang-ji-lu/"/>
    <updated>2013-02-08T01:19:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/cpan-windows-xp-dpan-windows7-shuang-xi-tong-an-zhuang-ji-lu</id>
    <content type="html"><![CDATA[<p>最近我的 mac 出了问题，死活都进不去了<br/>
我重启了 n 多次都不管用，一直停在白色背景中央有一个缺苹果的画面。<br/>
以前也出现过这种情况，不过都只要多启动几次就能进去了，而且我总结出一个规律：<br/>
只要在进入上述那个画面的时候，硬盘灯还在一闪一闪的，那么十有八九都是能进入系统的；<br/>
只有在进入上述画面的时候硬盘灯没有闪动起来，就说明进不了勒，无论等多久~</p>

<!-- more -->


<p>不过这次我是真的栽了，重启了 n 多次还是老样子。<br/>
我想了下不能继续重启下去了，于是我在网上查了下，<br/>
有人说mac 在启动的时候是可以加上一些启动参数的，比如：<br/>
-x 进入安全模式，此种模式会加载尽可能少的驱动<br/>
-s 单人模式，大意就是进入系统之后，不能切换用户<br/>
-f 重建驱动缓存，在硬件发生改变的时候用这个参数<br/>
-v 有人给起名儿为啰嗦模式，挺合适的，就是在启动的过程中打印出当前正在做一些什么的信息。<br/>
cpus=1 不知道是什么含义，指定仅适用一个 cpu？<br/>
npci=0x2000 有人说启动不了的时候键入这个命令能有奇效，不过很可惜也没能帮上我的忙~<br/>
参数倒是挺多的，刚开始我只知道 -v 能过获得启动时候的具体信息，这样的话就不用一直对着那个白底缺苹果了<br/>
寻思着终于能明白发生了些什么了~<br/>
当然这毫无意义，因为还是没能帮我解决问题，<br/>
之后我试了很多方案，包括以上罗列参数所形成的各种组合，<br/>
我还拔掉了自行扩展的另一根4GB 的内存条，多次给 cmos 放电，<br/>
我咨询了卖给我电脑的经销商，他们说可能是少了kext 的驱动文件，但我对这一点很是怀疑，<br/>
因为我的硬盘里面分了两个区，两个分区里面都装了lion 系统，<br/>
按理来说，一个系统突然间就没法启动是因为缺少了驱动的话，那么我的第二个恢复系统突然间也启动不了了，<br/>
总不能说也是少了驱动的吧？这样就太诡异了。<br/>
而且我思索了一下之前的一些举动，在 mac 无法正常开机之前，<br/>
我仅仅是忘记拔下连接到电脑的 tf 卡，然后电脑提示 reboot and select proper boot device.</p>

<p>我另一台也是首台电脑上所装的 windows xp 已经用了 4 年左右的时间了，是从电脑城的工作人员配好就一直用着的，<br/>
当系统出现故障的时候我就用 ghost 一件来恢复，也没遇到什么大的麻烦，<br/>
不过这就让我一直都没有机会去接触装系统、装驱动什么的东西。<br/>
于是，当我看见这个提示的时候，第一个想到的便是拔掉 tf 卡读卡器。<br/>
不过，开机重启了几次还是提示相同的信息， <br/>
这次我火了，拆开主板就给 cmos 放电了，<br/>
然后再开机的时候，reboot 的提示没了，<br/>
悲剧也来了，mac 再也进不去了。。。。</p>

<p>最后一次正常关机的时候我还在 mac  AppStore 上面下载安装了几个游戏，<br/>
也不排除是这几个游戏的安装给我带来了这次灭顶之灾~</p>

<p>细细想来，我是在 2013  年 1 月 2 日 凌晨 2 点多的时候关的机，<br/>
当天下午 3~4 点钟从床上爬起来准备大干一场的时候，就出现了这种事情，<br/>
当时我还觉得挺恶心的，不过让我远远没有想到的是，<br/>
直到今天我也没能将 mac 系统给弄好。。。。。。<br/>
我还是觉得，应该是 bios 的错误设置导致了这次的灾厄，具体原因有待进一步挖掘~<br/>
（后来我就不断的调整 bios 中的设置，然后重启，不过也没起到什么作用，<br/>
因为 bios 里面的设置实在是太多了。我的一个同事说 bios 里面有一个 ahci 的设置要enable 一下，<br/>
但我在 索泰 G41 主板里面的 ami bios 里面死活就是没有看到有这么一个选项~）</p>

<p>所幸除了装 mac  的机器，我还有一台 amd cpu 的老机器以及一台做测试的 ipod touch4，都是可以联网查询资料的设备， <br/>
于是我便寻思着这次怎么也得把重装系统、双系统等的知识给补回来，我不会认栽，<br/>
如果 mac 系统实在恢复不过来，我情愿自己找资料重新黑一遍。。<br/>
都说 amd  cpu 的 pc 很难黑苹果（雪豹有人黑成功过，不过狮子黑成功的好像不是很多），<br/>
我使用惯了狮子系统的，再让我回到雪豹我是很难适应的，就不说用不了较新版本的 xcode 了，<br/>
就光是 dock 上面的那些 mac  app 就够让我烦的了<br/>
（狮子里面的 mission control 和 launchpad，用过的就会明白我的意思了）<br/>
所以当初我才直接购买了一台黑苹果，当时一台主机箱就花了 1850 元，是在 淘宝上面的 xhmend 店铺购买的。<br/>
而今虽然 mac 不能用了，但是上面的两个分区，我毫不介意把一个分区里面的数据搬出来格掉<br/>
在上面重新装一次，只要能够装好，那我主分区上面的 mac 系统也就十有八九能够修复回来了<br/>
（只要在副分区上面能装好 mac 系统，那么就说明问题不是出在 bios 上面，那么还剩下的可能就是驱动了，<br/>
只要我把正常 lion 系统里面的驱动复制回主分区的 mac 系统就应该没问题了。<br/>
而且我有一个优势，那就是设备的驱动都是可以直接拿来用的，当然我现在也只是做出一个猜测而已）</p>

<p>接下来我说干就干，首先我要做的便是在 AMD cpu 的老机器上面完成系统的重装过程<br/>
（mac 机器上面的两个分区里面的两个系统都进不了了，我想操作上面的文件都是一个大难题，<br/>
当时我是这么来弄的，我把 mac 机器里面的硬盘数据线连接到老机器的主板sata 口上面，<br/>
然后因为老机器里面的电源只能驱动一块硬盘，我就又只能用 mac 机器的电源来为装 mac 的硬盘供电了，<br/>
当时就觉得真是他妈的别扭，一新一旧两台电脑牢牢的靠在一起，<br/>
而其中的一台开着仅仅是为了给区区一块硬盘供电而已。。。。<br/>
而且出乎我意料的是，老机器开机以后虽然能正常检测到两块硬盘了，<br/>
但是由于 mac 系统的磁盘格式和 windows 的 NTFS、FAT32 不兼容，竟然毛都看不到一根。。。。<br/>
后来想到同事使用过的在 win 7 上面操作 mac 磁盘的工具软件 MacDrive，<br/>
便在网上下载了一个，试了一下果然行了，于是首先便决定吧 mac 上面的重要资料——笔记、项目、资源等， <br/>
先备份到移动磁盘上面，提前做出最坏的打算，即使装 mac 的硬盘被我做实验做地报废了，也不能伤到我的根本~） <br/>
还要掌握一些东西的使用，包括 u 盘启动盘的制作，Win PE 的使用，ghost  备份还原等方面的。</p>

<p>一台电脑开着仅仅是为了给一块硬盘供电，挺浪费的~ <br/>
我思忖着不能老这么下去啊，如果一直修不好，那不是一直都要这么下去？不行啊，要环保节能！！<br/>
那么，首先我要做的就是给 mac 硬盘上面装一个 windows 系统，方便我对 mac 系统的修复，<br/>
这个 windows 可以放在副分区里面，这样的话，就能很方便的操作主分区里面 mac 系统的磁盘文件了。<br/>
不过如前所述，我从来都没有亲手安装过一个系统，不管是 mac 还是 windows，都是买电脑给我的一手包办了的。<br/>
那么，我要克服的第一个难题便是 —— 在 mac 机器上安装一个全新的系统。</p>

<h2>安装双系统</h2>

<p>目标明确了以后，我就开始了对想法的实践，首先我要能成功地在老机器上面安装一个新系统。 <br/>
 我一直使用的 都是 Windows  XP 系统，这次装新系统就来个新鲜点儿的吧，就 Win7~ <br/>
当然，一方面也是因为我老机器里面已经有一个深度的 Ghost Win7 旗舰版镜像了~<br/>
（重新下载的话是一件很耗时的事情，说不定下完之后我就没心思再来安装了~）</p>

<p>就在这之前不久，我甚至连 Ghost 都没有具体操作过，备份还原也一直没明白其中的运作机制。<br/>
碰巧的是，在淘宝上面给我老妈买了一台带加密歌曲 tf 卡的收音机， <br/>
当时在往上面找到了破解这种 tf 加密卡的方法，<br/>
用到的便是两个这次要给我派上很大用处的 ghost32.exe 和  ghostxp.exe<br/>
ghost32.exe 是用来制作和释放 gho 文件的工具，而 ghostxp.exe 仅用来查看和提取 gho 文件中的子项目。<br/>
当时这两个工具一出手，立马就把加密 tf 卡给破掉了，1368 首老歌曲就这么简单的保存入了我的 mac 机器~<br/>
而且让我更加高兴的是，让我明白了 ghost 不过就是这么简单的一个东西~ <br/>
随着后面的使用和学习，我还发现 ghost 分为很多版本，有在 windows 下面跑的，也有在系统还没启动的时候运行的。<br/>
我很好奇的就是，系统还没启动的时候也有能用的 ghost。<br/>
当然最让我感慨的却是，ghost 原来也就是一个类似 winrar 的工具。<br/>
想了一想，ghost 不就相当于把整盘或者是整个分区压缩到一个扩展名为 gho 的东西么？  <br/>
然后，把 gho 文件释放到某个分区或是某个磁盘，不就相当于执行一个解压缩的过程么？  <br/>
好吧，ghost 就是这么简单一个东西，不多做讨论了~<br/>
相关资料连接：<br/>
<a href="http://wenku.baidu.com/view/c0736cde195f312b3169a57d.html">GHOST图解教程-备份_百度文库</a><br/>
<a href="http://wenku.baidu.com/view/3a94f73a580216fc700afd13">Ghost使用教程图解_百度文库</a></p>

<p>我做的第一件事情就是把 ghost 备份的 c 盘系统给还原到我的 另一个盘，然后设置成从第二个系统启动。<br/>
（这里直接用备份 c 盘的 gho 文件也是为了操作演练一下怎么将 gho 文件释放到一个分区，<br/>
而且因为是同一个机器里面 ghost 备份出来的系统，还原到别的分区里面以后也不用担心出现驱动不兼容的问题~）<br/>
毫无疑问这还是挺简单的，ghost 一出，谁与争锋？<br/>
但是问题是我没有空余的分区来承载 ghost  要释放的第二系统！<br/>
我 AMD 的老机器硬盘里面塞满了各种东西，空间挺不够用的，整理和转移资料就是一个很蛋疼的过程了。</p>

<p>之前我听说过有动态扩展分区的软件，能够在不损坏固有文件的情况下多开辟出一块分区出来。<br/>
于是我便在网上找了一下，确实打听到一个 叫 Partition Magic 的磁盘分区工具，<br/>
经过搜寻总算是给我找着了一个不是试用版的 pm，但是竟然在分区的过程中报错，可是整整地让我受了一惊~<br/>
后来我检查了一下，有一个几G 大小的 rar 文件给损坏掉了，之后我便没敢再去用 pm 了，实在太 tm 的惊险了。。 <br/>
后来在和我同事讨论的时候，他说这个 pm 都是一把老古董了，最好别去用它了。</p>

<p>动态扩展分区不行的话，那还是得清理出一块空闲的分区来了。<br/>
我当然还是硬着头皮整理和转移完毕了，我腾出了一个 80GB 的分区来。。<br/>
然后在这个分区里面又多划分出了 3 个分区，然后，我用ghost 将之前备份的 c 盘系统给释放到其中的一个分区里面<br/>
相关资料的连接：<br/>
<a href="http://www.360doc.com/content/09/0226/14/18929_2650563.shtml">如何给移动硬盘分区~图解</a><br/>
配置了一下 c 盘主系统 的 boot.ini 文件，重启之后如愿以偿的进入了逻辑盘里面的第二个系统里面。</p>

<figure class='code'><figcaption><span>boot.ini </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[boot loader]</span>
</span><span class='line'><span class="na">timeout</span><span class="o">=</span><span class="s">5</span>
</span><span class='line'><span class="na">default</span><span class="o">=</span><span class="s">multi(0)disk(0)rdisk(0)partition(3)\WINDOWS</span>
</span><span class='line'><span class="k">[operating systems]</span>
</span><span class='line'><span class="na">multi(0)disk(0)rdisk(0)partition(1)\WINDOWS</span><span class="o">=</span><span class="s">&quot;Microsoft Windows XP Professional C:&quot; /noexecute=optin /fastdetect</span>
</span><span class='line'><span class="na">multi(0)disk(0)rdisk(0)partition(3)\WINDOWS</span><span class="o">=</span><span class="s">&quot;Microsoft Windows XP Professional E:&quot; /noexecute=optin /fastdetect</span>
</span><span class='line'><span class="na">C:\GRLDR</span><span class="o">=</span><span class="s">&quot;深度一键还原 GHOST V11.0&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>简要的说明一下改动的地方和其作用：<br/>
[boot loader] 下面的 default= multi(0)disk(0)rdisk(0)partition(3)\windows 表示配置为从第 3 块分区启动。<br/>
重点看上面一行中的 partition(3)，这个 3 即表示从第 3 块分区启动（一般来说，第一块是 C 盘的话，那么第 3 块就是 E 盘了）~<br/>
如果是将第二系统装在D 盘的，那么便可以将这个数值改为 2。<br/>
另外，[operating system] 下面的第二行 multi(0)&#8230;.Professional E: &#8221; /noexecute=optin / fastdetect 是我复制粘贴地上一行，<br/>
只不过是改了一个地方而已：就是将 1 改成了 3。到这里的话，就算是配置完毕了，<br/>
重启以后将会读取 c 盘中的 boot.ini 文件，然后再跳到 E 盘里面启动第二个 Windows XP 系统~<br/>
顺便提一下，怎么返回到从 C 盘的系统启动呢？<br/>
只要在第二系统里面将 C 盘 boot.ini 文件中的 3 改回原来的 1 就行了。<br/>
或者是通过老毛桃 WinPE 转到引导的列表那里，选择从 &#8230;XP Professional C: 启动即可<br/>
（修改过 boot.ini 文件后选择列表会出现一些问题，你会发现键盘的上下键在选择的时候失灵了，<br/>
不过有专门做这种修复的工具，因为我有老毛桃，所以就有恃无恐了，<br/>
另外在 WinPE，第二系统里面都是随时可以改回来的，所以不是什么要命的问题~）</p>

<p>OK，总算是看到了一点儿希望了，那么接下来我就要着手深度 Ghost  Win7 旗舰版的安装了<br/>
于是我照蛇画龙，把装第二个 windows xp 的逻辑分区给快速格式化掉，<br/>
然后用 ghost 把深度完美Ghost Win7 旗舰版 iso 文件中的 win7.gho 释放到这个分区里面。<br/>
出乎意料的是这次竟然不行了，在 google 上面搜索了一番，找到了大概的原因： <br/>
从逻辑盘启动第二系统还是需要以 c 盘的 boot.ini 文件作支撑的，<br/>
如果逻辑盘里面的第二系统同样是 windows xp 还好，但是如果换成 Windows 7 的话却行不通了。。。</p>

<p>这里要说一下导致这种情况出现的原因：<br/>
Windows XP 和 Windows 7 是两种差异较大的系统，他们的启动机制是不一样的。<br/>
首先要介绍的是一个主引导记录存放格式的概念，这里要知道的有两种： nt52  和  nt60。</p>

<p>如果一个分区的主引导记录格式是 nt52，<br/>
那么它将被判别为 windows xp 系统，将会以 windows  xp 的方式启动。</p>

<p>照我的理解就是：<br/>
接下来将会用到  ntldr、grldr、boot.ini、NTDETECT.COM 等文件，<br/>
如果其中的某个文件，比如说 boot.ini 文件，找不到的话，系统就会无法正常启动。</p>

<p>如果一个分区的主引导记录格式是 nt60，那么它将会被判别为 windows 7 系统，将会以 windows 7 的方式启动。<br/>
这里和 windows  xp 有较大的区别了，因为  windows 7 的启动并不需要上面所说到的那些 boot.ini、ntldr 的文件，<br/>
它会用到的是一个名为 bootmgr 的文件，还有就是位于分区根目录下 Boot 目录中的 BCD 文件。</p>

<p>逻辑盘里面的第二系统没法正常启动的原因就弄清楚了—— windows xp 和 windows 7 的启动方式有很大的差别~<br/>
那到底应该怎么办才能让作为第二系统的 Windows7 正常跑起来呢？<br/>
解决办法也是有的，也挺简单的，只要在磁盘管理里面把 Windows 7 所在的分区设置为 “活动的” 就可以了~<br/>
（只有主分区才能被设置为活动的，而且再有多个主分区的情况下，只能有一个主分区保持活动的状态~）<br/>
这样的话在电脑开机的过程中就会自动选择活动分区里面的系统来启动。。。。<br/>
不过我又遇到问题了 —— 只有主分区才能被设置为活动的分区，扩展分区里面逻辑分区是不能被设置为活动分区的！！</p>

<p>主分区？扩展分区？逻辑分区？<br/>
新名词挺多的，不过不要害怕，也都是一些不晦涩的概念，<br/>
受 windows 系统 的限制，一块硬盘的主分区和扩展分区的总数最多只能为 4 块，<br/>
为了适应要求更多分区的需求，一块扩展分区是能够被划分为 n 多块逻辑分区的。<br/>
概括来说，主分区最多只能有 4 块，逻辑分区则允许包含很多块~<br/>
我陈述一下我所遇到的问题吧，我老机器的磁盘仅仅被划分成了一个主分区和一个扩展分区，<br/>
主分区C 盘 20GB 左右被拿来装系统，扩展分区 280 GB 左右，<br/>
然后扩展分区又被分成了三个逻辑分区，两个 80GB 的，一个 120 GB 的~<br/>
明白我我所遇到的问题了吧，我压根儿就拿不出第二个主分区来装 Windows 7 了！<br/>
然后我又花了很多时间在网上查资料，功夫不负有心人，我误打误撞在学习怎么制作 u 盘启动盘的时候接触到了老毛桃。。<br/>
老毛桃不是一颗桃子而是一个人，他开发出了一个叫老毛桃的 u 盘启动盘制作工具，<br/>
名气大得很，我在很早的时候就听说过他的大名了~<br/>
通过大好人老毛桃前辈开发出来的 u 盘启动盘制作工具，我三下五除二便制作好了一个 u 盘启动盘~<br/>
U 盘启动盘我不知道别人是不是这么叫的，总之就是一个包含了 WinPE<br/>
（Windows PotableEdition，便携版 windows）的 u 盘吧~<br/>
这个 WinPE 到底有多便携呢？经过我的观察，最新版 老毛桃工具中 的 WinPE 应该是小于 80 MB 的，<br/>
而最新版老毛桃工具中的 Win7PE 的大小好像仅为 86MB，记的不是很清楚，不过大概就这么大小吧~<br/>
WinPE 的作用还是挺大的，之前没有接触过也就不知道，到实际使用过之后才发现它的重要性。<br/>
WinPE 在启动的时候只需要将其本身加载到内存中去就可以了，<br/>
通过它你可以很轻松地给一台裸机划分磁盘、安装系统，<br/>
当然，在你的系统出现故障你再也无法进入系统的时候，它也能发挥出很大的作用：<br/>
帮你还原系统，修复系统，操作坏了系统的磁盘里面的文件，<br/>
当然我没有那个机会去体会他的重要性，但我仅仅只是那么想一想便能够认识到他的重要意义了，<br/>
问自己一个问题，系统坏了的时候如果没有装好 WinPE 的 u 盘，你该怎么办？<br/>
我来抛砖引玉给出我能想到的对策吧 —— 取出硬盘，<br/>
连接到能够正常使用的机器的主板上面，修复系统、ghost还原系统等~<br/>
而且这里还有一个问题，装系统的时候是要和机器里面的其他硬件相匹配的，<br/>
这样的话即使连接到能正常使用的机器上面，<br/>
你也不能在上面重装系统，因为装好了之后你再把硬盘接回自己的机器里面，<br/>
硬件配置什么的都已经出现了变动，很有可能就会开不了机了（除非两台机器的配置一模一样）~<br/>
当然我只是列举出一种非常极端的情况，一般情况下c盘系统坏掉的时候，<br/>
还是能够通过不依赖于具体系统的 ghost 来完成还原动作的，<br/>
我的老机器的系统能够连续使用 4 年就属于这种情况~</p>

<p>又扯远了，回头~<br/>
在进入老毛桃老前辈制作的 WinPE 系统之后，<br/>
我发现了一个比赛门铁克 Partition Magic 好用的多的免费分区工具——DiskGenius。<br/>
说他好用是因为让我有力无处使的逻辑分区竟然能在这个工具里面轻而易举的转变为主分区！<br/>
这可真是太好了，两下我便把我老机器里面的磁盘重新调整了一下，之后我得到了如下结构的硬盘分区结构：<br/>
3 个主分区+ 1 个扩展分区，1 个扩展分区里面再分出 3 个逻辑分区，这样我就有整个 6 块分区了。<br/>
我分出 3 个主分区是因为除了 win 7 ，我还想体验一下别的系统，诸如 solaries、mac 雪豹、linux、ubuntu 什么的~<br/>
这些系统里面 mac lion 系统我已经用过了，不过我还是想试一试能不能装一个 雪豹。<br/>
另外就是  linux 和  ubuntu 也接触不短的时间了，<br/>
但让我更加期待的是直接将他们安装到硬盘上面的流畅度是怎么样的~<br/>
（说实话在 虚拟机里面是弄不出什么名堂的，卡呀卡的让人没一点儿心思去畅快地玩儿。。<br/>
在我的印象里，也就是 windows xp 的虚拟机比较实用一点，<br/>
一些不放心的 exe 我就丢到里面执行，或者是病毒、木马测试什么的~）</p>

<p>好了，主分区的问题到这里又算是解决了，要提一下的是其间我还尝试了一下备份分区表的操作，<br/>
以后应该有用到的机会的，有备无患~<br/>
这样我便成功地将 windows 7  ghost 文件释放到了主分区的一个盘里面，<br/>
弄好了以后我马上就在管理磁盘里面将包含了 ghost win7 的分区设置为活动分区，接下来就是重启等待着解开 Win7 的面纱~<br/>
成果不一定是甜蜜的，但道路却是很曲折，我又没能如愿以偿~<br/>
在重启后进入 Win7 的过程中，竟然爆出 missing operating system 错误~<br/>
我唯有向可用的网络伸出救援的手，我转到百度百科的词条里面查阅了一下 Ghost win7 的相关资料<br/>
资料连接：<a href="http://baike.baidu.com.cn/view/4707686.htm">百度百科_ghost win7</a><br/>
这个词条里面包含了一些 FAQ，FAQ 里面正好有我所遇到的问题，<br/>
不过我当时并没有按照那么做，也不知道怎么弄的，后来重启了一次，竟然不再显示 missing operating system 了，<br/>
然而也并没有让我如愿进入 win 7，而是向我提出了第二个问题：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>文件：\Windows\system32\ntkrnlpa.exe  
</span><span class='line'>状态：0xc0000428  
</span><span class='line'>信息：Windows 无法验证此文件的数字签名</span></code></pre></td></tr></table></div></figure>


<p>我还是挺无助的，继续在网上找解决方案，终于是功夫不负有心人，<br/>
贴出相关资料的链接：<br/>
<a href="http://blog.sina.com.cn/s/blog_6fd345430100o07a.html">双系统：XP 上装 GHOST 版 win7 的一些心得</a><br/>
大意就是D盘里面的 win7 在验证数据签名的时候验证的不是 D 盘里面相关文件的签名， <br/>
而是错误地跑到 C 盘里面去验证 Windows XP 类似文件的签名了，<br/>
而 C 盘下 windows XP 相关文件的上面是不包含这种签名的，无怪乎这里就要验证出错了~<br/>
为什么会这样呢？因为 Ghost Win7 实在 c 盘上面安装好以后所制作出来的，而我用的时候却把它还原回了 D 盘~<br/>
好了，问题的表层原因和深层原因都算是浮现出来了，怎么来解决这个问题呢？<br/>
再参看一篇资料的连接：<br/>
<a href="http://www.360doc.com/content/12/0129/20/1309227_182595344.shtml">【多系统引导启动原理】——WinXP、Win7 和 WinPE 三系统启动的方法</a><br/>
它的里面提到了一个叫做 bcdtool 的工具，这个工具就是用来操作 Win7 系统 Boot 目录下面的 BCD 文件的，<br/>
怎么操作呢？这里上面两篇资料里面说地不是很清楚，我得补充一些东西：</p>

<p>bcdTool 1.09.07.21 的使用比较奇葩，有非常要注意的几点：<br/>
1。你不能选择打开目标 bcd 文件，你只能把你要操作的 bcd 文件放到与 bcdtool.exe 相同目录里面，<br/>
这样的话你再打开 bcdtool 的时候，就会默认使用同一目录里面的那个 BCD 文件；<br/>
2。而且 bcdtool 也不能完成保存文件的操作，你只能在修改完毕之后在右边的键值对面板里面单击右键，<br/>
在弹出的右键菜单中选择“保存”来完成文件的保存~<br/>
3。你直接在 Windows Boot Manager 对应的右边的键值对里面修改 device 为 partition=D: 是没用的，<br/>
必须要右键 Windows Boot Manager，新建出一对东西来（[1]Windows Boot Loader  和 [2]Windows Legacy OS Loader）<br/>
我试着删除这两个其中的一个，发现不能够删除，只能是这两个一起存在。<br/>
然后需要做的就是在 [1] 和 [2] 里面更改键值对，改完之后一定要记得右键保存~<br/>
我观察了一下，键值对较多的一个对应的是 Win 7 系统的，键值对较少的对应的才是 Windows XP 系统的。<br/>
Windows XP 的键值对不用更改，要改的是键值对较多的对应 Win 7 的，<br/>
那么要改什么？很简单，改两个就行了，一个是 device 键，一个是 osdevice 键，统统改成 partition=D:<br/>
（这里因为我的 win 7 是装在  d 盘的，所以 partition=D:，这里的 partition 即是分区的意思~）<br/>
4。修改完了以后还是要记得再保存一下，然后就可以将 bcdtool.exe 所在目录中的 BCD 文件搬回老地方了，<br/>
这里我 win 7 是装在 D: 盘的，所以我把这个 BCD 文件搬回  D:/Boot/ 目录下面<br/>
Boot 是个隐藏的文件夹，你需要在文件夹选项中将 显示所有文件、显示系统隐藏文件打开才能看到~</p>

<p>经过了上面一系列的操作，我终于在重启之后进入了 Win 7 的系统安装环节~<br/>
当 win 7 的四瓣飞出来的时候，我简直觉得美呆了（当然和 Mac 的还是没得比，在我心中 mac 才是真正的 no。1）<br/>
其实我当时也是挺惊讶的，我还以为直接就能进 win 7 系统了，没想到到头了即使是 ghost 版的 win 7，<br/>
也还是要经历安装驱动等一些的步骤~<br/>
令我感到很气恼的是，进去之后就发现系统里面给装了很多软件，<br/>
这样的系统没法给我干净的感觉，我喜欢的是一个个地把自己需要的软件给装进来，<br/>
而不是在正常使用之前还要把一些无用的软件给删掉~<br/>
当然我也只是牢骚一下罢了，想他们弄出这么一个方便的东西来也不容易，预装一些软件盈点儿利也是能够理解的~<br/>
至此就算是告一段落了，win7 成功安装成 D 盘里面的第二系统~</p>

<p>最后，提出一些还要注意的地方：<br/>
1。win 7 好不容易装好了，清理干净、卸掉无用软件、装好必用软件、打好补丁以后，记得用 ghost 备份一下，<br/>
以后再要用到的时候就不用重新来安装一次了~<br/>
2。Windows XP 里面的一些软件要注意下，不要随随便便地就给安装了，拿我遇到的一段经历来说吧：<br/>
我在 win 7 里面装了一下在 windows xp 里面适用的一个游戏——《机械迷城》，<br/>
这之后还运行不到两下，我在用 alt + tab 切换程序的时候，win7 就蓝屏了~ <br/>
当然也不排除可能由其他原因所致，诸如：<br/>
win 7 的 bug，不能快速重复的按下 alt + tab，<br/>
或者是因为我安装了什么不兼容的软件所致，比如我将 flash 升级到最新版，<br/>
再或者是因为我将主机箱横躺着所导致的（后面我将机箱扶正以后进入了win7系统，不过那是再我第二次安装 win 7 以后），<br/>
还有可能就是过程中我安装的什么新驱动导致了蓝屏的出现，<br/>
最后的话就是新软件有嫌疑了，因为我当时确实安装了几个软件，比如：chrome、360安全卫士等~<br/>
3。我玩老毛桃 Win7 PE 的时候发现有一个修复引导的工具，就用那个东西试了一下，<br/>
想看一看到底能不能修复好 win7 系统为正常的引导，我还特意将正常的 BCD 文件保存了起来，<br/>
在 D 盘的 Boot 目录下面换回了以前那个不可用的 BCD 文件，<br/>
然后我就很猛地开始做修复了。。。。。。。<br/>
修复完了之后我重启转为硬盘启动到 win 7，这时候大麻烦来了，修复了以后 win7 不但不能用了，<br/>
在我将修复新增的几个文件比着日期删除掉以后，在将可用的 BCD 文件替换回来以后， <br/>
Win 7 依然萎着！爆出的错误信息为：boot.ini非法，正从 c:\windows 启动<br/>
我排查了好几个小时，终于在网上找到了相关问题的解决方案：<br/>
其实也就是我之前提到的那个 nt52 与 nt60 的问题，
老毛桃引导修复应该是把 win7 的 nt60 改为 Windows XP 的 nt 52 了，<br/>
这样的话，Win7 系统盘里面出现找 boot.ini 文件的举动就不难解释了~<br/>
回头看，怎么将 nt52 修改回 nt60 ？<br/>
使用 bootsect.exe 工具在命令行下面执行 “bootsect.exe /nt60 d:” 命令即可！<br/>
相关资料：<a href="http://baike.baidu.com/view/2789343.htm">百度百科_bootsect.exe</a><br/>
第一个参数是转换为哪种格式，第二个参数是作用在哪个分区，这里我 Win 7 在 D 盘，所以作用在 d: 上面~</p>

<p>OK，安装双系统到这里就算是结束了，这才是第一步，<br/>
我后面修复 mac 系统的路还是挺漫长的，得做好心理准备~<br/>
附相关工具的下载连接：<br/>
<a href="http://download.csdn.net/detail/yang3wei/4963762">系统维护工具辑录（安装Ghost Win7必备）</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[主板放电之后 mac 无法正常启动之谜]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/zhu-ban-fang-dian-zhi-hou-mac-wu-fa-zheng-chang-qi-dong-zhi-mi/"/>
    <updated>2013-02-08T01:16:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/zhu-ban-fang-dian-zhi-hou-mac-wu-fa-zheng-chang-qi-dong-zhi-mi</id>
    <content type="html"><![CDATA[<p>前段时间，在插上带 tf 卡的读卡器的情况下打开了我的 mac 主机，之后我便陷入了一连串的麻烦之中~</p>

<!-- more -->


<p>平时开机都是很正常的，这次却意外的在屏幕上显示出了黑底白字的一串英文：
reboot and select proper boot device.
大意也就是叫我选择一个可以被启动的设备来重启。
我也按照文字提示做了，我拔掉了插入 tf 卡的读卡器，然后就重启了。
可即便如此，重启了以后还是之前的老样子，依然给我打印出那段文字。
就这么的搞了几次，弄得我有些心烦了，于是便拆开主机箱果断地给主板放放电，让它领教一下我的厉害。。
可我就是没想到因为这么草率的一个举动，就让我白白忙活了好几天，直到今天下午才把系统给修复回来。
说说当时的情况吧，放电了以后我匆匆忙忙地就盖好了机箱盖儿重启了，
可我等来的不是用户登陆界面，而是无止尽的白色背景缺苹果。。
后来我终于还是妥协了，我不再进主分区的系统了，我试着看能不能进入恢复分区的系统
（这个分区里面也有一个 mac 系统，用来做主分区 mac 系统的修复用~）
可是在我试了几次过后，还是失望了，主分区和恢复分区里面的两个 mac 系统竟然都进不去了~</p>

<p>分析一番后我怀疑是放电过后 bios 设置被还原回初始状态了，否则再怎么出问题，恢复分区里的 mac 也没理由进不去的。
同事们也给我支招，说要把 bios 里面的 ahci 选项给开启，于是我便跑到 bios 设置里面找啊找，
找了很久几乎都把 ami 的 bios 设置翻了个遍，还是没能找到带 ahci 字样的相关选项。
这之后我便进入了很长一段时间的摸索阶段，偶然在网上看到有人说有些主板默认就是开启了 ahci 选项的，即便找不到它。。。。
查阅资料了好一段时光我才获悉这完全就是误导！！！
首先我查的是 ami 的 bios 怎么开启 ahci ，找到了有用的资料，然后我知道是在南桥芯片的设置里面的。
因为我在 bios 里面鼓捣了很久，印象中南桥芯片的设置里面压根就没看到有设置 ahci 的那个选项。。
经过刻苦的搜索，我又获得了一些有用的讯息：
1。与 ahci 设置相关的封装在南桥芯片里面的硬件名叫 ich7 什么的
（有 ich5，ich6，ich7，ich7r，ich8，等等）
2。并不是所有的 ich 都支持 ahci，包括 ich5，ich6，ich7 就不支持 ahci
3。我查阅了我所使用硬盘的参数，发现我的南桥里面正是使用的 ich7
综上所述，我的南桥芯片设置里面找不到 ahci 相关的设置就不奇怪了，因为在里面的 ich7 压根儿就不支持 ahci 的功能啊~</p>

<p>好吧，既然不支持，那怎么才能让他支持起  ahci 模式来呢？
mac os x lion 跑起来必须要  ahci 的支持，而我的机器在正常运作的时候确实是能够运行 lion 系统的，
那么我就推断出一定是有方法能够让主板提供对 ahci 的支持的。。。
然后又是漫长的搜索了，功夫不负有心人，我找到了一个叫天缘的博客，
里面介绍了一种安装 ahci 驱动的法子，当时很开心满以为找到解决方法了，
可后来操作实施的时候却碰到了问题， 那个 ahci 驱动根本就不能装到 ich 7 里面，
原因是这样的，天缘介绍的方法有一个替换文本的操作，替换的文本就是  ich 的设备编号，可是我找不到 ich7 的编号。。
之后我又仔仔细细地看了一遍天缘写的那篇文章，它里面确实提到那种安装 ahci 驱动的方法是不能应用与 ich 7 的。
就这样我又空欢喜了一场，再次回到不知所措的状态。。。</p>

<p>转机是这么来的，之前和卖给我 mac 机器的技术支持人员交流了一下，
当时并没有将这个问题给解决下来，他的建议是叫我交 150 块钱重装系统
我挺犹豫的，有如下几个原因：
1。路途遥远，机器运来运去的，麻烦不说，还容易损坏，而且我也没有邮寄主机箱的经历。
2。150块钱安装费也不是一个小数字，还是有些不舍，话说我自己如果能解决这个问题的话，不仅能省钱还能学到东西。
3。盘里面的数据安全问题，我并不希望数据毁掉或者泄露掉~
正是由于上述的几个原因，我并没有按照客服技术人员说的去做~
但是后来我折腾了两日实在没耐性弄下去了，于是我想到客服的员工不仅仅只有那一位，
还有一个最大的老板在里面，而且他的旺旺一般都是在线的，何不去试试手气呢？
老板就是老板，霸气，没有客服打杂工的那种市侩，而且我自己也摸索了很长一段时间，
一针见血的就提出了自己的推测 —— 断电后 bios 里面的某个设置被弄错了，导致无法正常进入主分区和恢复分区的 mac 系统~
老板的实力刚刚的，第二句话就给出了我解决方案 —— 在 bios 设置里面将 USB 设置的 high-speed 改为 full-speed，
当时还觉得挺奇怪的，mac 不能正常启动和 usb 设置有半毛钱的关系么？
不过虽然觉得奇怪，我还是照老板说的做了，三下五除二连接好我的 mac 机器，进入 bios 设置将 USB 选项更改了一下，
完了以后重启电脑，口中不断地默念“God bless me!”，神奇的一幕出现了，我心爱的 mac 终于回复了正常。。
那一刻我简直是激动地热泪盈眶，终于弄好了，终于可以干事了，简直是太好了~</p>

<p>虽然系统正常的恢复了过来，但是作为一次惨痛的经历，这无时无刻不提醒着我，
一定要知之为知之，方能在以后再次碰到此类问题的时候不手忙脚乱~
第一个疑问便是—— 难道不启动主板的 ahci 选项也能正常跑起  mac lion 来？
结合我之前修复系统的过程中所查阅的一些资料来思考一番，我觉得可能存在如下的一中可能：
即便主板上没有设置 ahci 的选项，即便在没有 ahci 选项的情况下默认不是 ahci 模式，
也可以通过高层操作系统中的驱动支持来弥补这块空缺！
我是有依据的，因为之前我在 csdn 的下载频道里面看到过类似，“黑苹果 + 免 ahci 驱动” 的资源~
我还下载了一个看了一看，其实就是一个 kext 结尾的 mac os 驱动文件，名为 AppleIntelIPIIXATA.kext、ATAPortInjector.kext
然后我猜想我的黑苹果扩展驱动目录中也应该存在这些驱动文件。
奇怪的是我没有找到这些驱动文件，但是通过我所查找到的资料，也有提到还存在其他的驱动文件是提供 ahci 弥补功能的，
诸如
  PC 上安装Mac OS X(四)——安装雪豹
 这篇资料中所提到的：IOAHCIBlockStorageinjector.kext 和 AppleAHCIPort.kext
这两个文件也是起到弥补 ahci 设置缺失的功能的
看到这里时我又跑到 mac 系统的扩展驱动目录（SLE——/System/Library/Extensions、EE——/Extras/Extensions）
里面找了一下，这次总算是有所斩获了 ——
在 SLE 目录下我找到了 AppleAHCIPort.kext 文件，
在 EE 目录下我找到了 IOAHCIBlockStorageinjector.kext 文件，
很吻合上面那篇资料里面所说到的情形，作者果然还是所言非虚啊~</p>

<p>下面手打 360doc 里面自己觉得有价值的一段文字：
导致五国的原因有很多很多，比如“你的 cpu 不支持64位和 sss3 指令集” 或者某个 kext 冲突之类的。
如果是前者，问题还算好解决。只要在 bootThink 图形界面中按 f8，输入 -x32 启动即可；
另外，对于某些只支持32位的 kext 也要使用这种方式来启动；
还有，也可以键入 cpus = 1（强制多核 cpu 使用单核）试试可不可以启动。
如果是后者，我们就要输入 -v 启动啰唆模式（Verbose）来看看问题出在哪里了。
举个粒子，输入 -v 启动之后会出现一大堆的 代码，暂时不去管他，最后他会停止在某处。
找到  panic 这个词，我们可以在这下面看到问题所在 。panic 原本是 恐慌的意思，
在这里表示系统遇到致命错误。假设错误代码如下面所示，我们就知道问题处在 AppleIntelCPUPowerManagement，
查询一些资料就知道只要安装 NullCPUPowerManagement.kext 即可解决问题。
依次类推，其他问题也可以按照这个思路下去。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[沉溺于 Mac，沉溺于 XCode]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/chen-ni-yu-mac-chen-ni-yu-xcode/"/>
    <updated>2013-02-08T00:54:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/chen-ni-yu-mac-chen-ni-yu-xcode</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>2012 年的最后一天，唠几句闲话先~</h2>

<p>从 2011 年 6月份开始踏入 iOS 开发行列，如今已经一个半年头了。
遇到的第一个问题便是对 objective-c 一点都不懂，作为 c 的扩展，oc 和 cpp 可谓是一对亲兄弟。
现在看来，只是 oc 那种的中缀式语法让我感到比较奇葩，让当时作为菜鸟的我难以理解。
我在大学的专业学的是软件开发与项目管理，c、数据结构、离散数学什么的都开过课程，
但作为逃课王的我，每每挂科后于补考时咸鱼翻身总是那么地稀松平常，
没有细数自己挂过多少门科，但很庆幸的是，没有一门是在补考时没有扳回来的。
记得逃课最长的一次记录是连续 20 多天没有去上主修专业的课程，
我的专业老师托与我同寝的兄弟给我传话，再不去就要叫家长了。。。
当然，我后来还是妥协了，谁也不愿意让老爸老妈来大老远地跑过来视察自己糜烂的大学生活~</p>

<p>总的来说吧，虽然我还是挺放任、挺邪恶的，但我还是有一颗向上的心。
依然能够想起当年我在长沙的寒冬于小树林里学习《计算机网络》的情形，难得我也有认真的时候。
除此之外，java 的学习我也挺用功的，还写了不少小玩意儿来自娱自乐，
当初学习 c 语言的时候我就没正儿八经的听过几节课，教 c 语言的老师后来也是果断地就把我给做掉了。
说来我对自己的专业还是感觉挺恶心的，在我的认识里，软件开发与项目管理 == java | c# web项目
这和我认识里的软件、项目可差得远了，不过我承认，这确实是我想的有些美了。</p>

<p>PS：
我之前以为软件开发与项目管理是一个很宽的范畴，其中就包括了游戏的开发，
也就是说，在前面打好了基础之后，后面自己能够根据爱好自由地选择出口，
但是我错了，大专里面的专于一点让这成为梦幻的泡沫。</p>

<p>2011 年 6 月份我从学院里面毕业了，我始终是不太愿意去找一份 web 相关的工作，
后来我有在深圳工作的朋友邀我一起做 iOS 开发，于是我便打扮地像蜗牛一样背着重重的壳朝着深圳出发了。
之后也发生了很多事情，到这里有点儿犯懒了，下次再补上吧。</p>

<h2>接下来进入重点，下面是一些有助于开发的知识：</h2>

<p>关键字：<code>Mac OS X Lion 10.7.2</code>、<code>XCode 4.2</code>、<code>hotkey</code>。
备注：随着了解的不断深入，我越来越沉溺于 mac 和 xcode 无法自拔，真 tmd 太优秀了。</p>

<p>0。mac 系统通用快捷键（mac 下的应用多数会往这些标准看齐）
command + w: 关闭当前窗口
command + q: 退出程序（Google Chrome 有点奇葩，按下之后还需要hold 那么一小会儿才能退出）
command + m: 最小化当前窗口（怎么不用鼠标将最小化于dock 上的窗口还原？spotlight 或 control + f2->window 菜单项都行）
command + h: 隐藏当前应用的所有窗口
command + c: 复制
command + v: 粘贴
control + F2：激活菜单栏（这个关机的时候比较好用，手不用脱离键盘了）
command + f: 寻找
command + space: 切换输入法
command + tab：切换程序（这里又要注意的地方，切换过程中最好不要移动鼠标，否则容易出现混乱切换的情况）
control + space：spotlight</p>

<p>spotlight 这东西设计的很精妙，一些人说这没什么用要禁掉乃是因为没有找到正确的使用方法。
从设计上来看，spotlight 位于屏幕的最右上角，就一个放大镜的小图标，
可以通过 control + space 快捷键轻松调出，然后就会将焦点转移到搜索框里面，
在这里可以很便捷地搜索自己想要找的东西，包括各种可用的 Applications，
这也是我推崇 spotlight 一个很重要的原因，因为有了这个东西，
手指完全不用脱离键盘你就可以启动任何为你所需要的应用程序。
不知道一般家庭用的 mac 用户对这点是否有如此严苛的需求，但作为开发人员而言，
穿梭于各种应用的功能之间，是在平凡不过的事情，这一点给我带来了很大的便利性。
举例说明：
在要启动 XCode 开始一天工作的时候，按下 control + space 调出 spotlight 搜索框，
键入 XCode 后，搜索框下面会列出各种各样的候选条目，可以发现 XCode.app 是放在很前列的，
只需要配合上下键、回车键，就达到了快捷启动 XCode 的目的。</p>

<p><strong>现在我已经越来越意识到快捷键所带来的便利</strong>，这是也是有根源、有历史的。
传说中的代码编辑神器 vi、vim、emacs，无一不在快捷键上面独树一帜。
它们的理念就是在编码过程中抛弃对鼠标的操作，甚至抛弃对上下左下键的操作。
以达到最神速、迅捷的编辑目的。
有些特色所带来的便利性没有体会过是很难以理解的，这就是导致一些很优秀的东西口碑褒贬不一的重要原因之一。</p>

<p>最后要说的就是 Dock，你可以通过 command + alt + d 隐藏或者呈现 dock，
也可以选在把 dock 放在左、下、右任一个方位，你可以把 Applications 文件夹的应用程序拖拽到 Dock上面，方便你的使用，
也可以在不需要的时候把dock 上面的条目拽出 Dock 从而移除它。
对比 windows 来看，Dock 还是一个非常舒服的东西，特别是 mac 界面本身就非常精美，
一个个的应用图标排布在 Dock 上面，再配合Magnification 的放缩效果，可谓是琳琅满目，
反观windows xp，底部一个系统的任务栏，应用程序的的菜单本本分分的布置在自己窗口的顶部，
孰好孰坏就不多做评论了，唯一确定的一点是我是更倾向于 mac 的设计风格的（难道是因为我用 windows 那么多年已经厌倦的原因？）
Dock 上面的两个重量级功能：Mission Control 和 Launchpad。
Mission Control 让我在单屏显示器上面获得了多屏显示的感受，而 LaunchPad 则让启动想要的程序变地无比简单。
对比 Windows，LaunchPad 这种模仿 iOS 风格的以面、网格呈现可用条目的方式，无疑比那层层弹出的列表方式更为高效、优秀。</p>

<p>1。Finder 的最常用快捷键：
space：预览文件
command + down：打开文件
command + backspace：移到废纸篓
command + ctrl + 0 ~ 7：按各种方式规整地排列子文件
command + shift + g：前往某个路径
command + 1 ~ 4：更换呈现方式
command + shift + f：All my Files
command + shift + o: 打开文档目录
command + shift + d: 打开桌面目录
command + alt + L: 打开下载目录
command + shift + h: 打开home 目录
command + shift + C: 打开我的电脑
command + shift + A: 打开应用程序目录
command + shift + U: 打开工具目录</p>

<p>2。编码神器 XCode 最有价值的快捷键
command + e: 将所选中的文本传递到搜索框（但搜索框不会呈现出来）
command + f: 寻找
command + g: 寻找下一个
command + L: 定位到当前所编辑的代码文件的第多少行
上面这些快捷键能够很轻松的完成编辑点定位的功能，再次我们心爱的让鼠标被冷落在一旁。
使用说明：
有时候报错会报出错误出现在哪一行，诸如opengl es2 check_gl_error，这里 command + L 能发挥出很好的行定位作用。
再个就是 command + f 与 command + g，
command +f 键入自己想要定位到的点前面的几个符号进行搜索，
配合 command + g 寻找下一个，定位到目标点位以后，按下  esc 关闭搜索功能，就完成了编辑点的精确定位。</p>

<p>控制台相关快捷键：
command + shift + c: 打开控制台视图
command + shift + y: 关闭控制台视图（这里我觉得不是很好，完全可以和打开使用一组相同的快捷键，易记）
command + k： 清除控制台输出
不得不说一下，mac 的界面优化做的实在是太到位了，
简单说来就是你想要的功能都还在那儿，但是他们所占据的屏幕面积却是非常非常的少，
一旦你要用到他们的时候，用起来也不会觉得很难找、很难用，
这就是 mac 界面的精髓所在了（当然这要建立在对 mac 足够了解的基础之上）。</p>

<p>产品相关的快捷键：
我相信这是最最常用、最最贴身，人人都要牢记的一块了~
command + b: 编译、生成
command + r : 运行
command + i: profile（找不到一个好的翻译词，用 Instruments 做内存占用的分析是必须走的流程）
command + shift + b: 分析（这种特殊的编译有助于找到比较明显的泄露的代码）
command + shift + k: 清理（这也是很常用的功能，不少问题都是通过清理后重新编译的方法来解决的）
command + q: 退出（之所以放在这里是因为，有时候你的 xcode 出现怪异行为的时候，退出重启无疑是最佳方案）
举例而言，xcode 4.2 里面编辑签名配置的时候，有时候会出现改不动的情况，这里退出重启就很有用了。
顺带说一下xcode 界面左上角圆形stop 按钮右侧的矩形条，这个东西用来控制以 debug 还是 release 的模式编译产品。
debug 模式下会打印出各种各样的 log，这样有助于我们解决遇到的bug，但是执行效率会被降低。
release 模式下 debug 打印则被禁止掉，如果是真机测试的话，所得到的效果是最接近用户使用的效果的。
发布产品也必须发布 release 模式下生成的产品。</p>

<p>特别把 xcode 工程浏览视图中的 show in finder 功能拿出来说一下，
在 xcode 中这个简单实用的功能，你要在 eclipse 里面办到，那可就不容易了。
在使用 xcode 之前，eclipse 一直是我最忠实、心爱的伙伴，但就这点来说，eclipse 还是让我很失望的。</p>

<p>还要说一说 XCode 的视图控制设计，是我见过的最优秀的了
我一般是把右侧的属性栏视图关掉，仅留下工程结构视图和 代码编辑视图（做游戏对属性栏的需求不是很多）~
在代码编辑区按下 command + shift + j 在工程目录视图中可以定位到当前编辑文件的所在的位置
command + 0~ 9 的数字可以在与工程目录视图并列的其他数个视图中快捷切换，
特别是 command + 0，能够将 XCode 左侧栏完全的隐藏、打开，
另外，整个过程的过度效果也是非常舒服的，比 eclipse 的最大化编辑器、还原到正常尺寸更优秀，
隐藏左侧栏在做代码文件的版本对比的时候是非常实用的，
还有就是做代码移植的时候，让代码编辑区域贴紧窗口左壁能够得到更合适的视角。
暂时就说这么多，伴随这一年多的使用，积累下来的经验、技巧肯定还有遗漏的地方，
后面想到了会更新上来，自恋一下，务必让这篇文章成为 mac、iOS 开发者心所向往的神奇篇章~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ant 自动构建 build.xml]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/05/ant-zi-dong-gou-jian-build-dot-xml/"/>
    <updated>2013-02-05T13:10:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/05/ant-zi-dong-gou-jian-build-dot-xml</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>功能：</h2>

<p>生成的 <code>build.xml</code> 用来提供自动以 eclipse 执行，<br/>
自动打 jar 包，自动以 ant 执行，自动执行生成的 jar 等功能~</p>

<p>非常便捷的生成 java 工程的 <code>build.xml</code> ，<br/>
<code>build.xml</code> 常用配置我给抽取到 <code>build.properties</code> 文件里面了。<br/>
自此就可以尽可能少的去编辑、查看 <code>build.xml</code> 文件了<br/>
（新增其他格式的资源文件要改动下）<br/>
（第一次生成 build.xml 时会从 libs 目录中提取相关的数据）<br/>
（生成完毕之后新添加的外部 jar 包也要在里面新增下）</p>

<p>PathUtil 提供传入资源文件名称，返回完整包路径的便捷方法 getFullPath()，<br/>
如，传入 <code>123.png</code>，返回 <code>/org/bruce/pocket/tools/res/123.png</code><br/>
这种格式的 “包路径” 能够很便利地被 java 程序使用，如：</p>

<figure class='code'><figcaption><span>code snippet  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="err">类名</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&quot;/org/bruce/pocket/tools/res/123.png&quot;</span><span class="o">);</span>
</span><span class='line'><span class="kt">byte</span><span class="o">[]</span> <span class="n">bytes</span> <span class="o">=</span> <span class="n">IOUtils</span><span class="o">.</span><span class="na">toByteArray</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>
</span><span class='line'><span class="n">IOUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里得到的字节数组可以很方便的转换为字符串、图片对象什么的~<br/>
转换为字符串：<code>google -》熔岩 51Blog-》StringFileBridge.java</code><br/>
转换为图片：<code>Image image = ImageIO.read(bytes);</code></p>

<h2>原理：</h2>

<p>把 <code>org.bruce.pocket.tools.res</code> 包里面的<br/>
<code>ant_template.properties</code> 、<code>ant_template.xml</code> 读取为字符串，<br/>
做一些简单的文本替换，然后将新生成的字符串<br/>
写入到 java 工程根目录的 <code>build.properties</code> 、<code>build.xml</code> 文件中，</p>

<p>有一些必须要遵循的要求：<br/>
资源文件必须放置在以 <code>.res</code> 结尾的 <code>package</code> 里面，<br/>
对于 <code>PathUtil.java</code>，根据个人喜好来定义 DOMAIN（我的 domain 是 <code>org/bruce/</code>）<br/>
生成的 <code>build.properties</code>、<code>build.xml</code> 也只是初步的，<br/>
<code>build.properties</code> 里面的有些属性是必须要写上的，<br/>
比如说，桌面的路径<br/>
（这里涉及到将生成的 jar 文件复制到桌面的操作）</p>

<p>还有就是应用程序的作者、当前版本、名称等，<br/>
程序的名称我做了处理，直接拿工程文件的名称来用。<br/>
版本、作者虽然不是重点，但规范的来说，<br/>
最好还是写上，也免得 ant 执行打 jar 包操作的时候出问题。</p>

<h2>上代码：</h2>

<!-- more -->




<figure class='code'><figcaption><span>GenBuildXml.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">bruce</span><span class="o">.</span><span class="na">pocket</span><span class="o">.</span><span class="na">tools</span><span class="o">.</span><span class="na">items</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.commons.io.IOUtils</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.bruce.pocket.tools.gui.Dta</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.bruce.pocket.tools.gui.GUI</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.bruce.pocket.tools.utils.IOBridge</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.bruce.pocket.tools.utils.PathUtil</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author Bruce Yang</span>
</span><span class='line'><span class="cm"> * 为 eclipse 的 java 工程自动生成 build.xml~</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">GenBuildXml</span> <span class="kd">extends</span> <span class="n">Dta</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">GenBuildXml</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getSimpleName</span><span class="o">());</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">setTips</span><span class="o">(</span><span class="s">&quot;为 eclipse 工程自动生成 build.xml~&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">setDesc</span><span class="o">(</span><span class="s">&quot;&lt;html&gt;使用说明：&lt;br/&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s">&quot;我做了限制，一次只能拽入一个 java 工程文件夹&lt;br/&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s">&quot;而且对拽入的文件夹会执行检查操作，以提高操作安全性&lt;br/&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s">&quot;检查：是否存在 .project, .classpath 文件，&lt;br/&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s">&quot;是否存在 src 文件夹&lt;/html&gt;&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">setImgName</span><span class="o">(</span><span class="s">&quot;w400_h300.png&quot;</span><span class="o">);</span>  <span class="c1">// 窗口大小由图片大小所决定~</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">handle</span><span class="o">(</span><span class="n">File</span> <span class="n">f</span><span class="o">)</span> <span class="o">{}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">handleEntries</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">File</span><span class="o">&gt;</span> <span class="n">listEntries</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">File</span> <span class="n">firstItem</span> <span class="o">=</span> <span class="n">listEntries</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// 一次只能处理一个工程文件，而且仅在拽入的是单个文件夹的时候才有效~</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(!</span><span class="n">firstItem</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;不是一个工程文件夹（目录）！&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">listEntries</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;一次仅处理一个工程文件夹！&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">bSrcDir</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">bDotProject</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">bDotClasspath</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">File</span><span class="o">[]</span> <span class="n">files</span> <span class="o">=</span> <span class="n">firstItem</span><span class="o">.</span><span class="na">listFiles</span><span class="o">();</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">files</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;src&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">bSrcDir</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;.project&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">bDotProject</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;.classpath&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">bDotClasspath</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// 为确保操作的安全执行，必要的检查是不可忽略的~</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(!</span><span class="n">bSrcDir</span> <span class="o">||</span> <span class="o">!</span><span class="n">bDotProject</span> <span class="o">||</span> <span class="o">!</span><span class="n">bDotClasspath</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;生成 build.xml 失败，该文件夹不具有 .project、.classpath 或 src 目录~&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;This is a valid java project directory!&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// 于根目录生成 build.properties 文件~</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">propPath</span> <span class="o">=</span> <span class="n">PathUtil</span><span class="o">.</span><span class="na">getFullPath</span><span class="o">(</span><span class="s">&quot;ant_template.properties&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="n">propPath</span><span class="o">);</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">strProp</span> <span class="o">=</span> <span class="n">IOBridge</span><span class="o">.</span><span class="na">stream2String</span><span class="o">(</span><span class="n">is</span><span class="o">,</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">IOUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>
</span><span class='line'>      <span class="n">strProp</span> <span class="o">=</span> <span class="n">strProp</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;__APPLICATION_NAME__&quot;</span><span class="o">,</span> <span class="n">firstItem</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">File</span> <span class="n">buildProp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">firstItem</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">()</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">&quot;build.properties&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">IOBridge</span><span class="o">.</span><span class="na">string2File</span><span class="o">(</span><span class="n">strProp</span><span class="o">,</span> <span class="n">buildProp</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// 于根目录生成 build.xml 文件~</span>
</span><span class='line'>      <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>      <span class="n">File</span> <span class="n">fLibs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">firstItem</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">()</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">&quot;libs&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">fLibs</span><span class="o">.</span><span class="na">exists</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">fLibs</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">File</span><span class="o">[]</span> <span class="n">jarFiles</span> <span class="o">=</span> <span class="n">fLibs</span><span class="o">.</span><span class="na">listFiles</span><span class="o">();</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="n">File</span> <span class="n">jarFile</span> <span class="o">:</span> <span class="n">jarFiles</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">jarFile</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">endsWith</span><span class="o">(</span><span class="s">&quot;.jar&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\t\t\t&lt;zipfileset excludes=\&quot;META-INF/*.SF\&quot; src=\&quot;./libs/&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">jarFile</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>                  <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\&quot; /&gt;\n&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">xmlPath</span> <span class="o">=</span> <span class="n">PathUtil</span><span class="o">.</span><span class="na">getFullPath</span><span class="o">(</span><span class="s">&quot;ant_template.xml&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">is</span> <span class="o">=</span> <span class="n">GenBuildXml</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="n">xmlPath</span><span class="o">);</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">strXml</span> <span class="o">=</span> <span class="n">IOBridge</span><span class="o">.</span><span class="na">stream2String</span><span class="o">(</span><span class="n">is</span><span class="o">,</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">IOUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">strXml</span> <span class="o">=</span> <span class="n">strXml</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;__EXTERNAL_JARS__&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">strXml</span> <span class="o">=</span> <span class="n">strXml</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;__EXTERNAL_JARS__&quot;</span><span class="o">,</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>                    
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">strXml</span> <span class="o">=</span> <span class="n">strXml</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;__PROJECT_NAME__&quot;</span><span class="o">,</span> <span class="n">firstItem</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">File</span> <span class="n">buildXml</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">firstItem</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">()</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">&quot;build.xml&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">IOBridge</span><span class="o">.</span><span class="na">string2File</span><span class="o">(</span><span class="n">strXml</span><span class="o">,</span> <span class="n">buildXml</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">new</span> <span class="nf">GUI</span><span class="o">(</span><span class="k">new</span> <span class="n">GenBuildXml</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>ant_template.properties  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="err">#</span> <span class="nx">App</span> <span class="nx">name</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;JavaDynamicComiple&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">name</span><span class="o">=</span><span class="nx">__APPLICATION_NAME__</span>
</span><span class='line'><span class="err">#</span> <span class="nx">App</span> <span class="nx">version</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;1.0&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">version</span><span class="o">=</span><span class="mf">1.0</span>
</span><span class='line'><span class="err">#</span> <span class="nx">App</span> <span class="nx">author</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;yang3wei&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">author</span><span class="o">=</span><span class="nx">yang3wei</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Desktop</span> <span class="nx">absolute</span> <span class="nx">path</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;/Users/y3w/Desktop&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">desktop</span><span class="o">=</span><span class="err">/Users/y3w/Desktop</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Resource</span> <span class="kr">package</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;org/bruce/pocket/tools/res&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">res</span><span class="p">.</span><span class="nx">pkg</span><span class="o">=</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Classpath</span> <span class="nx">of</span> <span class="nx">entry</span> <span class="kr">class</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;org.bruce.test.Main&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">entry</span><span class="p">.</span><span class="kr">class</span><span class="o">=</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>ant_template.xml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;project</span> <span class="na">name=</span><span class="s">&quot;__PROJECT_NAME__&quot;</span> <span class="na">default=</span><span class="s">&quot;execute.class&quot;</span> <span class="na">basedir=</span><span class="s">&quot;.&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;1.define variables~&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- </span>
</span><span class='line'><span class="c">  也可以从 xml 文件中读取属性：&lt;xmlproperty file=&quot;config.xml&quot; /&gt;</span>
</span><span class='line'><span class="c">  详细请参见：http://blog.csdn.net/jzy23682891/article/details/7063489 </span>
</span><span class='line'><span class="c">  --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">file=</span><span class="s">&quot;build.properties&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;src&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/src&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;libs&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/libs&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;build&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/build&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;dist&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/dist&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;2.define external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;path</span> <span class="na">id=</span><span class="s">&quot;external.jars.path&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;fileset</span> <span class="na">dir=</span><span class="s">&quot;${libs}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/fileset&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/path&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;prepare&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;3.prepare&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mkdir</span> <span class="na">dir=</span><span class="s">&quot;${build}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mkdir</span> <span class="na">dir=</span><span class="s">&quot;${dist}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;compile&quot;</span> <span class="na">depends=</span><span class="s">&quot;prepare&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;5.compile&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;description&gt;</span>将src目录下的资源文件复制到 build目录下面(保留包结构)<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${build}/${res.pkg}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;copy</span> <span class="na">todir=</span><span class="s">&quot;${build}/${res.pkg}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;fileset</span> <span class="na">dir=</span><span class="s">&quot;${src}/${res.pkg}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.jpg&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.png&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.gif&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.prop&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.properties&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/fileset&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/copy&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nt">&lt;javac</span> <span class="na">srcdir=</span><span class="s">&quot;${src}&quot;</span> <span class="na">destdir=</span><span class="s">&quot;${build}&quot;</span> <span class="na">encoding=</span><span class="s">&quot;UTF-8&quot;</span> <span class="na">deprecation=</span><span class="s">&quot;true&quot;</span> <span class="na">listfiles=</span><span class="s">&quot;off&quot;</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span> <span class="na">target=</span><span class="s">&quot;1.6&quot;</span> <span class="na">debug=</span><span class="s">&quot;false&quot;</span> <span class="na">failonerror=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="c">&lt;!--给编译器指定编码，防止出现：&quot;警告： 编码 GBK 的不可映射字符&quot;--&gt;</span>
</span><span class='line'>          <span class="nt">&lt;compilerarg</span> <span class="na">line=</span><span class="s">&quot;-encoding UTF-8 &quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;classpath</span> <span class="na">refid=</span><span class="s">&quot;external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/javac&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;compile finished!&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;execute.class&quot;</span> <span class="na">depends=</span><span class="s">&quot;compile&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.execute&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;java</span> <span class="na">classname=</span><span class="s">&quot;${entry.class}&quot;</span> <span class="na">classpath=</span><span class="s">&quot;${build}&quot;</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sysproperty</span> <span class="na">key=</span><span class="s">&quot;file.encoding&quot;</span> <span class="na">value=</span><span class="s">&quot;UTF-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;classpath</span> <span class="na">refid=</span><span class="s">&quot;external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/java&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;package2jar&quot;</span> <span class="na">depends=</span><span class="s">&quot;compile&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.package2jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;jar</span> <span class="na">destfile=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="na">basedir=</span><span class="s">&quot;${build}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;manifest&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Name&quot;</span> <span class="na">value=</span><span class="s">&quot;${name}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Version&quot;</span> <span class="na">value=</span><span class="s">&quot;${version}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Author&quot;</span> <span class="na">value=</span><span class="s">&quot;${author}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;Created-By&quot;</span> <span class="na">value=</span><span class="s">&quot;${author}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;Main-Class&quot;</span> <span class="na">value=</span><span class="s">&quot;${entry.class}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/manifest&gt;</span>
</span><span class='line'>__EXTERNAL_JARS__     <span class="nt">&lt;/jar&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;execute.jar&quot;</span> <span class="na">depends=</span><span class="s">&quot;package2jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.jar.execute&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;java</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span> <span class="na">failonerror=</span><span class="s">&quot;true&quot;</span> <span class="na">jar=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sysproperty</span> <span class="na">key=</span><span class="s">&quot;file.encoding&quot;</span> <span class="na">value=</span><span class="s">&quot;UTF-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/java&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;copy2desktop&quot;</span> <span class="na">depends=</span><span class="s">&quot;package2jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.copy2desktop&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;copy</span> <span class="na">file=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="na">tofile=</span><span class="s">&quot;${desktop}/${name}${version}.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;clean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${build}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">file=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${dist}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;project</span> <span class="na">name=</span><span class="s">&quot;__PROJECT_NAME__&quot;</span> <span class="na">default=</span><span class="s">&quot;execute.class&quot;</span> <span class="na">basedir=</span><span class="s">&quot;.&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;1.define variables~&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- </span>
</span><span class='line'><span class="c">  也可以从 xml 文件中读取属性：&lt;xmlproperty file=&quot;config.xml&quot; /&gt;</span>
</span><span class='line'><span class="c">  详细请参见：http://blog.csdn.net/jzy23682891/article/details/7063489 </span>
</span><span class='line'><span class="c">  --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">file=</span><span class="s">&quot;build.properties&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;src&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/src&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;libs&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/libs&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;build&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/build&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;dist&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/dist&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;2.define external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;path</span> <span class="na">id=</span><span class="s">&quot;external.jars.path&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;fileset</span> <span class="na">dir=</span><span class="s">&quot;${libs}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/fileset&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/path&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;prepare&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;3.prepare&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mkdir</span> <span class="na">dir=</span><span class="s">&quot;${build}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mkdir</span> <span class="na">dir=</span><span class="s">&quot;${dist}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;compile&quot;</span> <span class="na">depends=</span><span class="s">&quot;prepare&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;5.compile&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;description&gt;</span>将src目录下的资源文件复制到 build目录下面(保留包结构)<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${build}/${res.pkg}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;copy</span> <span class="na">todir=</span><span class="s">&quot;${build}/${res.pkg}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;fileset</span> <span class="na">dir=</span><span class="s">&quot;${src}/${res.pkg}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.jpg&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.png&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.gif&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.prop&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.properties&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/fileset&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/copy&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nt">&lt;javac</span> <span class="na">srcdir=</span><span class="s">&quot;${src}&quot;</span> <span class="na">destdir=</span><span class="s">&quot;${build}&quot;</span> <span class="na">encoding=</span><span class="s">&quot;UTF-8&quot;</span> <span class="na">deprecation=</span><span class="s">&quot;true&quot;</span> <span class="na">listfiles=</span><span class="s">&quot;off&quot;</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span> <span class="na">target=</span><span class="s">&quot;1.6&quot;</span> <span class="na">debug=</span><span class="s">&quot;false&quot;</span> <span class="na">failonerror=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="c">&lt;!--给编译器指定编码，防止出现：&quot;警告： 编码 GBK 的不可映射字符&quot;--&gt;</span>
</span><span class='line'>          <span class="nt">&lt;compilerarg</span> <span class="na">line=</span><span class="s">&quot;-encoding UTF-8 &quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;classpath</span> <span class="na">refid=</span><span class="s">&quot;external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/javac&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;compile finished!&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;execute.class&quot;</span> <span class="na">depends=</span><span class="s">&quot;compile&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.execute&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;java</span> <span class="na">classname=</span><span class="s">&quot;${entry.class}&quot;</span> <span class="na">classpath=</span><span class="s">&quot;${build}&quot;</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sysproperty</span> <span class="na">key=</span><span class="s">&quot;file.encoding&quot;</span> <span class="na">value=</span><span class="s">&quot;UTF-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;classpath</span> <span class="na">refid=</span><span class="s">&quot;external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/java&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;package2jar&quot;</span> <span class="na">depends=</span><span class="s">&quot;compile&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.package2jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;jar</span> <span class="na">destfile=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="na">basedir=</span><span class="s">&quot;${build}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;manifest&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Name&quot;</span> <span class="na">value=</span><span class="s">&quot;${name}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Version&quot;</span> <span class="na">value=</span><span class="s">&quot;${version}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Author&quot;</span> <span class="na">value=</span><span class="s">&quot;${author}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;Created-By&quot;</span> <span class="na">value=</span><span class="s">&quot;${author}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;Main-Class&quot;</span> <span class="na">value=</span><span class="s">&quot;${entry.class}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/manifest&gt;</span>
</span><span class='line'>__EXTERNAL_JARS__     <span class="nt">&lt;/jar&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;execute.jar&quot;</span> <span class="na">depends=</span><span class="s">&quot;package2jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.jar.execute&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;java</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span> <span class="na">failonerror=</span><span class="s">&quot;true&quot;</span> <span class="na">jar=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sysproperty</span> <span class="na">key=</span><span class="s">&quot;file.encoding&quot;</span> <span class="na">value=</span><span class="s">&quot;UTF-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/java&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;copy2desktop&quot;</span> <span class="na">depends=</span><span class="s">&quot;package2jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.copy2desktop&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;copy</span> <span class="na">file=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="na">tofile=</span><span class="s">&quot;${desktop}/${name}${version}.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;clean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${build}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">file=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${dist}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;rerun&quot;</span> <span class="na">depends=</span><span class="s">&quot;clean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ant</span> <span class="na">antfile=</span><span class="s">&quot;build.xml&quot;</span> <span class="na">target=</span><span class="s">&quot;execute.class&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;rerun&quot;</span> <span class="na">depends=</span><span class="s">&quot;clean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ant</span> <span class="na">antfile=</span><span class="s">&quot;build.xml&quot;</span> <span class="na">target=</span><span class="s">&quot;execute.class&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java 图片缩放工具类]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/05/java-tu-pian-suo-fang-gong-ju-lei/"/>
    <updated>2013-02-05T12:48:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/05/java-tu-pian-suo-fang-gong-ju-lei</id>
    <content type="html"><![CDATA[<p>直接上代码：</p>

<!-- more -->




<figure class='code'><figcaption><span>ImageResizer.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">bruce</span><span class="o">.</span><span class="na">pocket</span><span class="o">.</span><span class="na">tools</span><span class="o">.</span><span class="na">utils</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.awt.image.BufferedImage</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.awt.image.RenderedImage</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.sun.image.codec.jpeg.JPEGCodec</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.sun.image.codec.jpeg.JPEGImageEncoder</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author Bruce Yang</span>
</span><span class='line'><span class="cm"> * 调整图片大小~</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ImageResizer</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">ImageResizer</span><span class="o">.</span><span class="na">resizeJpgImage</span><span class="o">(</span><span class="s">&quot;c:/test.JPG&quot;</span><span class="o">,</span> <span class="s">&quot;c:/test4.jpg&quot;</span><span class="o">,</span> <span class="mi">400</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 图像缩放 png 格式~</span>
</span><span class='line'><span class="cm">  * @param srcImgPath 原图片文件路径</span>
</span><span class='line'><span class="cm">  * @param destImgPath 生成的缩略图片文件路径</span>
</span><span class='line'><span class="cm">  * @param destWidth 生成图片的宽度</span>
</span><span class='line'><span class="cm">  * @param destHeight 生成图片的高度</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">resizePngImage</span><span class="o">(</span><span class="n">String</span> <span class="n">srcImgPath</span><span class="o">,</span> <span class="n">String</span> <span class="n">destImgPath</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destWidth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destHeight</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">resizePngImage</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">srcImgPath</span><span class="o">),</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">destImgPath</span><span class="o">),</span> <span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">resizePngImage</span><span class="o">(</span><span class="n">File</span> <span class="n">srcFile</span><span class="o">,</span> <span class="n">File</span> <span class="n">destFile</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destWidth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destHeight</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(!</span><span class="n">srcFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">// .DS_Store 这个文件害我调了半天，主要是 这个方法里面不包含文件名判断的逻辑，直接就给报错中断执行了~</span>
</span><span class='line'><span class="c1">//           System.err.println(srcFile.getAbsolutePath());</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">srcBi</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">srcFile</span><span class="o">);</span>
</span><span class='line'>          <span class="c1">// Image.SCALE_SMOOTH 的缩略算法 生成缩略图片的平滑度的 优先级比速度高 生成的图片质量比较好 但速度慢~</span>
</span><span class='line'>          <span class="n">Image</span> <span class="n">img</span> <span class="o">=</span> <span class="n">srcBi</span><span class="o">.</span><span class="na">getScaledInstance</span><span class="o">(</span><span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">,</span> <span class="n">Image</span><span class="o">.</span><span class="na">SCALE_SMOOTH</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">targetBi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedImage</span><span class="o">(</span><span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">,</span> <span class="n">BufferedImage</span><span class="o">.</span><span class="na">TYPE_INT_RGB</span><span class="o">);</span>
</span><span class='line'>          <span class="n">targetBi</span><span class="o">.</span><span class="na">getGraphics</span><span class="o">().</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">writePNGImage</span><span class="o">(</span><span class="n">targetBi</span><span class="o">,</span> <span class="n">destFile</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">ex</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 图像缩放 jpg 格式~</span>
</span><span class='line'><span class="cm">  * @param srcImgPath 原图片文件路径</span>
</span><span class='line'><span class="cm">  * @param destImgPath 生成的缩略图片文件路径</span>
</span><span class='line'><span class="cm">  * @param destWidth 生成图片的宽度</span>
</span><span class='line'><span class="cm">  * @param destHeight 生成图片的高度</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">resizeJpgImage</span><span class="o">(</span><span class="n">String</span> <span class="n">srcImgPath</span><span class="o">,</span> <span class="n">String</span> <span class="n">destImgPath</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destWidth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destHeight</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">resizeJpgImage</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">srcImgPath</span><span class="o">),</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">destImgPath</span><span class="o">),</span> <span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">resizeJpgImage</span><span class="o">(</span><span class="n">File</span> <span class="n">srcFile</span><span class="o">,</span> <span class="n">File</span> <span class="n">destFile</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destWidth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destHeight</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(!</span><span class="n">srcFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">Image</span> <span class="n">srcImg</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">srcFile</span><span class="o">);</span>
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">targetBi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedImage</span><span class="o">(</span><span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">,</span> <span class="n">BufferedImage</span><span class="o">.</span><span class="na">TYPE_INT_RGB</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">// Image.SCALE_SMOOTH 的缩略算法 生成缩略图片的平滑度的 优先级比速度高 生成的图片质量比较好 但速度慢~</span>
</span><span class='line'>          <span class="n">Image</span> <span class="n">img</span> <span class="o">=</span> <span class="n">srcImg</span><span class="o">.</span><span class="na">getScaledInstance</span><span class="o">(</span><span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">,</span> <span class="n">Image</span><span class="o">.</span><span class="na">SCALE_SMOOTH</span><span class="o">);</span>
</span><span class='line'>          <span class="n">targetBi</span><span class="o">.</span><span class="na">getGraphics</span><span class="o">().</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">FileOutputStream</span> <span class="n">fos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">destFile</span><span class="o">);</span>
</span><span class='line'>          <span class="n">JPEGImageEncoder</span> <span class="n">encoder</span> <span class="o">=</span> <span class="n">JPEGCodec</span><span class="o">.</span><span class="na">createJPEGEncoder</span><span class="o">(</span><span class="n">fos</span><span class="o">);</span>
</span><span class='line'>          <span class="n">encoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">targetBi</span><span class="o">);</span>
</span><span class='line'>          <span class="n">fos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">ex</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 由高清背景图片生成 ipad 所用背景图片~</span>
</span><span class='line'><span class="cm">  * 将 2560 * 3840 的图片截除上下两部分，缩放为原来的 0.3 倍（得到的图片的大小为 768 * 1024）~</span>
</span><span class='line'><span class="cm">  * @param imgsrc</span>
</span><span class='line'><span class="cm">  * @param imgdist</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">genIpadBg</span><span class="o">(</span><span class="n">String</span> <span class="n">srcImgPath</span><span class="o">,</span> <span class="n">String</span> <span class="n">destImgPath</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">File</span> <span class="n">srcImgFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">srcImgPath</span><span class="o">);</span>
</span><span class='line'>      <span class="n">File</span> <span class="n">destImgFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">destImgPath</span><span class="o">);</span>
</span><span class='line'>      <span class="n">genIpadBg</span><span class="o">(</span><span class="n">srcImgFile</span><span class="o">,</span> <span class="n">destImgFile</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">genIpadBg</span><span class="o">(</span><span class="n">File</span> <span class="n">srcImgFile</span><span class="o">,</span> <span class="n">File</span> <span class="n">destImgFile</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(!</span><span class="n">srcImgFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">srcBi</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">srcImgFile</span><span class="o">);</span>
</span><span class='line'>          <span class="n">srcBi</span> <span class="o">=</span> <span class="n">srcBi</span><span class="o">.</span><span class="na">getSubimage</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">213</span><span class="o">,</span> <span class="n">srcBi</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="mi">3414</span><span class="o">);</span>
</span><span class='line'>          <span class="n">Image</span> <span class="n">img</span> <span class="o">=</span> <span class="n">srcBi</span><span class="o">.</span><span class="na">getScaledInstance</span><span class="o">(</span><span class="mi">768</span><span class="o">,</span> <span class="mi">1024</span><span class="o">,</span> <span class="n">Image</span><span class="o">.</span><span class="na">SCALE_SMOOTH</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">destBi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedImage</span><span class="o">(</span><span class="mi">768</span><span class="o">,</span> <span class="mi">1024</span><span class="o">,</span> <span class="n">BufferedImage</span><span class="o">.</span><span class="na">TYPE_4BYTE_ABGR</span><span class="o">);</span>
</span><span class='line'>          <span class="n">destBi</span><span class="o">.</span><span class="na">getGraphics</span><span class="o">().</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">ImageIO</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">destBi</span><span class="o">,</span> <span class="s">&quot;png&quot;</span><span class="o">,</span> <span class="n">destImgFile</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 根据图片路径 读取图片文件</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">BufferedImage</span> <span class="nf">readImage</span><span class="o">(</span><span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">bi</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="n">bi</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">fileName</span><span class="o">));</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">bi</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 生成新的图片文件</span>
</span><span class='line'><span class="cm">  * @param im</span>
</span><span class='line'><span class="cm">  * @param formatName</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writeImage</span><span class="o">(</span><span class="n">RenderedImage</span> <span class="n">ri</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileformat</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">result</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">result</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">ri</span><span class="o">,</span> <span class="n">fileformat</span><span class="o">,</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">fileName</span><span class="o">));</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 转换图片格式 到 PNG</span>
</span><span class='line'><span class="cm">  * @param im</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writePNGImage</span><span class="o">(</span><span class="n">RenderedImage</span> <span class="n">ri</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">writeImage</span><span class="o">(</span><span class="n">ri</span><span class="o">,</span> <span class="s">&quot;PNG&quot;</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 转换图片格式 到 jpg</span>
</span><span class='line'><span class="cm">  * @param im</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writeJPEGImage</span><span class="o">(</span><span class="n">RenderedImage</span> <span class="n">ri</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">writeImage</span><span class="o">(</span><span class="n">ri</span><span class="o">,</span> <span class="s">&quot;JPEG&quot;</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * @param bi</span>
</span><span class='line'><span class="cm">  * @param destFile</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writeJPEGImage</span><span class="o">(</span><span class="n">BufferedImage</span> <span class="n">bi</span><span class="o">,</span> <span class="n">File</span> <span class="n">destFile</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">FileOutputStream</span> <span class="n">fos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">destFile</span><span class="o">);</span>
</span><span class='line'>          <span class="n">JPEGImageEncoder</span> <span class="n">encoder</span> <span class="o">=</span> <span class="n">JPEGCodec</span><span class="o">.</span><span class="na">createJPEGEncoder</span><span class="o">(</span><span class="n">fos</span><span class="o">);</span>
</span><span class='line'>          <span class="n">encoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">bi</span><span class="o">);</span>
</span><span class='line'>          <span class="n">fos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 转换图片格式 到 gif 不知到好用不</span>
</span><span class='line'><span class="cm">  * @param im</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writeGIFImage</span><span class="o">(</span><span class="n">RenderedImage</span> <span class="n">ri</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">writeImage</span><span class="o">(</span><span class="n">ri</span><span class="o">,</span> <span class="s">&quot;GIF&quot;</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 转换图片格式 到 BMP</span>
</span><span class='line'><span class="cm">  * @param im</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writeBMPImage</span><span class="o">(</span><span class="n">RenderedImage</span> <span class="n">ri</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">writeImage</span><span class="o">(</span><span class="n">ri</span><span class="o">,</span> <span class="s">&quot;BMP&quot;</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java 执行 Mac(Unix) 脚本命令]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/05/java-zhi-xing-mac-unix-jiao-ben-ming-ling/"/>
    <updated>2013-02-05T12:44:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/05/java-zhi-xing-mac-unix-jiao-ben-ming-ling</id>
    <content type="html"><![CDATA[<p>直接上代码：</p>

<!-- more -->




<figure class='code'><figcaption><span>UnixScript.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">bruce</span><span class="o">.</span><span class="na">pocket</span><span class="o">.</span><span class="na">tools</span><span class="o">.</span><span class="na">utils</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.OutputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author Bruce Yang</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UnixScript</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 执行 mac(unix) 脚本命令~</span>
</span><span class='line'><span class="cm">  * @param command</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">execute</span><span class="o">(</span><span class="n">String</span> <span class="n">command</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">cmd</span> <span class="o">=</span> <span class="o">{</span><span class="s">&quot;/bin/bash&quot;</span><span class="o">};</span>
</span><span class='line'>      <span class="n">Runtime</span> <span class="n">rt</span> <span class="o">=</span> <span class="n">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">();</span>
</span><span class='line'>      <span class="n">Process</span> <span class="n">proc</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">proc</span> <span class="o">=</span> <span class="n">rt</span><span class="o">.</span><span class="na">exec</span><span class="o">(</span><span class="n">cmd</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// 打开流</span>
</span><span class='line'>      <span class="n">OutputStream</span> <span class="n">os</span> <span class="o">=</span> <span class="n">proc</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">();</span>
</span><span class='line'>      <span class="n">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="n">OutputStreamWriter</span><span class="o">(</span><span class="n">os</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">command</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>          <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>          
</span><span class='line'>          <span class="cm">/** 真奇怪，把控制台的输出打印一遍之后竟然能正常终止了~ */</span>
</span><span class='line'>          <span class="n">readConsole</span><span class="o">(</span><span class="n">proc</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="cm">/** waitFor() 的作用在于 java 程序是否等待 Terminal 执行脚本完毕~ */</span>
</span><span class='line'>          <span class="n">proc</span><span class="o">.</span><span class="na">waitFor</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">retCode</span> <span class="o">=</span> <span class="n">proc</span><span class="o">.</span><span class="na">exitValue</span><span class="o">();</span>
</span><span class='line'><span class="c1">//       System.err.println(&quot;unix script retCode = &quot; + retCode);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">retCode</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">readConsole</span><span class="o">(</span><span class="n">proc</span><span class="o">);</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;UnixScriptUil.execute 出错了!!&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">retCode</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 读取控制命令的输出结果</span>
</span><span class='line'><span class="cm">  * 原文链接：http://lavasoft.blog.51cto.com/62575/15599</span>
</span><span class='line'><span class="cm">  * @param cmd 命令</span>
</span><span class='line'><span class="cm">  * @return 控制命令的输出结果</span>
</span><span class='line'><span class="cm">  * @throws IOException</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">readConsole</span><span class="o">(</span><span class="n">Process</span> <span class="n">process</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">StringBuffer</span> <span class="n">cmdOut</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>
</span><span class='line'>      <span class="n">InputStream</span> <span class="n">fis</span> <span class="o">=</span> <span class="n">process</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>
</span><span class='line'>      <span class="n">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">fis</span><span class="o">));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">line</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">while</span> <span class="o">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">cmdOut</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">line</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;line.separator&quot;</span><span class="o">));</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'><span class="c1">//       System.out.println(&quot;执行系统命令后的控制台输出为：\n&quot; + cmdOut.toString());</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">cmdOut</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">trim</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java Get classes In Package]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/05/java-get-classes-in-package/"/>
    <updated>2013-02-05T12:30:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/05/java-get-classes-in-package</id>
    <content type="html"><![CDATA[<p>直接上代码：</p>

<!-- more -->




<figure class='code'><figcaption><span>GetClassesInPackage.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">bruce</span><span class="o">.</span><span class="na">pocket</span><span class="o">.</span><span class="na">tools</span><span class="o">.</span><span class="na">utils</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.jar.JarEntry</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.jar.JarInputStream</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author Bruce Yang</span>
</span><span class='line'><span class="cm"> * http://www.roseindia.net/java/java-get-example/get-classes-package.shtml</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">GetClassesInPackage</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="n">getJar</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">getClasseNamesInPackage</span><span class="o">(</span><span class="n">String</span> <span class="n">jarName</span><span class="o">,</span> <span class="n">String</span> <span class="n">packageName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">getJar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Jar \&quot;&quot;</span> <span class="o">+</span> <span class="n">jarName</span> <span class="o">+</span> <span class="s">&quot;\&quot; for \&quot;&quot;</span> <span class="o">+</span> <span class="n">packageName</span> <span class="o">+</span> <span class="sc">&#39;\&quot;&#39;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">arrayList</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>      <span class="c1">// replaceAll 第一个参数是正则字符串，第二个参数是普通的替换字符串，不需要对正则进行转义~</span>
</span><span class='line'>      <span class="n">packageName</span> <span class="o">=</span> <span class="n">packageName</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;\\.&quot;</span><span class="o">,</span> <span class="s">&quot;/&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">JarInputStream</span> <span class="n">jarFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JarInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">jarName</span><span class="o">));</span>
</span><span class='line'>          <span class="n">JarEntry</span> <span class="n">jarEntry</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">jarEntry</span> <span class="o">=</span> <span class="n">jarFile</span><span class="o">.</span><span class="na">getNextJarEntry</span><span class="o">();</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">jarEntry</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="k">break</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">((</span><span class="n">jarEntry</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">startsWith</span><span class="o">(</span><span class="n">packageName</span><span class="o">))</span>
</span><span class='line'>                      <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">jarEntry</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">endsWith</span><span class="o">(</span><span class="s">&quot;.class&quot;</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">arrayList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jarEntry</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">,</span> <span class="s">&quot;.&quot;</span><span class="o">));</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">arrayList</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">jarPath</span> <span class="o">=</span> <span class="s">&quot;/Users/user/Desktop/JavaDynamicComiple.jar&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">pkgPath</span> <span class="o">=</span> <span class="s">&quot;org.bruce.pocket.tools.items&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">GetClassesInPackage</span><span class="o">.</span><span class="na">getClasseNamesInPackage</span><span class="o">(</span><span class="n">jarPath</span><span class="o">,</span> <span class="n">pkgPath</span><span class="o">);</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Found: &quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">item</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">item</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 代码高亮]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/03/octopress-dai-ma-gao-liang/"/>
    <updated>2013-02-03T17:43:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/03/octopress-dai-ma-gao-liang</id>
    <content type="html"><![CDATA[<p>原文链接：<br/>
<a href="http://xiongbupt.github.com/blog/2012/06/08/octopressdai-ma-gao-liang/">http://xiongbupt.github.com/blog/2012/06/08/octopressdai-ma-gao-liang/</a><br/>
现在博客已经基本搭建完毕，下面对从<code>jekyll bootstrap</code>搬迁到做一个基本介绍。首先是代码高亮部分，下面的文章主要来自于<a href="http://octopress.org/docs/blogging/code/" title="Octopress代码高亮">Octopress关于代码高亮部分</a>。文章主要是对上面的内容进行一个简单的翻译，以及简单介绍从<code>jekyll bootstrap</code>上面的代码移动到<code>Octopress</code>上面做一个简单的介绍。</p>

<!-- more -->


<h2>共享代码片段</h2>

<p>在博客上共享代码片段应该是简单的，并且代码应该具有简单的高亮功能。Octopress也具有这种功能，在<code>jekyll</code>上，其使用的是<code>pygment</code>来实现代码高亮的功能，Octopress实现的更好。在Octopress上面有下面几种选择：</p>

<ul>
<li>使用<a href="http://ethanschoonover.com/solarized" title="Solarized高亮">Solarized高亮</a>主题来实现（该方法未尝试，实际上不知道怎么弄，只是凭借个人的猜测）。</li>
<li>使用Gist的代码内嵌。</li>
<li>从自己的文件系统中插入代码片段，该代码具有下载链接。</li>
<li>简单的内嵌代码块带有<code>&lt;div class='bogus-wrapper'&gt;&lt;notextile&gt;&lt;figure&gt;</code>和<code>&lt;figcaption&gt;</code>和可选的下载链接。</li>
<li>Pygments caching（似乎还是使用Pygnment来实现代码高亮）。</li>
<li>通过javascript脚本使得代码具有行号。</li>
</ul>


<h3>Solarized高亮</h3>

<p>这部分内容自己没有尝试，待更新。</p>

<h3>反引号的代码块</h3>

<p>同时使用<code>backtick_codelock</code>过滤器，可以使用Github的最适用的代码高亮块。使用三个反引号开始，后面跟着一个空格，接下来是高亮语言，具体语法如下所示：</p>

<pre><code>  ``` [language] [title] [url] [link text]
  code snippet
  ```
</code></pre>

<p>按照上述方式便可以对相应的代码块进行高亮，如下面的例子。</p>

<h4>example1（原文)</h4>

<pre><code> ```
 $sudo give me a hug
 ```
</code></pre>

<p>按照上面的方式在文本中输入之后，产生的效果如下：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$sudo give me a hug</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>example2带有说明和连接</h4>

<pre><code> ``` ruby Discover if a number is prime http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/ Source Article
 class Fixnum
   def prime?
     ('1' * self) !~ /^1?$|^(11+?)\1+$/
   end
 end
 ```
</code></pre>

<p>产生的代码片段如下：</p>

<figure class='code'><figcaption><span>Discover if a number is prime</span><a href='http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Fixnum</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prime?</span>
</span><span class='line'>    <span class="p">(</span><span class="s1">&#39;1&#39;</span> <span class="o">*</span> <span class="nb">self</span><span class="p">)</span> <span class="o">!~</span> <span class="sr">/^1?$|^(11+?)\1+$/</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Gist代码内嵌</h3>

<p>当使用这种方式的代码高亮时，仅仅需要的是gist的id，对gist不了解的可以上google搜索下，个人的理解是，gist对每段用户上传的代码段都会有一个对应的id，当用户给出对应的代码的id后，将会从gist上面下载对应的已经高亮的html文件，最终在用户的页面上显示出来。</p>

<h4>语法</h4>

<pre><code> { % gist gist_id [filename] %}
</code></pre>

<h4>example</h4>

<pre><code> { % gist 996818 %}
</code></pre>

<p>上述代码的片段在Octopress中的markdown文件中输入之后，得到的效果如下：</p>

<div><script src='https://gist.github.com/996818.js'></script>
<noscript><pre><code>@@ -590,7 +590,7 @@ class SpritesTest &lt; Test::Unit::TestCase
  it &quot;should generate a sprite from nested folders&quot; do
    css = render &lt;&lt;-SCSS
-     @import &quot;nested/*.png&quot;;
+     @import &quot;nested/**/*.png&quot;;
      @include all-nested-sprites;
    SCSS
    assert_correct css, &lt;&lt;-CSS</code></pre></noscript></div>


<p>如果一个gist的id对应有多个文件，这时需要对想要高亮的文件添加文件名，具体语法如下所示：</p>

<pre><code>  { % gist 1059334 svg_bullets.rb %}
  { % gist 1059334 usage.scss %}
</code></pre>

<p>总体来说，gist代码高亮是很简单的，只是需要将代码上传到<a href="https://gist.github.com/">gist</a>，然后获取相应的id然后按照上面的语法进行设置即可。只是每次在写博客时，都需要对博客文章中的代码拷贝到网址上生成，在没有网时，代码高亮比较麻烦。</p>

<h3>从本地文件中引入代码</h3>

<p>这种方式在Arch上面有个小问题，在Arch上的报错如下所示：</p>

<figure class='code'><figcaption><span>Arch error</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Building site: <span class="nb">source</span> -&gt; public
</span><span class='line'>  File <span class="s2">&quot;&lt;string&gt;&quot;</span>, line 1
</span><span class='line'>    import sys; print sys.executable
</span><span class='line'>                        ^
</span><span class='line'>SyntaxError: invalid syntax
</span></code></pre></td></tr></table></div></figure>


<p>上网搜索之后在<a href="http://blog.gonzih.org/blog/2011/09/21/fix-octopress-pygments-error-on-arch-linux/">该网址</a>发现解决方法。 <br/>
这种方式需要使用python2来完成代码高亮的操作，由于Arch的python指向的是python3，而python3无法完成该功能，因此需要在<code>plugin</code>文件夹中再添加一个新文件，指定在<code>Octopress</code>运行时使用的是python2，具体增加的文件内容如下所示，文件的名字为<code>ruby_python_arch_linux_fix.rb</code><br/>
File /Users/user/git/Octopress/source/downloads/code/ruby/ruby_python_arch_linux_fix.rb could not be found</p>

<p>在完成该操作之后，仍然报错，得到如下错误：</p>

<figure class='code'><figcaption><span>Error message</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>LoadError: Could not open library <span class="s1">&#39;lib.so&#39;</span>: lib.so: cannot open shared object file: No such file or directory
</span></code></pre></td></tr></table></div></figure>


<p>参考<a href="https://github.com/tmm1/pygments.rb/issues/10">该网址</a>的由<code>elidos</code>提出的解决方法可以知道是<code>rubypython</code>自身的bug，需要修复，具体修改文件在Arch上面为<code>/usr/lib/ruby/gems/1.9.1/gems/rubypython-0.5.3/lib/rubypython/pythonexec.rb</code>，修改位置大概在126行左右，修改后的内容如下所示：</p>

<figure class='code'><figcaption><span>fix the rubypython bug</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">--126 %x(#{@python} -c &quot;#{command}&quot;).chomp if @python</span>
</span><span class='line'><span class="gi">++126 %x(&quot;#{@python} -c #{command}&quot;).chomp if @python</span>
</span></code></pre></td></tr></table></div></figure>


<p>完成该修改之后，便可以使用这种包含代码的方式来进行代码高亮。 <br/>
使用这种方式的语法也参见<a href="http://octopress.org/docs/blogging/code/" title="Octopress代码高亮">octopress手册</a>，此处不再进行详细说明，这种方式的代码是单独存放成一个文件保存在本地系统下，当代码长度较长，又不想放在博客的正文中时，使用该方法比较好。<br/>
简单记录下这种方式的语法如下所示：（目前不知道为什么，在octopress中输入{ %的方式都会进行代码解析，所以上面的{ %都进行了添加了<code></code>来取消，在实际文章中输入的时候，将<code></code>取消掉）</p>

<pre><code>{ % include_code [title] [lang:language] path/to/file %}
</code></pre>

<p>其中的中括号的内容是可选的，具体语言便是这种方式，当需要强制高亮时，需要指定<code>lang:</code>这个参数，很好用。</p>

<h3>使用Code Block的方式</h3>

<p>目前自己的博客这种方式用的比较多，前面写的文章目前全部修改成为了这种方式，感觉这种方式和<code>pygnment</code>的方式差不多，之前全部采用的是<code>pygnment</code>的方式，利用正则表达式把所有文章的代码高亮全部改成了使用<code>code block</code>。它的具体语法如下所示：（与<code>pygnment</code>很相似，指定语言即可）</p>

<pre><code>  { % codeblock [title] [lang:language] [url] [link text] %}
  code snippet
  { % endcodeblock %}
</code></pre>

<p>和之前描述的类似，中括号的内容是可选的。</p>

<h4>使用正则表达式替换</h4>

<p>这种方式可以替换博客内容，使得博客中所有文章的代码高亮使用<code>Code Block</code>。自己使用的是<code>sed</code>来完成的操作，似乎都没有用到正则表达式，只是简单的替换，做个简单的记录吧。</p>

<h5>替换方法</h5>

<p>进入到<code>source/_posts</code>目录下，在终端输入如下代码：</p>

<figure class='code'><figcaption><span>Sed查看文章代码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sed -n <span class="s1">&#39;s/\(\ highlight\ \)/\1/p&#39;</span> *
</span></code></pre></td></tr></table></div></figure>


<p>上面将会把当前目录下的含有{\% highlight的文件的那行都显示出来，中间会将含有该特殊字符的行都打印出来，中间可以看到自己的博客内容都用到了哪些类型文件的语法高亮，将对应的代码高亮进行替换即可。<br/>
其实这种方式就是简单的搜索替换，应该算不上使用正则表达式了，只是写下来做下笔记了，防止以后再用具体操作如下所示：</p>

<figure class='code'><figcaption><span>Sed替换文件内容</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sed -i <span class="s1">&#39;s/\(\ highlight\ bash %}\)/\ codeblock\ lang:bash\ %}/&#39;</span> *
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 中的 SEO]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/03/octopress-zhong-de-seo/"/>
    <updated>2013-02-03T16:12:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/03/octopress-zhong-de-seo</id>
    <content type="html"><![CDATA[<p>原文链接：<br/>
<a href="http://codemacro.com/2012/09/06/octopress-seo/">loop in codes &#8211; Kevin Lynx BLOG</a><br/>
Octopress 默认为每个页面添加 meta description，其内容为当前文章的前150个字符，<br/>
如果是首页就会是第一篇文章的前 150 个字符。这里主要通过增加 meta keywords 来提高 SEO。</p>

<!-- more -->


<h2>为每篇文章增加 keywors 和 description</h2>

<p>就像我的这篇博客，这下文章头得填很多数据了，有点麻烦：</p>

<figure class='code'><figcaption><span>code snippet 1 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "Octopress中的SEO"
</span><span class='line'>date: 2012-09-06 19:02
</span><span class='line'>comments: true
</span><span class='line'>categories: tips
</span><span class='line'>tags: [tips, octopress]
</span><span class='line'>keywords: seo, octopress
</span><span class='line'>description: Octopress默认为每个页面添加`meta description`，其内容为当前文章的前150个字符，如果是首页就会是第一篇文章的前150个字符。这里主要通过增加`meta keywords`来提高SEO。
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<p>这样，每篇文章页面头就会自动增加 meta keywords 项，description也会使用这里填的，<br/>
而不是自动为文章前若干个字符。这个功能的实现在 <code>_includes/head.html</code> 中。</p>

<figure class='code'><figcaption><span>code snippet 2  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;author&quot;</span> <span class="na">content=</span><span class="s">&quot;Kevin Lynx&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;description&quot;</span> <span class="na">content=</span><span class="s">&quot;Octopress默认为每个页面添加`meta description`，其内容为当前文章的前150个字符，如果是首页就会是第一篇文章的前150个字符。这里主要通过增加`meta keywords`来提高SEO。 &quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;keywords&quot;</span> <span class="na">content=</span><span class="s">&quot;seo, octopress&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>为页面 (Page) 增加 keywords</h2>

<p>上面只是修正了每篇博客页面的 meta 信息，octopress 中还有几个页面需要修正，例如首页，<br/>
这个可以通过修改 <code>_includes/head.html</code> 来完成。替换相关内容为以下：</p>

<figure class='code'><figcaption><span>code snippet 3  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;author&quot;</span> <span class="na">content=</span><span class="s">&quot;{{ site.author }}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>{% capture description %}{% if page.description %}{{ page.description }}{% elsif site.description %}{{ site.description }}{%else%}{{ content | raw_content }}{% endif %}{% endcapture %}
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;description&quot;</span> <span class="na">content=</span><span class="s">&quot;{{ description | strip_html | condense_spaces | truncate:150 }}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>{% if page.keywords %}<span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;keywords&quot;</span> <span class="na">content=</span><span class="s">&quot;{{ page.keywords }}&quot;</span><span class="nt">&gt;</span>{%else%}<span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;keywords&quot;</span> <span class="na">content=</span><span class="s">&quot;{{ site.keywords }}&quot;</span><span class="nt">&gt;</span>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<p>如果页面没有提供 keywords 或者 description 的话，<br/>
就使用 site 里的设置，也就需要修改 <code>_config.yml</code>：</p>

<figure class='code'><figcaption><span>code snippet 4 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>description: loop in codes, Kevin Lynx blog
</span><span class='line'>keywords: c/c++, mmo, game develop, lisp, ruby, lua, web development</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为 Octopress 添加查看访问量的功能]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/03/wei-octopress-tian-jia-cha-kan-fang-wen-liang-de-gong-neng/"/>
    <updated>2013-02-03T16:03:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/03/wei-octopress-tian-jia-cha-kan-fang-wen-liang-de-gong-neng</id>
    <content type="html"><![CDATA[<p>原文链接：<a href="http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-iii/">sourrabbit &amp; linpx</a><br/>
我在看了<a href="http://www.whatwherewhy.me/colophon/">这个</a>网页后，发现我还可以添加网站分析，毕竟是自己努力出来的东西，<br/>
看看大伙是否有兴趣访问还是不错的，不过很多情况是远逊于预期。:)</p>

<!--  more -->


<p>先于 <code>Google Analytics</code> 开通和自己网站相关的服务，<br/>
比如登记自己的网址，取得 GA 的 <code>Track ID</code>，应该如该样式 <code>UA-28584XXX-X</code>.
修改 <code>_config.yml</code> 最后部分，将 ID 置于 <code>google_analytics_tracking_id:</code>项目之后，rake一下就行了。<br/>
之后进入 GA 网站看 report 吧，你就会知道何时多少人访问过你的网站。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA["git rm" 和 "rm" 的区别]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/03/git-rm-he-rm-de-qu-bie/"/>
    <updated>2013-02-03T14:01:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/03/git-rm-he-rm-de-qu-bie</id>
    <content type="html"><![CDATA[<p>这是一个比较肤浅的问题，但对于 git 初学者来说，还是有必要提一下的。</p>

<!-- more -->


<p>用 <code>git rm</code> 来删除文件，同时还会将这个删除操作记录下来；<br/>
用 <code>rm</code> 来删除文件，仅仅是删除了物理文件，没有将其从 git 的记录中剔除。</p>

<p>直观的来讲，<code>git rm</code> 删除过的文件，执行 <code>git commit -m "abc"</code> 提交时，<br/>
会自动将删除该文件的操作提交上去。</p>

<p>而对于用 <code>rm</code> 命令直接删除的文件，执行 <code>git commit -m "abc"</code> 提交时，<br/>
则不会将删除该文件的操作提交上去。<br/>
不过不要紧，即使你已经通过 <code>rm</code> 将某个文件删除掉了，<br/>
也可以再通过 <code>git rm</code> 命令重新将该文件从 git 的记录中删除掉，<br/>
这样的话，在执行 <code>git commit -m "abc"</code> 以后，也能将这个删除操作提交上去。</p>

<p>如果之前不小心用 <code>rm</code> 命令删除了一大批文件呢？<br/>
是的，此时用 <code>git rm</code> 逐个地再删除一次就显得相当蛋疼了。<br/>
所幸还有更方便的处理方案，用如下的方式做提交就没有问题了：
<code>git commit -am "abc"</code></p>

<h3>总结一下：</h3>

<p>在被 git 管理的目录中删除文件时，可以选择如下两种方式来记录删除动作：<br/>
一、<code>rm</code> + <code>git commit -am "abc"</code><br/>
二、<code>git rm</code> + <code>git commit -m "abc"</code><br/>
另外，<code>git add .</code> 仅能记录添加、改动的动作，删除的动作需靠 <code>git rm</code> 来完成。<br/>
最后，<code>rm</code> 删除的文件是处于 <code>not staged</code> 状态的，<br/>
也就是一种介于 “未改动” 和 “已提交过” 之间的状态。</p>

<h3>下面是测试图</h3>

<p>一、<code>git rm</code> 与 <code>rm</code> 之间的区别
<img class="center" src="http://yang3wei.github.com/images/posts/differences_btw_git_rm_and_rm.png">
二、<code>git add .</code> 无法记录 <code>rm</code> 删除动作<br/>
<img class="center" src="http://yang3wei.github.com/images/posts/add_dot_make_no_use.png">
三、<code>git commit -m "abc"</code> 无法提交 <code>rm</code> 删除动作<br/>
<img class="center" src="http://yang3wei.github.com/images/posts/git_rm_better_than_rm.png">
四、<code>git commit -am "abc"</code> 中参数 a 的作用<br/>
<img class="center" src="http://yang3wei.github.com/images/posts/usage_of_flag_a.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git-credential-osxkeychain died of signal 11 解决方案]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/03/git-credential-osxkeychain-died-of-signal-11-jie-jue-fang-an/"/>
    <updated>2013-02-03T00:30:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/03/git-credential-osxkeychain-died-of-signal-11-jie-jue-fang-an</id>
    <content type="html"><![CDATA[<p>相关帖子链接：<br/>
<a href="http://stackoverflow.com/questions/14272634/error-git-credential-osxkeychain-died-of-signal-11/14663780#14663780">&#8230;osxkeychain-died-of-signal-11@stackoverflow.com</a><br/>
前两天在执行 <code>git push origin master</code> 命令的时候突然发现不灵光了，<br/>
死活都推不进 GitHub 服务器，给出的提示如下：<br/>
<code>error: git-credential-osxkeychain died of signal 11</code><br/>
<code>error: git-credential-osxkeychain died of signal 11</code></p>

<!-- more -->


<p>我没有弄错，给出了两行一模一样的提示。<br/>
遇到这个问题以后我的第一反应就是 googling，<br/>
直接就找到了文首给出的那个 stackoverflow 的帖子。</p>

<p>不过这个帖子并没有帮我解决掉这个问题，然后我又继续 googling，<br/>
没有太大的收获，涉及到相关问题的链接不是很多。。<br/>
我一度多次打开 stackoverflow 的这个帖子，仔细的搜寻，<br/>
想看一看我是否遗忘了什么重要的步骤，不过很可惜，没有发现有价值的情报。</p>

<p>后来我计上心头，想到了一个好办法，<br/>
去试一试另外一个本地目录的 work copy 能否推到 GitHub 服务器里面去。<br/>
我做了一些变更并且提交过以后，就执行 “git push origin master” 命令，<br/>
很奇葩的没有出错，也没有向我询问用户名和密码~</p>

<p>到这里我就有点儿纳闷儿了，凭什么这里可以那儿却不行？！<br/>
纠结了好几天了，今天突然又想到一个办法，<br/>
怎么不对比一下两个 work copy 的 .git/config 文件呢，说不定有有所收获！<br/>
果不其然，经我对比过后我发现两个 work copy 所采用的配置有所不同。<br/>
区别在哪里呢？下面我给出来对比一下吧：<br/>
<strong>这里是 push 时抛错的那个 work copy 的 .git/config 文件的部分配置</strong></p>

<pre><code>...
[remote "origin"]
    url = https://github.com/yang3wei/octopress-3-in-one.git
    fetch = +refs/heads/*:refs/remotes/origin/*
...
</code></pre>


<p><strong>这里是 push 时没问题的 work copy 的 .git/config 文件对应的部分配置</strong></p>

<pre><code>...
[remote "origin"]
    url = git@github.com:yang3wei/game-development-tools
    fetch = +refs/heads/*:refs/remotes/master/*
...
</code></pre>


<p>对比后我就多少有些念想了，何不试着把有问题的照着没问题的改弄一翻？<br/>
说干就干，于是我就将有问题的那块儿配置改成了如下这番：</p>

<pre><code>
[remote "origin"]
    url = git@github.com/yang3wei/octopress-3-in-one
    fetch = +refs/heads/*:refs/remotes/origin/*
...
</code></pre>


<p>然后再执行 <code>git push origin master</code> 命令，发现那该死的错误已经悄然遁去~</p>

<h3>总结一下</h3>

<p>一言以蔽之，就是更换了一下 .git/config 中 url 的写法而已，<br/>
将 <code>url = https://github.com/yang3wei/octopress-3-in-one.git</code><br/>
改为 <code>url = git@github.com:yang3wei/octopress-3-in-one</code><br/>
说到这里，我隐约想起好像看到过一句话：<br/>
ssh 加密传输好像是非后面那种 url 格式不可的，<br/>
那么从这点来看的话，<br/>
<code>git-credential-osxkeychain</code> 在 https 传输模式下出错也就情有可原了~<br/>
最后，创建属于自己的 repo 的时候，<br/>
最好还是能以 <code>git@github.com...</code> 这种 url 的写法来初始化仓库，<br/>
以避免当前讨论这种问题的出现~</p>

<h3>另外</h3>

<p>其间也试了下将<br/>
<code>fetch = +refs/heads/*:refs/remotes/origin/*</code><br/>
改为<br/>
<code>fetch = +refs/heads/*:refs/remotes/master/*</code><br/>
如此这般以后我执行 <code>git push origin master</code> 也没有出现错误~<br/>
不过后来在我查看的时候发现竟然多出了一个分支：<br/>
<code>* master</code><br/>
<code> remotes/master/master/</code><br/>
<code> remotes/origin/master/</code><br/>
显而易见，那里我不该将 fetch 里面的 origin 改成 master，<br/>
这里直接导致我远程那边多出了一个无用的分支来~<br/>
话说这里该如何将这个多余的远程分支 <code>remotes/master/master</code> 给干掉呢？<br/>
记得删除远程服务器上面的分支可以用这条命令：<code>git push origin :branchname</code><br/>
不过这里比较特殊，这条多余分支的名字也是 <code>master</code> 呢！<br/>
搜寻良久，stackoverflow 再次帮了我一把，实在是给力啊！下面是相关链接：<br/>
<a href="http://stackoverflow.com/questions/1072171/how-do-you-remove-an-invalid-remote-branch-reference-from-git">How do you Remove an Invalid Remote Branch Reference from Git?</a><br/>
罗列出我所尝试的删除分支的命令：<br/>
<code>git branch -d remotes/master/master</code> 报错<br/>
<code>git push master :master</code> 报错<br/>
<code>git push origin :/remotes/master/master</code> 报错
<code>git gc --prune=now</code> 无效<br/>
<code>git remote rm master</code> 报错<br/>
<code>git branch -rd master/master</code> 删除成功！</p>

<h3>执行 git status 命令后出现如下提示的涵义</h3>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#   (use "git push" to publish your local commits)
#
nothing to commit, working directory clean
</code></pre>


<p>回忆起前几天对 git 不熟悉时因为老是看到这几行提示而感到心里不舒服的情景，<br/>
才发现我真是傻得可爱，这些提示的意思不就是说：<br/>
<strong>你当前有 1 个已完成的提交还没推到远程服务器，执行 push 命令来推出已完成的提交</strong><br/>
哎，那天也不知道是怎么了，肯定是发现和平时不一样却没有仔细看就匆忙下了定论，<br/>
今后得把这种粗细大意的毛病给改掉~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git 与 SVN 之间的五个基本区别]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/02/git-yu-svn-zhi-jian-de-wu-ge-ji-ben-qu-bie/"/>
    <updated>2013-02-02T18:03:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/02/git-yu-svn-zhi-jian-de-wu-ge-ji-ben-qu-bie</id>
    <content type="html"><![CDATA[<p>原文链接：<br/>
<a href="http://blog.csdn.net/dadoneo/article/details/6098540">http://blog.csdn.net/dadoneo/article/details/6098540</a><br/>
在比较两者之前，可以阅读：<br/>
<a href="rubynroll.javaeye.com/blog/203133">SVN + GIT = 鱼与熊掌兼得</a><br/>
<a href="wenku.baidu.com/view/dd6d36eef8c75fbfc77db277.html">开源版本控制 SVN 用户严重的 git</a><br/>
<a href="www.robinlu.com/blog/archives/194">如何在 SVN 系统中使用 git</a></p>

<!-- more -->


<p>如果你在读这篇文章，说明你跟大多数开发者一样对 GIT 感兴趣，<br/>
如果你还没有机会来试一试 GIT，我想现在你就要了解它了。</p>

<p>GIT 不仅仅是个版本控制系统，它也是个内容管理系统(CMS)，工作管理系统等。<br/>
如果你是一个具有使用 SVN 背景的人，<br/>
你需要做一定的思想转换，来适应 GIT 提供的一些概念和特征。<br/>
所以，这篇文章的主要目的就是通过介绍 GIT 能做什么、<br/>
它和 SVN 在深层次上究竟有什么不同来帮助你认识它。</p>

<p>那好，这就开始吧&#8230;</p>

<h2>1.GIT 是分布式的，SVN 不是：</h2>

<p>这是 GIT 和其它非分布式的版本控制系统，例如SVN，CVS等，最核心的区别。<br/>
如果你能理解这个概念，那么你就已经上手一半了。<br/>
需要做一点声明，GIT 并不是目前第一个或唯一的分布式版本控制系统。<br/>
还有一些系统，例如 Bitkeeper, Mercurial 等，也是运行在分布式模式上的。<br/>
但 GIT 在这方面做的更好，而且有更多强大的功能特征。</p>

<p>GIT 跟 SVN 一样有自己的集中式版本库或服务器。<br/>
但，GIT 更倾向于被使用于分布式模式，也就是每个开发人员从中心<br/>
版本库/服务器上 chect out 代码后会在自己的机器上克隆一个自己的版本库。<br/>
可以这样说，如果你被困在一个不能连接网络的地方时，就像在飞机上，地下室，<br/>
电梯里等，你仍然能够提 交文件，查看历史版本记录，创建项目分支，等。<br/>
对一些人来说，这好像没多大用处，但当你突然遇到没有网络的环境时，这个将解决你的大麻烦。</p>

<p>同样，这种分布式的操作模式对于开源软件社区的开发来说也是个巨大的恩赐，你不必再像以前那样做出补丁包，<br/>
通过 email 方式发送出去，你只需要创建一个分支，向项目团队发送一个推请求。<br/>
这能让你的代码保持最新，而且不会在传输过程中丢失。GitHub.com 就是一个这样的优秀案例。</p>

<p>有些谣言传出来说 Subversion 将来的版本也会基于分布式模式。但至少目前还看不出来。</p>

<h2>2.GIT 把内容按元数据方式存储，而 SVN 是按文件：</h2>

<p>所有的资源控制系统都是把文件的元信息隐藏在一个类似 <code>.svn</code>，<code>.cvs</code> 等的文件夹里。<br/>
如果你把 <code>.git</code> 目录的体积大小跟 <code>.svn</code> 比较，你会发现它们差距很大。<br/>
因为，<code>.git</code> 目录是处于你的机器上的一个克隆版的版本库，<br/>
它拥有中心版本库上所有的东西，例如标签，分支，版本记录等。</p>

<h2>3.GIT 分支和 SVN 的分支不同：</h2>

<p>分支在 SVN 中一点不特别，就是版本库中的另外的一个目录。如果你想知道是否合并了一个分支，<br/>
你需要手工运行像这样的命令 svn propget svn:mergeinfo，来确认代码是否被合并。<br/>
感谢 Ben 同学指出这个特征。所以，经常会发生有些分支被遗漏的情况。<br/>
然而，处理 GIT 的分支却是相当的简单和有趣。你可以从同一个工作目录下快速的在几个分支间切换。<br/>
你很容易发现未被合并的分支，你能简单而快捷的合并这些文件。</p>

<h2>4.GIT 没有一个全局的版本号，而 SVN 有：</h2>

<p>目前为止这是跟 SVN 相比 GIT 缺少的最大的一个特征。<br/>
你也知道，SVN 的版本号实际是任何一个相应时间的源代码快照。<br/>
我认为它是从 CVS 进化到 SVN 的最大的一个突破。<br/>
因为 GIT 和 SVN 从概念上就不同，我不知道 GIT 里是什么特征与之对应。<br/>
如果你有任何的线索，请在评论里奉献出来与大家共享。<br/>
更新：有些读者指出，我们可以使用 GIT 的 SHA-1 来唯一的标识一个代码快照。<br/>
这个并不能完全的代替 SVN 里容易阅读的数字版本号。但，用途应该是相同的。</p>

<h2>5.GIT 的内容完整性要优于 SVN：</h2>

<p>GIT 的内容存储使用的是 SHA-1 哈希算法。<br/>
这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。<br/>
这里有一个很好的关于 GIT 内容完整性的讨论 – <br/>
<a href="http://stackoverflow.com/questions/964331/git-file-integrity">http://stackoverflow.com/questions/964331/git-file-integrity</a></p>

<h2>GIT 和 SVN 之间只有这五处不同吗？</h2>

<p>当然不是。我想这五个只是 “最基本的” 和 “最吸引人” 的，我只想到这五点。<br/>
如果你发现有比这五点更有趣的，请共享出来，欢迎。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[青菜豆腐保平安]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/02/qing-cai-dou-fu-bao-ping-an/"/>
    <updated>2013-02-02T16:50:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/02/qing-cai-dou-fu-bao-ping-an</id>
    <content type="html"><![CDATA[<p>2000 多年来，随着中外文化的交流，豆腐不但走遍全国，而且走向世界。<br/>
今天，世界人民都把品尝中国豆腐菜看作一种美妙的艺术享受，<br/>
它就象中国的茶叶、瓷器、丝绸一样享誉世界。</p>

<!-- more -->


<p>说来也许令人难以相信，20 世纪 80 年代，美国著名的《经济展望》杂志竟然宣称：<br/>
“未来十年，最成功最有市场潜力的并非是汽车、电视机或电子产品，而是中国的豆腐。”</p>

<p>不错，中国的豆腐——不论男女老少，不分民族、宗教，人人皆可享用。<br/>
这白白嫩嫩、强身健体、延年益寿、价廉物美的豆腐，也引出了一个“豆腐文化”。</p>

<p>豆腐文化中头一个问题就是豆腐的发源地。中国是确信无疑的豆腐之乡，它的老家就在安徽寿县。<br/>
据五代谢绰《宋拾遗录》载：“豆腐之术，三代前后未闻。此物至汉淮南王亦始传其术于世。”<br/>
南宋大理学家朱熹也曾在《素食诗》中写道：<br/>
“种豆豆苗稀，力竭心已腐；早知淮南术，安坐获泉布。” 诗末自注：“世传豆腐本为淮南王术。”</p>

<p>淮南王刘安，是西汉高祖刘邦之孙，公元前164年封为淮南王，<br/>
都邑设于寿春(即今安徽寿县城关)，名扬古今的八公山正在寿春城边。</p>

<p>刘安雅好道学，欲求长生不老之术，不惜重金广招方术之士，<br/>
其中较为出名的有苏非、李尚、田由、雷波、伍波、晋昌、毛被、左昊八人，号称“八公”。<br/>
刘安幽八公相伴，登北山而造炉，炼仙丹以求寿。<br/>
他们取山中 “珍珠”、“大泉”、“马跑” 三泉清冽之水磨制豆汁，又以豆汁培育丹苗，<br/>
不料炼丹不成，豆汁与盐卤化合成一片芳香诱人、白白嫩嫩的东西。<br/>
当地胆大农夫取而食之，竟然美味可口，于是取名“豆腐”。<br/>
北山从此更名“八公山”，刘安也于无意中成为豆腐的老祖宗。</p>

<p>自刘安发明豆腐之后，八公山方圆数十里的广大村镇，成了名副其实的“豆腐之乡”。</p>

<p>有了豆腐自然会有豆腐菜。八公山人家，甭说一般家庭主妇，<br/>
就是十四五岁的娃娃也能做出几样风味各异的豆腐菜，<br/>
比如什么香椿拌豆腐、豆腐鸡蛋、辣酱拌豆腐、炒豆腐等等。<br/>
改革开放以后，八公山街头的 “豆腐馆” 比比皆是、远近闻名。</p>

<p>他们或煨、或煮、或煎、或炸、或溜……拢丝、雕刻各显身手，不仅引得本地人常来过把瘾，<br/>
合肥、蚌埠等相邻市县的人们隔三岔五光顾 “豆腐宴”，就连德国、英国、日本、荷兰、捷克、<br/>
斯洛伐克、香港、台湾等国家和地区的宾客也常常云集八公山下，品尝 “寿桃豆腐”、“琵琶豆腐”、<br/>
“葡萄豆腐”、“金钱豆腐” 等 400 余款造型逼真、色彩纷呈、鲜美异常、风味独具的豆腐菜。</p>

<p>豆腐文化也逐渐在整个神州大地弘扬。南北朝梁代建康(今南京)人诸葛颖曾著《淮南王食经))130卷，<br/>
毗邻淮南的江苏显然是“近水楼台先得月”，首先受到豆腐文化的影响。<br/>
一直到现在，江苏人还把豆腐、面筋、菌蕈、笋芽列为素菜四大金刚。</p>

<p>宋明以后，豆腐文化更加广为流传，许多文人名士也走进传播者的行列。<br/>
北宋大文豪苏东坡善食豆腐，元佑二年至无佑四年任杭州知府期间，曾亲自动手制作东坡豆腐。<br/>
南宋诗人陆游也在自编《渭南文集》中记载了豆腐菜的烹调。<br/>
更有趣的是清代大臣宋荦关于康熙皇帝与豆腐的一段记载。<br/>
时值康熙南巡苏州，皇帝新赐大臣的不是金玉奇玩，而是颇具人情味、乡土气的豆腐菜。</p>

<p>随着豆腐文化的传播，各地人民依照自己的口味，不断发展和丰富着豆腐菜的制作方法。<br/>
流传至今的有四川东部的 “口袋豆腐”，以汤汁乳白、状若橄榄、质地柔嫩、味道鲜美为特色；<br/>
成都一带享誉海内外的 “麻婆豆腐”，独具麻、辣、鲜、嫩、烫五大特点。<br/>
湖北名食 “荷包豆腐”、杭州名菜 “煨冻豆腐”、无锡“镜豆腐”、扬州“鸡汁煮干丝”、屯溪“霉豆腐”、<br/>
以及以豆腐衣为原料的“腐乳糟大肠”等等。当豆腐菜走向更遥远的边疆时，独特风味也就更为丰富。<br/>
譬如，吉林盛行“素鸡豆腐”，色泽美观，五香味浓；<br/>
又有“蛤蜊杏仁豆腐”，杏仁止咳润肠，雪蛤清头明目，豆腐软嫩细腻，色泽纯洁乳白，菜味甘短期爽口。<br/>
此外，朝鲜族人民用牛肉、粉条、鸡蛋、豆腐制成“梅云汤”，广西壮族有名菜“清蒸豆腐圆”，<br/>
云南大理白族有 “腊味螺豆腐”，香嫩麻辣，腊香扑鼻。<br/>
而“冰糖螺豆腐”，则为滋阴降火，怡疗神经衰弱的民间风味补品……</p>

<p>就这样，在长期的社会发展中，问世于寿县八公山的豆腐，终于传遍神州大地，<br/>
并逐渐形成中国豆腐的八大系列：<br/>
一为水豆腐，包括质地粗硬的北豆腐和细嫩的南豆腐；<br/>
二为半脱水制品，主要有百叶、千张等；<br/>
三为油炸制品，主要有炸豆腐泡和炸金丝；<br/>
四为卤制品，主要包括五香豆腐干和五香豆腐丝；<br/>
五为熏制品，诸如熏素肠、熏素肚；<br/>
六为冷冻制品，即冻豆腐；<br/>
七为干燥制品，比如豆腐皮、油皮；<br/>
八为发酵制品，包括人们熟悉的豆腐乳、臭豆腐等等。<br/>
这八类制品中，安徽淮南的八公山嫩豆腐，广西的桂林白腐乳，浙江绍兴腐乳，黑龙江的克东腐乳，<br/>
广东的三边腐竹，北京的王致和臭豆腐，湖北武汉的臭干子等，均已成为名驰中外的豆腐精品。<br/>
2000 多年来，随着中外文化的交流，豆腐不但走遍全国，而且走向世界。</p>

<p>说起这段历史，就要提起唐代大和尚鉴真。<br/>
天宝12年(公元757年)，鉴真东渡日本，带去了豆腐制作方法。<br/>
至今日本的豆腐包装袋上还有 “唐传豆腐干黄檗山御前淮南堂制”的字样，<br/>
而且许多豆腐菜谱直接采用汉名。如“元月夫妻豆腐”、“二月理宝豆腐”、<br/>
“三月炸丸豆腐”、“四月烤串豆腐”、“五月团鱼豆腐”等等。</p>

<p>继日本之后，朝鲜、泰国、马来西亚、新加坡、印尼、菲律宾等周边国家也从中国学到了豆腐制作技艺。<br/>
以后随着大批华人外行的足迹，中国豆腐走到了西欧、北美，<br/>
世界几乎所有国家都有了大豆食品的生产与销售。</p>

<p>与此同时，世界各国人民也以自己的智慧与习俗丰富着豆腐文化。<br/>
比如东邻日本以天然色素为原料，生产出红、蓝、绿七彩豆腐；<br/>
朝鲜人民根据本地资源，制作了风味各异的豆腐汤：豆酱豆腐汤、哈蜊豆腐汤、明太鱼豆腐汤等等；<br/>
印尼人普遍爱吃“酱拌炸豆腐”；<br/>
缅甸人越南人则创制了颇具东南亚风格的“酱拌蛋花豆腐”、“什锦盘”。<br/>
特别值得一提的是新加坡与马来西亚风行的“肉骨茶”，其实也是豆腐菜肴中的一种。<br/>
在美国，商人们则把豆腐加工成色香味俱全的快餐食品，诸如豆腐色拉、豆腐汉堡包、<br/>
豆腐冰淇淋、豆腐烤鸭、豆腐结婚蛋糕等等，在市场上十分畅销。<br/>
20世纪80年代以来，世界饮食营养科学界兴起一股引人瞩目的“豆腐热”，<br/>
高蛋白、低脂肪的豆腐食品越来越受到世界人民的喜爱，<br/>
成为科学界一致推崇的美味保健的营养佳品。</p>

<p>豆腐是以黄豆、青豆、黑豆为原料，经浸泡、磨浆、过滤、煮浆、<br/>
加细、凝固和成型等工序加工而成最广、最大众化的烹饪原料之一。<br/>
豆腐及豆腐制品的蛋白质含量比大豆高，而且豆腐蛋白属完全蛋白，不仅含有人体必需的八种氨基酸，<br/>
而且其比例也接近人体需要，营养效价较高。豆腐还含有脂肪、碳水化合物、维生素和矿物质等。<br/>
中医理论认为，豆腐味甘性凉，入脾、胃、大肠经，具有益气和中、生津润燥、清热解毒的功效，<br/>
可用以治疗赤眼、消渴，解硫磺、烧酒毒等。可豆腐虽好，多吃也有弊，过量也会危害健康。</p>

<p>问题1：引起消化不良：<br/>
豆腐中含有极为丰富的蛋白质，一次食用过多不仅阻碍人体对铁的吸收，<br/>
而且容易引起蛋白质消化不良，出现腹胀、腹泻等不适症状。</p>

<p>问题2：促使肾功能衰退：<br/>
在正常情况下，人吃进体内的植物蛋白质经过代谢变化，<br/>
最后大部分成为含氮废物，由肾脏排出体外。<br/>
人到老年，肾脏排泄废物的能力下降，此时若不注意饮食，<br/>
大量食用豆腐，摄入过多的植物性蛋白质，势必会使体内生成的含氮废物增多，<br/>
加重肾脏的负担，使肾功能进一步衰退，不利于身体健康。</p>

<p>问题3：促使动脉硬化形成：<br/>
美国医学专家指出，豆制品中含有极为丰富的蛋氨酸，蛋氨酸在酶的作用下可转化为半胱氨酸。<br/>
半胱氨酸会损伤动脉管壁内皮细胞，易使胆固醇和甘油三酯沉积于动脉壁上，促使动脉硬化形成。</p>

<p>问题4：导致碘缺乏：<br/>
制作豆腐的大豆含有一种叫皂角苷的物质，<br/>
它不仅能预防动脉粥样硬化，而且还能促进人体内碘的排泄。<br/>
长期过量食用豆腐很容易引起碘缺乏，导致碘缺乏病。</p>

<p>问题5：促使痛风发作：<br/>
豆腐含嘌呤较多，嘌呤代谢失常的痛风病人和血尿酸浓度增高的患者<br/>
多食易导致痛风发作，特别是痛风病患者要少食。</p>

<p>可见，豆腐虽好，也不宜天天吃，一次食用也不要过量。<br/>
老年人和肾病、缺铁性贫血、痛风病、动脉硬化患者更要控制食用量。<br/>
中医认为，豆腐性偏寒，胃寒者和易腹泻、腹胀、脾虚者以及常出现遗精的肾亏者也不宜多食。<br/>
豆腐营养丰富，含有铁、钙、磷、镁等人体必需的多种微量元素，<br/>
还含有糖类、植物油和丰富的优质蛋白，素有“植物肉”之美称。<br/>
豆腐的消化吸收率达 95％ 以上。两小块豆腐，即可满足一个人一天钙的需要量。</p>

<p>豆腐为补益清热养生食品，常食之，可补中益气、清热润燥、生津止渴、清洁肠胃。<br/>
更适于热性体质、口臭口渴、肠胃不清、热病后调养者食用。<br/>
现代医学证实，豆腐除有增加营养、帮助消化、增进食欲的功能外，<br/>
对齿、骨骼的生长发育也颇为有益，在造血功能中可增加血液中铁的含量；<br/>
豆腐不含胆固醇，为高血压、高血脂、高胆固醇症及动脉硬化、冠心病患者的药膳佳肴。<br/>
也是儿童、病弱者及老年人补充营养的食疗佳品。<br/>
豆腐含有丰富的植物雌激素，对防治骨质疏松症有良好的作用。<br/>
还有抑制乳腺癌、前列腺癌及血癌的功能，豆腐中的甾固醇、豆甾醇，均是抑癌的有效成分。</p>

<p>豆腐是中药炮制辅料之一。豆腐煮制，系中药炮制方法中的一种。<br/>
系将药物植入豆腐中并复以豆腐盖上，用火煮至豆腐呈蜂窝状，药物颜色变浅，时间约4小时即可。<br/>
如硫黄，含有毒成分，经用豆腐煮制后，一可减毒，二可洁净。<br/>
因豆腐含有丰富的蛋白质，系两性化合物，既可与碱性物质生成沉淀，又能溶解部分酸性有毒物质，<br/>
减低毒性成分，且因其表面积大，空隙多，而具有良好的吸附作用。</p>

<p>豆腐亦可用于食疗，具有一定的药用价值。如葱炖豆腐，可治感冒初起，每日食3～5次；<br/>
鲫鱼与豆腐共煮，可治麻疹出齐尚有余热者，也可用于下乳；<br/>
葱煎豆腐，可用于水肿膨胀；豆腐萝卜汤，可用于痰火吼喘；<br/>
豆腐红糖共煮，可用于吐血等。</p>

<p>豆腐如何选购和保鲜？<br/>
豆腐可以说是素食中的主角了，而海带由于富含碘让有些人喜欢吃传统板豆腐，<br/>
有些人则偏好盒装豆腐的滑嫩。无论偏好哪一种，都要注意豆腐的选购和保鲜问题。</p>

<p>豆腐本身的颜色是略带点微黄色，如果色泽过于死白，有可能添加漂白剂，则不宜选购。<br/>
此外，豆腐是高蛋白质的食品，很容易腐败，<br/>
尤其是自由市场卖的板豆腐较盒装豆腐易遭到污染，应多加留意。</p>

<p>盒装豆腐需要冷藏，所以需要到有良好冷藏设备的场所选购。<br/>
当盒装豆腐的包装有凸起，里面豆腐则混浊、水泡多且大，便属于不良品，千万不可选购。<br/>
而没有包装的豆腐很容易腐坏，买回家后，应立刻浸泡于水中，并放入冰箱冷藏，烹调前再取出。<br/>
取出后不要超过 4 小时，以保持新鲜，最好是在购买当天食用完毕。</p>

<p>盒装豆腐较易保存，但仍须放入冰箱冷藏，以确保在保存期限内不会腐败。<br/>
若无法一次食用完毕，可依所需的分量切割使用，剩余的部分再放回冷冻室，方便下次食用。</p>

<p>豆腐作为食药兼备的食品，具有益气、补虚等多方面的功能。<br/>
一般100克豆腐含钙量为140毫克－160毫克，豆腐又是植物食品中含蛋白质比较高的，<br/>
含有8种人体必需的氨基酸，还含有动物性食物缺乏的不饱和脂肪酸，卵磷脂等。<br/>
因此，常吃豆腐可以保护肝脏，促进机体代谢，增加免疫力并且有解毒作用。</p>

<p>豆腐不足之处是它所含的大豆蛋白缺少一种必需氨基酸——蛋氛酸，<br/>
若单独食用，蛋白质利用率低，如搭配一些别的食物，使大豆蛋白中所缺的蛋氨基酸得到补充，<br/>
使整个氨基酸的配比趋于平衡，人体就能充分吸收利用豆腐中的蛋白质。<br/>
蛋类、肉类蛋白质中的蛋氨酸含量较高，豆腐应与此类食物混合食用，<br/>
如豆腐炒鸡蛋、肉末豆腐、肉片烧豆腐等。这样搭配食用，便可提高豆腐中蛋白质的利用率。</p>

<p>豆腐是一种有利健康的功能性食品<br/>
据现代科学研究，豆腐在保证人类健康方向有一系列的功能。 主要是：<br/>
1．豆腐是最佳的低胰岛素的氨茎的特种食品。<br/>
2．豆腐可以改善人体脂肪结构<br/>
3．食用豆腐可以预防和抵制癌症。<br/>
4．食用豆腐可以预防和抵制更年期疾病<br/>
5．食用豆腐可以预防和抵制骨质疏松症<br/>
6．食用豆腐可以预防和抵制可以提高记忆力和精神集中力<br/>
7．食用豆腐可以预防和抵制老化和痴呆<br/>
8．食用豆腐可以预防和抵制肝功能的疾病<br/>
9．食用豆腐可以预防和抵制糖尿病<br/>
10．食用豆腐可以预防和抵制动脉硬化<br/>
11．食用豆腐可以预防和抵制伤风和流行性感冒</p>

<p>豆腐是怎样做成的呢？<br/>
把黄豆浸在水里，泡胀变软后，在石磨盘里磨成豆浆，再滤去豆渣，煮开。<br/>
这时候，黄豆里的蛋白质团粒被水簇拥着不停地运动，仿佛在豆浆桶里跳起了集体舞，<br/>
聚不到一块儿，形成了”胶体”溶液。 要使胶体溶液变成豆腐，必须点卤。<br/>
点卤用盐卤或石膏，盐卤主要含氯化镁，石膏是硫酸钙，<br/>
它们能使分散的蛋白质团粒很快地聚集到一块儿，<br/>
成了白花花的豆腐脑。再挤出水分，豆腐脑就变成了豆腐。<br/>
豆腐、豆腐脑就是凝聚的豆类蛋白质。</p>

<p>我们喝豆浆，有时就在重复这个豆腐制作过程哩。<br/>
有人爱喝甜浆。往豆浆里加一匙白糖，豆浆没有什么变化。<br/>
有人爱喝咸浆。在豆浆里倒些酱油或者加点盐，<br/>
不多会儿，碗里就出现了白花花的豆腐脑。<br/>
酱油里有盐，盐和盐卤性质相近，也能破坏豆浆的胶体状态，使蛋白质凝聚。<br/>
这不和做豆腐的情形一样吗？</p>

<p>豆浆点卤，出现豆腐脑。豆腐脑滤去水，变成豆腐。<br/>
将豆腐压紧，再榨干去些水，就成了豆腐干。<br/>
原来，豆浆、豆腐脑、豆腐、豆腐干，都是豆类蛋白质，只不过含的水有多有少罢了。<br/>
牛奶和豆浆差不多，也是胶体溶液。在新鲜的牛奶里，酪素，也就是蛋白质包裹着奶油，<br/>
在水里分散开来，不停地运动矿所以，牛奶总是均匀的乳白色液体。<br/>
让牛奶发酵，做成酸牛奶，酪素就聚集拢来，凝结成块，象豆腐脑似的。</p>

<p>豆腐是我国的一种古老传统食品，在一些古籍中，<br/>
如明代李时珍的《本草纲目》、叶子奇的《草目子》、<br/>
罗颀的《物原》等箸作中，都有豆腐之法始于汉淮南王刘安的记载。<br/>
中国人首开食用豆腐之先河，在人类饮食史上，树立了嘉惠世人的丰功。</p>

<p>制作豆腐的大豆含有丰富的营养。<br/>
以下是几种主要动植物蛋白食品蛋白质价（以标准蛋白质价为 100 时）的比较：<br/>
鸡蛋为 100，牛肉为 83，鱼肉平均为 70，稻米为 67，全麦粉为 53，玉米为 59，大豆粉为 74，<br/>
这说明大豆的蛋白质价可与鱼肉相媲美，是植物蛋白中的佼佼者。<br/>
大豆蛋白属全价蛋白，其氨基酸的组成比较好，人体所必需的 8 种氨基酸它都有。<br/>
除蛋白质以外，大豆中含有 18％ 左右的油脂，其绝大部分可以转移到豆制品中去。<br/>
大豆油脂的亚油酸（人体必需的主要脂肪酸）比例较大，且不含胆固醇，<br/>
不但有益人体神经、血管、大脑的发育生长，而且还可以预防心血管病、肥胖病等常见病发生。</p>

<p>大豆中也含有一些蛋白酶物质、皂甙和破坏维生素的成分，<br/>
它们对人体健康有不良影响，但只要适当加热即可消除；<br/>
另一方面，用大豆直接制成食品，人体对其蛋白质的消化吸收率只有 65％，<br/>
而制成豆腐以后，消化吸收率就可以提高到 92％ 到 95％。<br/>
可见，豆腐是大豆家族中于人最有益处的。</p>

<p>豆腐不仅是味美的食品，它还具有养生保健的作用。<br/>
中医书籍记载：豆腐，味甘性凉，入脾胃大肠经，具有益气和中、生津解毒的功效，<br/>
可用于赤眼、消渴、休痢等症，并解硫磺、烧酒之毒。<br/>
这些，都陆续为现代医学、营养池所肯定，比如，豆腐确有解酒精毒的作用；<br/>
豆腐可消渴，是糖尿病人的良好食品。</p>

<p>俗话说“青菜豆腐保平安”，这正是人们对豆腐营养保健价值的赞语。<br/>
经过千百年的演化，豆腐及其制品已经形成为中国烹饪原料训的一大类群，<br/>
有着数不清的地方名特产品，可以烹制出不下万种的菜肴、小吃等食品。<br/>
这是同豆腐及其制品具有广泛的可烹性分不开的。</p>

<p>比如：
它可以单独成菜，也可以作主料、辅料，或充作调料；<br/>
它可以作多种烹调工艺加工，切成块、片或丁或炖或炸；<br/>
它可做成多种菜式，多种造型，可为冷盘、热菜、汤羹、火锅，<br/>
可成卷、夹、丸、包等等还可调制成各种味型，既有干香的本味，更具独一无二的吸味特性，<br/>
“豆腐得味，远胜燕窝”。由于豆腐及其制品具有这么多的优点，难怪它脍炙人口，久盛不衰了。</p>

<p>当今，豆腐及其制品不仅仅是国人的常用食品，它已远出国门，风摩世界了。<br/>
当美国炸鸡、牛排吸引着别国居民的时候，<br/>
中国的传统食品——豆腐则以其独具的魅力进入美国市场，<br/>
以其高蛋白、低脂肪、低热量、低胆固醇的突出优点<br/>
而成为公认的理想食品，受到美国人的青睐。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[入手机械键盘 PLU ML 87]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/02/ru-shou-ji-jie-jian-pan-plu-ml-87/"/>
    <updated>2013-02-02T16:11:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/02/ru-shou-ji-jie-jian-pan-plu-ml-87</id>
    <content type="html"><![CDATA[<p>我酷爱 War III，和大学同学搭档打 2v2 对战是我一个很大的乐趣。<br/>
为了更好的干魔兽 2v2，我花 350 闷入了一块机械键盘。<br/>
型号是 PLU ML 87，87 个键，不带小键盘，樱桃黑轴。</p>

<!-- more -->


<p>买机械键盘犹豫了很久，看了不少网友对机械键盘的点评。<br/>
有人说，花大几百就买块键盘简直就是傻逼行为，烧钱，钱多没地方去了。<br/>
有人说，薄膜键盘跟机械键盘就是没得比，机械一给用上，就再无法用回薄膜了。<br/>
有人说，机械键盘，特别是黑轴键盘，打起游戏来那真是没话说，相当地给力。</p>

<p>听别人说是做不了数的，想去真正地了解，还得自己去尝试。<br/>
人生要尝试很多东西，迟或早的问题，现在手里虽然也不是很宽裕，但还是有点儿小储蓄。<br/>
本着 “迟早都要买”和 “早买早享受” 的想法，便开始在淘宝观摩上了。</p>

<p>发现人的欲望真是一发不可收拾，很快我便无法自拔，深陷其中。<br/>
我在网上不停地翻找合适我的键盘，发现了以下的一些机械键盘品牌：</p>

<p><strong>1。cherry 机械键盘</strong><br/>
cherry 是很早就生成机械键盘的大佬，而且很多其他品牌的机械盘生产厂家，<br/>
用的都是 cherry 制造的按键开关。cherry 的四种不同色彩的开关，也是非常有意思，容后再叙。<br/>
g3000 是很经典的一款，不过太贵了，600~700 了，<br/>
而且样式也很老，据说是属于 20 年不变样的那种。<br/>
其次就是，g3000 的功能键区离那一横排数字键太远了，<br/>
打魔兽的话 F1，F2，F3 是用来选择英雄的，可能不太方便，<br/>
而且，用惯了双飞燕的键盘格局，要去适应的话也需要花费时间。<br/>
g3800 是最近出的一款，价格比较亲民，400 左右，不过质量有下滑。<br/>
我看了下，g3800 没有用到内衬钢板，而且键盘做的很薄，<br/>
感觉不太符合我心目中机械键盘的模样，当然，cherry 是生成机械盘的大佬级生产厂家，<br/>
他的做法虽然不能为我辈理解，但肯定是有他的道理的。</p>

<p>环视机械键盘的大环境，国内已经出现了很多生产机械键盘的厂家：<br/>
PLU，雷柏，NEOTV，etc，虽然大部分用的还是 cherry 生产的机械开关，<br/>
但是毕竟也抢占了 cherry 键盘的市场份额，cherry 推出低价位的 g3800 也是不得已之举。<br/>
不过在我看来，PLU ML 87 的设计风格和口碑，还是对我具有更大的诱惑力。</p>

<p><strong>2。noppo 诺朴</strong><br/>
noppo choc mini 84 是之前让我非常动心的一款机械键盘，我比较喜欢那种 mini 的设计风格。<br/>
不过价格也是不便宜，最便宜情况下的标准黑轴不带背光键盘，在价位上就和 PLU 差不离了。<br/>
高级点儿的全按键无冲突的、带背光灯的，就要上 500 了。<br/>
不过最终让我对这块键盘失去兴趣的原因却是：<br/>
键帽做的太窄了，我手虽然不大，但是小键帽用起来肯定也存在一些不便利的地方。</p>

<p><strong>3。razer 黑寡妇</strong><br/>
这快键盘做的还是相当的酷，很喜欢，<br/>
不过也是在价格上接受不了，和 cherry 的 g3000 差不多价位了。<br/>
以上都是国外的品牌，毕竟中国的市场打开的比较迟，所以 还是首先从国外的生产商开始考虑。</p>

<p><strong>4。网际快车 g100，g200</strong><br/>
这块键盘我也是非常的中意，不过在网上找了下，黑轴的键盘只发现 g100 的款式，<br/>
g200 的款式有红轴、茶轴两种。<br/>
这块键盘比较吸引人的地方就是：<br/>
采用标准的 104 键设计，普通薄膜键盘上有的键，网际快车键盘上面都有。<br/>
其实我也觉得，PLU 的 87 键，keycool 的 87 键，noppo 的 84 键，都是比较取巧的。<br/>
在网上看了一下，cherry 的按键开关一个要 3 块多左右，<br/>
87 键和 84 键分别比标准的 104 键少了 17、20 个按键开关，这里就是一笔比较大的开支。<br/>
反观网际快车，我上次看的 g100 的黑轴是 285 块钱，g200 的茶轴是 350 块钱。<br/>
而且内衬钢板啥的都有，不缺少心目中机械键盘该有的那份沉稳厚重，<br/>
键盘造型也不是丑到让人无法接受，虽然 abs 键帽不及 pom，pbt 键帽结实，<br/>
不过好歹也能用那么久吧，实在不行了也能拆下来再去换一套键帽。</p>

<p>当初我就是这么想的：<br/>
好吧，这么具有诱惑力，那就买网际快车的黑轴键盘吧~<br/>
不过人总是这么善变，后来我看到有人说网际快车的第一批货设计上有些不成熟（g100？），<br/>
具体是什么没说明白，我自己去看了下用户评价，大意是按键冲突问题解决的不是很好，<br/>
有个人竟然说 ctrl 键和其他任何键一同按下的时候，都会冲突。<br/>
不知道是不是真的，毕竟没有亲自试用过，没有发言权。<br/>
不过，这还是让我产生了一些疑虑，本来坚定的心便由此动摇了。<br/>
如前所述，网际快车 g200 就出了红轴，茶轴，貌似黑轴还是 g100 的型号。<br/>
我在网店里看到的也是这样，黑轴 g100，285 元；茶轴 g200，349 元。<br/>
因为键盘买来主要用作打游戏，所以首选黑轴，<br/>
第二个因素就是，黑轴标称寿命是 5000w 次，茶轴的才 2000w 次，差了蛮多了。<br/>
后面便不做考虑，转向其他的品牌了。<br/>
其实，我也知道网络上面喷子、枪手很多，但作为消费者，<br/>
还是需要多多少少的看一些他人的评论，然后自己对这些东西才能有一个比较客观的认识。<br/>
我若是身家千万，肯定去把各品牌的盘都弄一块儿，在家里慢慢试，看到底那一块最适合自己。<br/>
同时验证一下，在网络上放出使用评论的这些人，都有哪些个说的是真话，哪些个说的是假话。</p>

<p><strong>5。凯酷 mini87、精灵雷神 M1、雷柏 v7、filco、NEO TV 竞神</strong><br/>
凯酷 mini 87 和 PLU ML 87 长的实在是太像了，<br/>
我也不知道自己为什么选的是 plu 而不是 keycool，<br/>
可能是因为 plu 的名气大一点的原因吧，keycool 我之前都没怎么听说过，<br/>
据称是一个非常了解游戏外设的玩家独力开创的一个品牌。</p>

<p>keycool 一个我比较欣赏的细节就是键盘线和键盘是分离设计的，<br/>
而且，线和键盘连接之后，能够自键盘后部左中右 3 个出口连出，显得非常的人性化。<br/>
不过，想仅仅凭借这个细节将我打动，还是不那么容易。<br/>
在 plu 的名声（plu 是弄星际争霸赛事的一个网站）和 keycool 的这个细节之间，我选择了前者~</p>

<p>精灵雷神 m1，号称 “红黑混血狮子”，标价才 200 多，之前也有点儿心动，<br/>
心想红轴是 cherry 最贵的轴，应该不会贵的没有道理，而且，该键盘同时拥有红轴和黑轴两种开关，<br/>
也能让我仔细体验一下这两种轴之间的感受差距。另外，该键盘的设计还有一些儿手托的成分。<br/>
不过，在后面仔细观察一番后我发现了一些比较坑爹的小细节：<br/>
精灵雷神 m1 的红轴并非 cherry 生产的正宗红轴，而是一个不知名的厂家生产的按键开关，<br/>
这个就有点儿欺诈的成分了，虽说也没公开的表明是 cherry 的红轴，<br/>
但是，也没说不是 cherry 的红轴啊，太不地道了，<br/>
对于我等菜鸟，若非留了个心眼外加眼神儿还不错，<br/>
还真发现不了，红色的按键开关上写的竟然不是 cherry。</p>

<p>在此小得意一番，我当初起疑心也是因为看到老板文字介绍里面的“加强版 cherry 黑轴”，<br/>
我心想没事你弄个加强版干嘛，难不成和一般的 cherry 黑轴有什么不一样？<br/>
后面我仔细一看才发现，这个加强版原来是同自身的红色开关做对比的，顿时牙都掉了一地。<br/>
再个就是，精灵雷神 m1 的键面很不平整，我担心用起来的时候适应不了，不过这都是题外话了，<br/>
血统不纯正的红轴足以让我对其失去任何兴趣。</p>

<p>雷柏 v7 称用的是自己研究生产的 “国产黄轴”，特性与 cherry 的轴有所不同，<br/>
针对亚洲人进行的设计，其实压力克数才 50g，比 cherry 最低克数的 60g 还少 10g<br/>
（cherry ：黑轴 80g，红轴 60g，青轴 60g，茶轴 60g）。<br/>
很多人都说 cherry 的 80g 黑轴打游戏手感很不错，还有一些人说 cherry 的红轴按起来太软了，<br/>
我心想 cherry 60g 的红轴按起来都算软，那黄轴的 50g 按起来不是软的不成样子了？<br/>
虽然自手指接触键帽至将键帽按到最底下，其间手的承受力也可能会呈现不同的曲线图样，<br/>
从而让人产生不同的按键体验，但是黄轴的起始压力克数就这么低，<br/>
我还有些担心用起这机械的手感会和薄膜差不多，那这机械的名头也就太他妈有名无实了。<br/>
后来翻了一些评论，看到好几条都说这键盘的质量不咋地，没用多久就啥啥键给挂掉了。<br/>
综上所述，果断将雷柏 v7 排除出我的候选名单<br/>
（内心里还是想首选老大哥 cherry 的按键开关用一下）。</p>

<p>filco 就不多说了，两个字，坑爹！<br/>
贵的真是没理由。在淘宝上看了一下键盘手托，filco 的一般都是 200 多，<br/>
我心想一手托而已，有必要整这么贵？就算你是真皮的，这么一小块儿牛皮，值那么多钱？</p>

<p>NEO TV 竞神是让我产生购买机械键盘冲动的第一块机械键盘。<br/>
好像是在 2011 年 wcg 的时候听说的，那时候专门跑网上看了下，<br/>
直接就拜倒在 NEO TV 竞神 特别的设计风格下面了（没有键盘上盖）~<br/>
所幸那时候手里没什么钱，不然我的第一块机械键盘可能就是 NEO TV 的竞神了。<br/>
不过，无上盖设计虽然很显酷，但让我比较担心的就是，在防灰、清理上面可能会衍生一些个问题。<br/>
环视其他同类产品的价格，plu87 才 350，keycool 87 也才 350，<br/>
noppo mini 84 也就 400 左右（均为标准黑轴）~<br/>
NEO TV 竞神在价格上真没什么明显的优势，499 元反而成了销量的绊脚石~<br/>
我特意去 NEO TV 的淘宝旗舰网上看了下，NEO TV 的服务态度也是比同类店铺低了相当一大截，<br/>
由此可见，NEO TV 的心态还是比较浮躁，无法成为一个顾客能与之良好合作的好卖家，<br/>
结合如上几点，让我放弃了选择 NEO TV 竞神机械键盘的想法。</p>

<p><strong>后记：</strong><br/>
PLU ML 87 是昨天到的，刚到手我就迫不及待的拆开了包装，<br/>
试了下手感，初次使用感觉这黑轴真不是盖的，还真比我的双飞燕薄膜硬了不少。<br/>
较遗憾的是，前天电脑插班出了些故障，而且网络也即将被销户，网速成问题，<br/>
不然我就马上要登入 vs 去好好玩几把魔兽对战体验一下了。<br/>
话说昨天晚上买了新的插板将电脑接好试了一下以后，发现这黑轴的触发距离果然是短的出奇，<br/>
按键根本就用不着按到底，轻轻往下面碰一下，电脑上面就能给响应起来，<br/>
说真的，让初次使用的我真的是很不适应 —— 平时使用薄膜键盘，我都是要很大力地按到底的~<br/>
今天再次使用的时候，发现经过了昨天晚上那一段时间的调整，<br/>
对按键的硬度已经有了很好的适应，敲了好一会儿都不觉得前臂肌肉小累了~<br/>
之前有点儿小蛋疼，我想拔出键帽看一下，<br/>
里面传说中的游戏神器 cherry 黑轴开关到底是什么样貌，以及 plu ml 87 是否用到了加固钢板。</p>

<p>我购买 plu 键盘的淘宝商家是这么描述 plu ml 87 的：<br/>
“由于 plu 的键帽紧紧的嵌合在 cherry 按键开关上面，<br/>
因此你丝毫不用担心运输过程中会出现键帽被震出来的情况出现”<br/>
想起这句话，我就蛋疼不已，<br/>
感情说我用拔键扣连 cherry 的轴心都给拔出来了，这还是他妈的所谓优点啊？！<br/>
各种无语，因为我在拔键帽的时候，确实是将 cherry 按键开关的轴心都给拔出来，<br/>
看到此等情景我当真是唏嘘不已，震惊的我马上尝试将轴心硬塞回去，<br/>
经过 10 来分钟的努力，总算是用粗笨如脚的手将左边 shift 键的 cherry 轴心给强行塞了回去。<br/>
悬着的心也掉了下来，再怎么着也不能在几百块钱的键盘刚入手第二天就把它给弄坏了啊~<br/>
总算一切顺利，测试一下后发现，按键的手感没有受到什么致命的影响，也没有出现失灵的情况。<br/>
拔键帽这么蛋疼，估计今后清理键盘、换键帽的时候，有罪受了~</p>

<p>总体来说，PLU ML 87 还是一款手感相当不错的入门级机械键盘，今后打魔兽对战有福了！</p>

<p><strong>2012。05。02。11。01</strong><br/>
发现在 Mac 上面使用 plu 有些问题，在用 photoShop 的时候<br/>
command + shift + s “另存为” 的快捷键无效<br/>
但是在 xcode 里面 ，command + shift + k 清理的快捷键却有效，真的是很奇葩。<br/>
另外，我发现没有了数字小键盘其实还是有点儿小不方便，<br/>
在打游戏的时候没有数字区可能影响不大，但是平时输入密码啥的，<br/>
一时间还真适应不过来没数字区，经常下意识的将手摸过去准备敲数字，<br/>
却蓦然发现自己用的是 %80 键盘，各种蛋疼，看来自己还得慢慢来适应啊~</p>

<p>自从经历过上次的拔键帽将 cherry 按键开关的轴心拔出来的事情，我就有点儿小不爽了。<br/>
后来在网上查了下，发现我这种情况还真不少见，也有其他几个人反映出有同样的问题。<br/>
甚至还出现了一些比较有意思的对话，大意是某某说拔 plu 的键帽毫无压力，<br/>
结果过来盖楼的人说他的 plu 质量不过关，还有的人评论说 “这基本是不可能的”。<br/>
一大堆，看他们说着蛮有意思，自己听着却是比较辛酸。</p>

<p>现在想来，其实当初有如下两款键盘还是值得去试一下的：<br/>
1。keycool mini 87，前面我只是说 3 边走线和盘线分离的设计比较不错，<br/>
但是对 keycool 的来历多有诟病，其实想来，plu 也不是专业做键盘的啊，<br/>
我为 plu 的声名放弃选择 keycool，多少是对 keycool 有些不公平。。。。<br/>
后面仔细看了下，发现 keycool 惹人心爱的小细节还是有不少：<br/>
一、镀金 usb 连接线<br/>
二、标准版即带无冲功能(记不太清，好像并不是全键无冲)，plu 的话带无冲的要加到 400 左右了<br/>
三、商家送的小礼品比 plu 丰富：3 色键帽 10 个，拔键器，键盘袋，<br/>
四、相比于 plu，键帽和机械轴的啮合没那么紧，拔掉键帽相对容易<br/>
五、观察了一下，脚支架比 plu 看起来牢实，plu 的脚支架掰开竟然发出砸砸的声音。。<br/>
六、如前所述，盘线分离，三边走线</p>

<p>2。网际快车 g200 的茶轴其实也可以考虑一下，<br/>
据说茶轴结合了黑轴和青轴的特色，手感虽近似于薄膜键盘，但还是存在一些差异。<br/>
我发现国产的机械键盘都包含了各自的一些特色：<br/>
plu 的就是其所谓的响应速度，是一般键盘的3倍。<br/>
keycool 的最大特色就是线盘分离、三边走线。<br/>
NeoTV zilia 竞神的就是支持有线无线两种模式以及无上盖设计。<br/>
也观察机械键盘那么久了，发现国产的机械键盘确实是有抄袭之嫌，<br/>
虽然也不乏自己所独有的特色，但是 plu ml 87 和 凯酷 mini 87 的 %80、窄边框设计<br/>
怎么看怎么就是学的国外的啊，多媒体功能支持也是差不多的情况。<br/>
我并不是不赞同学习借鉴，只是发表一些自己的看法。<br/>
其实这些借鉴也不是不行，毕竟键盘的布局大多是这种模式，<br/>
再变也变不出什么花儿来，没有遭到别人的起诉就已经很舒服了。<br/>
相比之下，苹果，三星在智能机上面经常就 “抄” 字将对方诉诸法院，<br/>
机械键盘市场的平静已是非常之难得了，还是衷心祝愿中国的机械盘制造商能够做好做大。<br/>
一不小心看到 cherry 轴的内部之后，我就觉得，其实机械盘真没什么稀罕，<br/>
能卖到几百块钱真有些炒作的成分，应了那句话——买机械盘等于烧钱。<br/>
国产机械盘的价格动辄就是好几百，我觉得 cherry 按键开关的价格就是关键因素。<br/>
换言之，即使你买的是国产机械键盘，大部分钱还是给德国赚走了。<br/>
反观大环境，肯定有不少人都是像我想的这样，要用机械盘肯定要用 cherry 生产的开关，<br/>
那啥雷柏 v7 的黄轴，精灵雷神 M1 的国产红轴，反而成了导致它们买的不好的不良因素。<br/>
我猜，即使雷柏 v7，精灵雷神 M1 的价格才 200 多，也肯定能比用 cherry 轴的生产商赚的更多。<br/>
就我个人而言，当初买机械盘就是想体验一下 cherry 生产的按键开关<br/>
突然间我觉得自己有点儿犯贱，几块钱才买那么一小坨包着几份小铁片的塑料，凭什么？<br/>
想来，不是自己脑袋有点儿发烧还真干不出来。
说来还是国产的开关自己不争气，若真有专注于产品质量、用户百般叫好的国产机械轴，<br/>
我必不对 cherry 如此执着，cherry 坑了多少中国老百姓的钱啊，也只有他们自己知道了~</p>

<blockquote><p>^ ^</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[相机选购及使用常识]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/02/xiang-ji-xuan-gou-ji-shi-yong-chang-shi/"/>
    <updated>2013-02-02T15:38:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/02/xiang-ji-xuan-gou-ji-shi-yong-chang-shi</id>
    <content type="html"><![CDATA[<p>以下概念、问答均整理自我和 Eric 的聊天记录。</p>

<!-- more -->


<p><strong>1。“微单” 和 “单反” 有什么区别？</strong><br/>
两者的根本区别是微单没有反光镜，而且感光元件比单反小，那么成像也就差些，<br/>
它类似于单反的简化版，介于卡片机和单反之间，微单的好处就是轻便，外观也好看，<br/>
个人建议，如果你是想拍摄好照片，或想学习摄影的话，还是在单反上下功夫比较好。<br/>
<img class="center" src="http://yang3wei.github.com/images/posts/dan_fan_jie_gou.jpg">
<img class="center" src="http://yang3wei.github.com/images/posts/dan_fan_tou_shi.png" width="512" height="384">
<img class="center" src="http://yang3wei.github.com/images/posts/xiang_ji_guang_quan.jpg">
<strong>2。“单电” 和 “微单”？</strong><br/>
单电和微单都是一样的，都是微型单反，只不过 SONY 自己叫微单，其它的叫单电。<br/>
微单都是数码成象吧，只有单反是物理的。对凡是通过数码成像单电原理的都叫微单。</p>

<p><strong>3。卡片机的拍摄效果和主流智能机的拍摄效果？</strong><br/>
卡片机网上有便宜的 几百块，现在两千左右的手机拍出来的效果和那种几百的区别不大了。<br/>
和几百的卡片机差不多。<br/>
问：我觉得差别应该还是有些的，结构都不一样啊？<br/>
iphone 上的镜头不能伸缩吧，而且镜头大小差异也比较大。<br/>
答：区别肯定有，不大，我是看不出低端卡片机和手机有多大区别。<br/>
看一些好的手机拍出来的样片好像不比一些卡片机差。<br/>
卡片机有个镜头上的优势，支持光学变焦（镜头可物理伸缩），<br/>
而手机镜头基本都是定焦的（不能调节焦距）。<br/>
取景大小是固定的，调整是通过调节感光元件的画幅尺寸来调整的 这样拍远景有像素损失。</p>

<p><strong>4。单电的主要卖点是什么？</strong><br/>
有单反的一些特点，比如手动（即：手动对光圈、调节曝光度、焦距、快门速度调整，<br/>
一般的卡片机好像就只能调节 iso 曝光度，再多一点就是可以调节曝光速度），<br/>
还可以换镜头（单反穷三代），体积比较小，携带轻便。<br/>
单反还有个好处，可以拍 raw 格式的图片，这种格式，如果拍照的时候光线上没有调整好，<br/>
可以通过后期处理调好。一般的卡片机是不支持 raw 格式的。<br/>
卡片机也有好有坏，佳能尼康这些大牌子</p>

<p><strong>5。什么是 iso？</strong><br/>
就是感光原件上有很多像素点，iso 就是相当于调节这个感光点的敏感度<br/>
（调节 iso 相当于非自然的处理了）。<br/>
胶片单反是没有 iso 这个参数的，那个时候拍照就一些物理指标，比如光圈和快门速度。<br/>
（接就用胶片来感光了啊，没法儿调）</p>

<p><strong>6。对光圈就是调节焦距？</strong><br/>
光圈是镜头上的一个物理装置，原理和人的瞳孔差不多，<br/>
瞳孔放大采光率高，反之亦然（和调焦不是一个概念）。</p>

<p><strong>7。纯正的单反就是指用胶片而非感光元件成像的么？</strong><br/>
不是。数码单反也是单反，单镜头反光式相机，好像全称是这个。<br/>
卡片机取景窗和镜头是分开的，单反就是为了保证取景窗和拍出来的片子是一致的画面，<br/>
在胶片或者感光元件前面加了个凌镜用来把镜头取景反射到取景窗。<br/>
以前的傻瓜相机都有个取景窗，取景窗有点像一个猫眼，和镜头成像是分开的。<br/>
为啥买单电？之前那台明基的卡片机拍出来的照片，感觉颜色还原不行，<br/>
有点儿灰蒙蒙的，一狠心就买了个单电。<br/>
PS：<br/>
在 iPod Touch 4 上面截了一张图片，放到电脑上面看竟然模糊的一塌糊涂，<br/>
看来我的显示器还原度也不行。</p>

<p><strong>8。拍照时的晃动导致成像模糊的对策 —— 光学防抖、数码防抖（也叫智能防抖）的区别是什么？</strong><br/>
问：其实我觉得拿着拍的话影响应该蛮大的，你拍的时候多少会晃动，这个时候感光就会出现问题。<br/>
答：光线好的话，影响不大，相机好不好看光线不好的情况下拍照效果是个很重要的参考。<br/>
光线好的情况下，感光元件能得到很好的发挥，另外自动拍照会在光线充足的情况下，<br/>
把快门速度调低，防抖这个时候意义不大。<br/>
主要是光线不太充足的时候，快门速度会变慢，这个时候抖一下容易模糊。<br/>
快门速度比较快的情况下，比如快的有千分之一秒的快门，这个时候你手抖一下对画面影响不大。</p>

<p><strong>9。推荐一款性价比较高的单电？</strong><br/>
松下 lumix gf3（买之前看了很久 最后犹豫在尼康j1和松下gf3之间 最后还是gf3性价比高一些）。</p>

<p><strong>10。相机拍摄输出的视频是什么格式？</strong><br/>
一般是 mov。包括很多支持录像的手机，拍摄输出的视频也是 mov。</p>

<p><strong>11。mov 有什么好处么？类似 raw？</strong><br/>
可能这种片子拍出来不需要经过太多压缩处理，也就是说能够尽可能多的保留拍摄细节，<br/>
后期你自己需要什么其他的格式的话，再做相应的压缩、格式转换处理。</p>

<p><strong>12。一厘米微距是什么意思？</strong><br/>
就是能把焦点对到离镜头只有 1cm 的位置，可以拍一些很小的东西也不模糊。<br/>
这个还有意思一点儿，这个镜头手机是很难超越了。</p>

<p><strong>13。（待续）。。。</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小孩儿喝咖啡好吗]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/02/xiao-hai-er-he-ka-pei-hao-ma/"/>
    <updated>2013-02-02T15:28:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/02/xiao-hai-er-he-ka-pei-hao-ma</id>
    <content type="html"><![CDATA[<p>原文链接：<br/>
<a href="http://zhidao.baidu.com/question/102837946.html">http://zhidao.baidu.com/question/102837946.html</a><br/>
我今年 14，最近期末，有很多东西要复习，作业也很多。<br/>
家里妈妈喜欢喝清咖啡，没有咖啡伴侣。<br/>
昨天晚上困得支持不住，泡了一杯清咖啡，加了牛奶喝。<br/>
今天早上又喝了一杯提神。今天确实很精神。<br/>
想问一下每天喝一杯咖啡对身体有害吗？</p>

<!-- more -->


<p>不好 影响脑部发育。</p>

<p>饮用禁忌<br/>
1.铁剂不宜与茶、牛奶、咖啡同服。因牛奶含磷高，可影响铁的吸收。<br/>
茶和咖啡中的鞣酸可使铁的吸收减少75%。宜用温开水送服。</p>

<p>2.茶叶和咖啡中的单宁酸，会让钙吸收降低。<br/>
所以，喝茶和喝咖啡的时间，最好是选在两餐当中。</p>

<p>3.含咖啡因的饮料和食品，被孕妇大量饮用后，会出现恶心、呕吐、头痛、心跳加快等症状。<br/>
咖啡因还会通过胎盘进入胎儿体内，影响胎儿发育。</p>

<p>4.不少医生认为,孕妇每天喝1~2杯(每杯6~8盎司)咖啡、茶或碳酸类饮料,不会对胎儿造成影响。<br/>
但为慎重起见,孕妇最好禁用。咖啡因可导致流产率上升,所以应喝不含咖啡因的饮料。</p>

<p>5.想减肥的人不要多饮咖啡。<br/>
常见的咖啡伴侣中含有较多的奶类、糖类和脂肪，咖啡本身可能刺激胃液分泌，<br/>
增进食物消化和吸收，不但不能瘦腰，还会使人发胖。</p>

<p>6.儿童不宜喝咖啡。<br/>
咖啡因可以兴奋儿童中枢神经系统,干扰儿童的记忆,造成儿童多动症。</p>

<p>7.浓茶、咖啡、含碳酸盐的饮料也是形成消化道溃疡病的危险因子。</p>

<p>8.紧张时添乱 咖啡因有助于提高警觉性、灵敏性、记忆力及集中力。<br/>
但饮用超过比你平常所习惯饮用量的咖啡，就会产生类似食用相同剂量的兴奋剂，会造成神经过敏。<br/>
对于倾向焦虑失调的人而言，咖啡因会导致手心冒汗、心悸、耳鸣这些症状更加恶化。</p>

<p>9.加剧高血压 咖啡因因为本身具有的止痛作用，常与其他简单的止痛剂合成复方，<br/>
但是，长期大量服用，如果你本身已有高血压时，使用大量咖啡因只会使你的情况更为严重。<br/>
因为光是咖啡因就能使血压上升，若再加上情绪紧张，就会产生危险性的相乘效果，<br/>
因此，高血压的危险人群尤其应避免在工作压力大的时候喝含咖啡因的饮料。<br/>
有些常年有喝咖啡习惯的人，以为他们对咖啡因的效果已经免疫，然而事实并非如此，<br/>
一项研究显示，喝一杯咖啡后，血压升高的时间可长达12小时。</p>

<p>10.诱发骨质疏松 咖啡因本身具有很好的利尿效果，如果长期且大量喝咖啡，容易造成骨质流失，<br/>
对骨量的保存会有不利的影响，对于妇女来说，可能会增加骨质疏松的威胁。<br/>
但前提是，平时食物中本来就缺乏摄取足够的钙，或是不经常动的人，加上更年期后的女性，<br/>
因缺少雌激素造成的钙质流失，以上这些情况再加上大量的咖啡因，才可能对骨造成威胁。<br/>
如果能够按照合理的量来享受，你还是可以做到不因噎废食的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[多边形顶点按逆时针排列算法]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/02/duo-bian-xing-ding-dian-an-ni-shi-zhen-pai-lie-suan-fa/"/>
    <updated>2013-02-02T15:12:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/02/duo-bian-xing-ding-dian-an-ni-shi-zhen-pai-lie-suan-fa</id>
    <content type="html"><![CDATA[<p>原文链接：<br/>
<a href="http://www.myexception.cn/program/776883.html">http://www.myexception.cn/program/776883.html</a></p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="k">const</span> <span class="kt">double</span> <span class="n">eps</span> <span class="o">=</span> <span class="mf">1e-8</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">sign</span><span class="p">(</span><span class="kt">double</span> <span class="n">d</span><span class="p">){</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">d</span> <span class="o">&lt;</span> <span class="o">-</span><span class="n">eps</span> <span class="o">?</span> <span class="o">-</span><span class="mi">1</span> <span class="o">:</span> <span class="p">(</span><span class="n">d</span> <span class="o">&gt;</span> <span class="n">eps</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 多边形类</span>
</span><span class='line'><span class="k">struct</span> <span class="n">poly</span><span class="p">{</span>
</span><span class='line'>  <span class="k">static</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="mi">1005</span><span class="p">;</span> <span class="c1">// 点数的最大值</span>
</span><span class='line'>  <span class="n">point</span> <span class="n">ps</span><span class="p">[</span><span class="n">N</span> <span class="o">+</span> <span class="mi">5</span><span class="p">];</span> <span class="c1">// 逆时针存储多边形的点，[0, pn - 1] 存储点</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">pn</span><span class="p">;</span>  <span class="c1">// 点数</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">poly</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">pn</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 加进一个点 </span>
</span><span class='line'>  <span class="kt">void</span> <span class="n">push</span><span class="p">(</span><span class="n">point</span> <span class="n">tp</span><span class="p">){</span>
</span><span class='line'>      <span class="n">ps</span><span class="p">[</span><span class="n">pn</span> <span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">tp</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 第k个位置</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">trim</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="p">){</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">(</span><span class="n">k</span> <span class="o">+</span> <span class="n">pn</span><span class="p">)</span> <span class="o">%</span> <span class="n">pn</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="n">clear</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">pn</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 多边形 org 的有向面积</span>
</span><span class='line'><span class="kt">double</span> <span class="n">signArea</span><span class="p">(</span><span class="n">poly</span> <span class="n">org</span><span class="p">){</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">g</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">double</span> <span class="n">ans</span><span class="p">;</span>
</span><span class='line'>  <span class="n">point</span><span class="o">*</span> <span class="n">ps</span> <span class="o">=</span> <span class="n">org</span><span class="p">.</span><span class="n">ps</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="n">ans</span> <span class="o">=</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">org</span><span class="p">.</span><span class="n">pn</span><span class="p">;</span> <span class="n">i</span> <span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">g</span> <span class="o">=</span> <span class="n">org</span><span class="p">.</span><span class="n">trim</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="n">ans</span> <span class="o">+=</span> <span class="p">(</span><span class="n">ps</span><span class="p">[</span><span class="n">g</span><span class="p">].</span><span class="n">y</span> <span class="o">*</span> <span class="n">ps</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">x</span> <span class="o">-</span> <span class="n">ps</span><span class="p">[</span><span class="n">g</span><span class="p">].</span><span class="n">x</span> <span class="o">*</span> <span class="n">ps</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">y</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">ans</span> <span class="o">/</span> <span class="mf">2.0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 如果 org 的点是逆时针的，则调整为逆时针的</span>
</span><span class='line'><span class="kt">void</span> <span class="n">makeAntclockwise</span><span class="p">(</span><span class="n">poly</span><span class="o">&amp;</span> <span class="n">org</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">sign</span><span class="p">(</span><span class="n">signArea</span><span class="p">(</span><span class="n">org</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">reverse</span><span class="p">(</span><span class="n">org</span><span class="p">.</span><span class="n">ps</span><span class="p">,</span> <span class="n">org</span><span class="p">.</span><span class="n">ps</span> <span class="o">+</span> <span class="n">org</span><span class="p">.</span><span class="n">pn</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
