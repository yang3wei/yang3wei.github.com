<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[yang3wei的专栏]]></title>
  <link href="http://yang3wei.github.com/atom.xml" rel="self"/>
  <link href="http://yang3wei.github.com/"/>
  <updated>2013-02-11T15:44:30+08:00</updated>
  <id>http://yang3wei.github.com/</id>
  <author>
    <name><![CDATA[yang3wei]]></name>
    <email><![CDATA[88480585@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting Started with JNI and C++ on OSX Lion]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/11/getting-started-with-jni-and-c-plus-plus-on-osx-lion/"/>
    <updated>2013-02-11T15:19:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/11/getting-started-with-jni-and-c-plus-plus-on-osx-lion</id>
    <content type="html"><![CDATA[<p>原文链接：<br/>
<a href="http://mrjoelkemp.com/2012/01/getting-started-with-jni-and-c-on-osx-lion/">Getting Started with JNI and C++ on OSX Lion</a><br/>
This tutorial combines a few key ideas to getting started with a Hello World program using the Java Native Interface (JNI) on Mac OSX. JNI allows Java code to utilize C++ code (i.e., native code).</p>

<!-- more -->


<p>
This technology is very important if you want to do any computationally intensive operations (games, video processing, audio processing, etc) in mobile (Android) apps or your everyday Java applications.<br/>
The important point to this article is that most tutorials only talk about compilation for Windows and Solaris machines — I will focus exclusively on OSX. Knowing these subtleties can save you a lot of time and headaches!</p>

<h3>Creating the Java Class</h3>

<p>Let’s start by creating a very simple Hello World program!<br/>
In a file <strong>HelloWorld.java</strong></p>

<figure class='code'><figcaption><span>HelloWorld.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>
</span><span class='line'><span class="kd">class</span> <span class="nc">HelloWorld</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">native</span> <span class="kt">void</span> <span class="nf">print</span><span class="o">();</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">new</span> <span class="nf">HelloWorld</span><span class="o">().</span><span class="na">print</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="kd">static</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">loadLibrary</span><span class="o">(</span><span class="s">&quot;HelloWorld&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above code details a simple Java class that has a very important native method <strong>print()</strong>. The fact that this method is native signifies that it should be implemented in C++. We’ll get to that implementation in a bit.<br/>
The static section gets executed first, which expects to load a JNI shared or dynamic library known as HelloWorld.</p>

<h3>Compiling the Java Class</h3>

<p>Compiling the newly created HelloWorld class involves opening up the terminal and issuing the command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>javac HelloWorld.java  </span></code></pre></td></tr></table></div></figure>


<p>
We use the javac command to generate the class file that is needed to generate the appropriate JNI C++ classes. You can’t skip the generation of the class file!<br/>
To create the JNI C++ files, you can just type the following command into the terminal:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>javah -jni HelloWorld  </span></code></pre></td></tr></table></div></figure>


<p>
The above command will generate the following header file:</p>

<figure class='code'><figcaption><span>HelloWorld.h  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'>
</span><span class='line'><span class="cm">/* DO NOT EDIT THIS FILE - it is machine generated */</span>
</span><span class='line'><span class="cp">#include &lt;jni.h&gt;  </span>
</span><span class='line'><span class="cm">/* Header for class HelloWorld */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef _Included_HelloWorld  </span>
</span><span class='line'><span class="cp">#define _Included_HelloWorld  </span>
</span><span class='line'><span class="cp">#ifdef __cplusplus  </span>
</span><span class='line'><span class="k">extern</span> <span class="s">&quot;C&quot;</span> <span class="p">{</span>
</span><span class='line'><span class="cp">#endif  </span>
</span><span class='line'><span class="cm">/*  </span>
</span><span class='line'><span class="cm"> * Class:     HelloWorld  </span>
</span><span class='line'><span class="cm"> * Method:    print  </span>
</span><span class='line'><span class="cm"> * Signature: ()V  </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span> <span class="n">Java_HelloWorld_print</span>
</span><span class='line'>  <span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jobject</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef __cplusplus  </span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">#endif  </span>
</span><span class='line'><span class="cp">#endif  </span>
</span></code></pre></td></tr></table></div></figure>


<p>This file contains a lot of seemingly obscure boiler-plate specific to JNI. The part we care about is the definition of the print() function that was declared to be native in the HelloWorld.java file.<br/>
By convention, native functions will be named “Java<em>” followed by the class name “HelloWorld</em>” and the function name “print”. Thus, we obtain the native function: Java_HelloWorld_print().<br/>
Let’s write an implementation file to define the behavior of the Java_HelloWorld_print() function.</p>

<figure class='code'><figcaption><span>HelloWorld.cpp  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'>
</span><span class='line'><span class="cp">#include &lt;jni.h&gt;  </span>
</span><span class='line'><span class="cp">#include &lt;iostream&gt;  </span>
</span><span class='line'><span class="cp">#include &quot;HelloWorld.h&quot;  </span>
</span><span class='line'><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">JNIEXPORT</span> <span class="kt">void</span> <span class="n">JNICALL</span>
</span><span class='line'><span class="n">Java_HelloWorld_print</span><span class="p">(</span><span class="n">JNIEnv</span> <span class="o">*</span><span class="p">,</span> <span class="n">jobject</span><span class="p">){</span>
</span><span class='line'>    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;Oh JNI, how cumbersome you are!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The implementation of the native function simply prints out a literal string.</p>

<h3>Compiling the C++ Code</h3>

<p>To include the native code in the compilation of the Java program, we need to compile our native C++ code into a dynamic library. On OSX, JNI shared/dynamic libraries have the extension <strong>.jnilib</strong>. This is a huge difference from the extensions on Windows and Solaris machines: <strong>.dll</strong> and <strong>.so</strong>, respectively.<br/>
Before we get to the command, there’s a big problem: your compiler (g++) will need to know the location of the jni.h library. You don’t get this linking for free, so you have to specify the location of the header file within the compilation command.<br/>
The locations of the the jni.h library that need to be included are:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>"-I/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Headers"  
</span><span class='line'>"-I/Developer/SDKs/MacOSX10.6.sdk/System/Library/Frameworks/JavaVM.framework/Versions/A/Headers"  </span></code></pre></td></tr></table></div></figure>


<p>
Unfortunately, leaving off either of these results in the compiler error:<br/>
HelloWorld.cpp:1:17: error: jni.h: No such file or directory<br/>
In your terminal, issue the command (all part of a single command):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g++ "-I/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Headers" "-I/Developer/SDKs/MacOSX10.6.sdk/System/Library/Frameworks/JavaVM.framework/Versions/A/Headers" -c HelloWorld.cpp  </span></code></pre></td></tr></table></div></figure>


<p>
Notice that we include the -c option to generate the object file for our native code: <strong>HelloWorld.o</strong>. We also include the implementation file for our native class: <strong>HelloWorld.cpp</strong>.<br/>
The final step for compiling the native source is to issue the command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>g++ -dynamiclib -o libhelloworld.jnilib HelloWorld.o  </span></code></pre></td></tr></table></div></figure>


<p>
This command uses the dynamiclib option to specify that the compiler shouldn’t produce a standard executable, but should produce a library. The -o option is used to name the library with the appropriate extension: <strong>libhelloworld.jnilib</strong>. We also include the object file generated in the previous step.<br/>
The result of this process is the compiled library <strong>libhelloworld.jnilib</strong>.</p>

<h3>Compiling the Native Library and Java Program</h3>

<p>The final piece to this painstaking puzzle is to connect all of the pieces! We’re going to finally compile our Java program which will look for the jnilib library containing our compiled native code.<br/>
In your terminal, issue the following command:<br/>
java HelloWorld<br/>
This will compile and run our HelloWorld program and display the output:<br/>
Oh JNI, how cumbersome you are!</p>

<h3>One final note</h3>

<p>If you see the error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Exception in thread "main" java.lang.UnsatisfiedLinkError: no HelloWorld in java.library.path  
</span><span class='line'>at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1758)  
</span><span class='line'>at java.lang.Runtime.loadLibrary0(Runtime.java:823)  
</span><span class='line'>at java.lang.System.loadLibrary(System.java:1045)  
</span><span class='line'>at HelloWorld.(HelloWorld.java:7)  </span></code></pre></td></tr></table></div></figure>


<p>
Then you’ve mistakenly used a different shared/dynamic library extension than the necessary .jnilib! This is the root of all evil in this exercise!<br/>
Happy coding!<br/>
This tutorial is based on the JNI tutorial provided by Sun.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java -Dfile.encoding=UTF-8 干掉乱码]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/10/java-dfile-dot-encoding-equals-utf-8-gan-diao-luan-ma/"/>
    <updated>2013-02-10T15:18:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/10/java-dfile-dot-encoding-equals-utf-8-gan-diao-luan-ma</id>
    <content type="html"><![CDATA[<p>参考链接：<br/>
<a href="http://hi.baidu.com/cnjsp/item/a2c9c9aed1de96a829ce9d24">java 乱码问题-Dfile.encoding=UTF-8</a><br/>
<a href="http://yaojingguo.blogspot.com/2009/02/javas-fileencoding-property-on-windows.html">Java&#8217;s file.encoding property on Windows platform</a><br/>
<a href="http://wiki.answers.com/Q/How_do_you_open_a_jar_file_on_a_mac">How do you open a jar file on a mac?</a></p>

<!-- more -->


<h3>遭遇乱码问题的来龙去脉</h3>

<p>这两天写了一个 Java 程序来玩，结果又遭遇了以前遇到过很多次的乱码问题，具体描述一下：<br/>
在 Mac 系统里面，常用的 Java 程序启动方式有如下几种：<br/>
<strong>1.通过 eclipse 执行 class 入口文件启动；</strong><br/>
<strong>2.在 Terminal 里面用 java Test.class 或 jave -jar Test.jar 启动</strong><br/>
<strong>3.通过 ant 执行 class 入口文件启动；</strong><br/>
<strong>4.直接用 ant 执行 jar 文件；</strong><br/>
<strong>5.用 Mac OS CoreServices 中的 Jar Launcher.app 执行 jar 文件。</strong><br/>
<strong>6.用 Mac OS 自带的 Jar Bundler.app 将 jar 文件包装成 app，然后执行</strong></p>

<p>执行途径还是相当地丰富，但以不同的方式来执行，从控制台中得到的程序输出也不一致<br/>
比如说，刚刚在 <code>eclipse</code> 中还能正常打印出来的汉字，在打成 <code>jar</code> 包以后，<br/>
双击该 <code>jar</code> 文件以 <code>Jar Launcher.app</code> 的方式来启动，打印出来的文字就成了乱码了。<br/>
毕竟写出来的 <code>java</code> 程序最终还是要打成 <code>Jar</code> 包来使用的，总不能每次都在 <code>eclipse</code> 中启动吧？<br/>
前面说过，不是第一次碰到这种问题了，于是便想着要把这个问题给解决下。<br/>
灵机一动之下想到一个好办法，在这些启动方式下均把 <code>System</code> 中的属性遍历打印出来，<br/>
然后用 <code>git</code> 来做各个版本的差异比较，有可能会套出一些蛛丝马迹~<br/>
抱着试一试的想法实践了一把，果然发现一些猫腻，集中体现在 <code>file.encoding</code> 这个属性上面。<br/>
在 <code>file.encoding</code> 属性的值是 <code>UTF-8</code> 时，是不存在乱码问题的，<code>eclipse</code> 执行就属于这种情况。<br/>
<code>Jar Launcher.app</code> 执行时，该属性的值就变成 <code>MacRoman</code> 了，<br/>
上面给出的资料中有对该属性的介绍，可以用 <code>java -D&lt;name&gt;=&lt;value&gt; Test.jar</code> 来更改它。<br/>
另外，只有在启动 <code>java</code> 程序前通过传递参数来更改才有效，程序一经启动就无法再更改了。<br/>
这样的话，也就只有通过传递 jvm 参数的方式来做默认编码的变更了：<br/>
<strong>其一，写一个带 <code>-Dfile.encoding=UTF-8</code> 参数的脚本文件来启动；</strong><br/>
<strong>其二，用 <code>Jar Bundler.app</code> 打包成 <code>app</code>，效率应该不如第一种方案。</strong><br/>
原理其实都差不多，都只是将更改 <code>jvm</code> 默认编码的操作封装了起来，执行时就不用再手动键入了。</p>

<h3>java 乱码问题 -Dfile.encoding=UTF-8</h3>

<p><code>-Dfile.encoding</code> 解释：<br/>
在命令行中输入 java，在给出的提示中会出现 -D 的说明：<br/>
<code>-D&lt;name&gt;=&lt;value&gt;</code>  # set a system property<br/>
-D 后面需要跟一个键值对，作用是设置一项系统属性<br/>
对 <code>-Dfile.encoding=UTF-8</code> 来说就是设置系统属性 <code>file.encoding</code> 为 <code>UTF-8</code><br/>
那么 <code>file.encoding</code> 什么意思？字面意思为文件编码。<br/>
搜索 java 源码，只能找到 4 个文件中包含 <code>file.encoding</code> 的文件，<br/>
也就是说，只有四个文件调用了 <code>file.encoding</code> 这个属性。<br/>
在 <code>java.nio.charset</code> 包中的 <code>Charset.java</code> 中，这段话的意思说的很明确了。<br/>
简单说就是默认字符集是在 java 虚拟机启动时决定的，<br/>
依赖于 java 虚拟机所在的操作系统的区域以及字符集。<br/>
代码中可以看到，默认字符集就是从 <code>file.encoding</code> 这个属性中获取的。</p>

<h3>Java&#8217;s file.encoding property on Windows platform</h3>

<p>This property is used for the default encoding in Java, all readers and writers would default to use this property. &#8220;file.encoding&#8221; is set to the default locale of Windows operationg system since Java 1.4.2. System.getProperty(&#8220;file.encoding&#8221;) can be used to access this property. Code such as System.setProperty(&#8220;file.encoding&#8221;, &#8220;UTF-8&#8221;) can be used to change this property. However, the default encoding can not be changed dynamically even this property can be changed. So the conclusion is that the default encoding can&#8217;t be changed after JVM starts. &#8220;java -Dfile.encoding=UTF-8&#8221; can be used to set the default encoding when starting a JVM. I have searched for this option Java official documentation. But I can&#8217;t find it.</p>

<h3>How do you open a jar file on a mac?</h3>

<p>You can indeed launch a jar file from the command line, with the following command: <br/>
<code>java -jar yourfile.jar</code><br/>
As well as this you can assign &#8220;Jar Launcher&#8221; as the default app. To use when you double-click a jar file, as follows (I don&#8217;t believe you need the developer tools installed for this): <br/>
Click once on the .jar file in the Finder and then from the menubar in the Finder select File -> Get Info&#8221;. Click on &#8220;Open with&#8221; and from the popup menu select &#8220;Other&#8221;. A file browser window will open. In this window, go to the <code>/System/Library/CoreServices</code> folder and select &#8216;Jar Launcher&#8217;. Then make sure the &#8220;Always Open With&#8221; checkbox is checked and then click Add. Then click the &#8220;Change all&#8221; button so that any jar file will be opened automatically. Finally, close the Info window and now when you double-click any of your jar files they should run automatically.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wxPython Undefined variable from import PySimpleApp]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/09/wxpython-undefined-variable-from-import-pysimpleapp/"/>
    <updated>2013-02-09T23:41:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/09/wxpython-undefined-variable-from-import-pysimpleapp</id>
    <content type="html"><![CDATA[<p>在 python 里面，将文本文件的内容读取为字符串只需要一行代码：<!-- more --></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>string = open('/Users/user/Desktop/Test.txt').read()</span></code></pre></td></tr></table></div></figure>


<p>当然，这还只是 python 众多亮点中的冰山一角。尽管使用 java 已经有好几个年头，足以解决日常开发中遇到的一些小问题了，但我还是希望能拓宽一下视野，掌握一门新的语言。python 简洁实用，难度曲线感觉也不是很陡，所以就成了我的首选。在我的观念中，命令行程序虽然也能做地很强大，但作为方便日常开发的小工具，我还是希望能有一个合体的 GUI 壳子套在它的外面。经过多番查探，我找到了 python 几个比较主流的图形库：TKinter、wxPython、JPython。其中，TKinter 好像是 python 内置的，wxPython 需要自己下载安装包执行安装，JPython 不是很了解，但是在 eclipse 的 Preferences 里看到过它的身影，不知道能不能直接拿来用。</p>

<h4>TKinter 的 HelloWorld 比较简单，下面给一个创建窗口的程序例子：</h4>

<figure class='code'><figcaption><span>TestTKinter.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="c"># -*- coding:utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">Tkinter</span>
</span><span class='line'><span class="n">top</span> <span class="o">=</span> <span class="n">Tkinter</span><span class="o">.</span><span class="n">Tk</span><span class="p">()</span>
</span><span class='line'><span class="c"># Code to add widgets will go here...</span>
</span><span class='line'><span class="n">top</span><span class="o">.</span><span class="n">mainloop</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h4>wxPython 的 HelloWorld 如下：</h4>

<figure class='code'><figcaption><span>TestWxPython.py  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="c"># -*- coding:utf-8 -*-</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">wx</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">app</span> <span class="o">=</span> <span class="n">wx</span><span class="o">.</span><span class="n">PySimpleApp</span><span class="p">()</span>
</span><span class='line'>    <span class="n">frame</span> <span class="o">=</span> <span class="n">wx</span><span class="o">.</span><span class="n">Frame</span><span class="p">(</span><span class="n">parent</span><span class="o">=</span><span class="bp">None</span><span class="p">)</span>
</span><span class='line'>    <span class="n">frame</span><span class="o">.</span><span class="n">Show</span><span class="p">(</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'><span class="n">app</span><span class="o">.</span><span class="n">MainLoop</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>不过，在试验 wxPython 的 HelloWorld 之前还得经历下载、安装和配置的步骤。就拿我此次的经历来说吧，下载倒是没遇到什么问题，我的操作系统是 Mac OS X Lion 10.7.2，Python 的版本是 2.7.1，在官网下载了相对应的一个版本：wxPython2.8-osx-unicode-2.8.12.1-universal-py2.7。因为之前也有对 python 的粗浅涉猎，所以在 eclipse 里面早早地就把 PyDev 给装上去了，具体怎么弄地现在也想不起来了，应该不是很麻烦。安装也没什么好说的，一路 next 就是了。至于配置，其实不弄好的话对 wxPython HelloWorld 的执行也没有致命的影响。</p>

<p>不过有一点儿非常不好，你不给配置的话，在</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>app = wx.PySimpleApp()
</span><span class='line'>frame = wx.Frame(parent=None)</span></code></pre></td></tr></table></div></figure>


<p>这两行代码的前面就老喜欢显示红叉叉。<br/>
挺蛋疼的，执行的话又没有影响，非得弄俩红叉恶心你！</p>

<p>那么，怎么终结这种不利的情况呢？<br/>
Googling 之后找到了一个很有用的链接：<br/>
<a href="http://bbs.csdn.net/topics/340237664">是配置问题吗？为什么IDE显示undefined variable from import:xxx</a><br/>
虽然我的平台是 Mac OS，但从帖子中给出的最终解决方案来看，应该也就是找到 wxPython 库相关的路径加到 <code>PyDev</code> -> <code>Interpretor - Python</code> -> <code>Libraries</code> 里面。这个路径在哪儿一时半会儿我也是一头雾水，再加上 wxPython 是否被成功添加到 python 的 System Libs 要在重启 eclipse 之后才能确认（实际表现为配置完毕之后不会立即生效，要在重启 eclipse 以后红叉才会被清除掉），所以还是费了我一些功夫的，这里给出路径：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/usr/local/lib/wxPython-unicode-2.8.12.1/lib/python2.7/site-packages/wx-2.8-mac-unicode</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解读很强很彪悍的 Python 标准 GUI 库]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/09/jie-du-hen-qiang-hen-biao-han-de-pythonbiao-zhun-guiku/"/>
    <updated>2013-02-09T21:25:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/09/jie-du-hen-qiang-hen-biao-han-de-pythonbiao-zhun-guiku</id>
    <content type="html"><![CDATA[<p>原文链接：<a href="http://developer.51cto.com/art/201002/184975.htm">解读很强很彪悍的Python标准GUI库</a><br/>
Python 标准 GUI 库的创始人为 Guido van Rossum。在一个不经意间的时刻决心开发一个新的脚本解释程序，那也就是 Python 语言。</p>

<!-- more -->


<p>Python 可以使用户避免过分的语法的羁绊而将精力主要集中到所要实现的程序任务上，GUI 开发方面，既有 Python 标准 GUI 库——TKinter，又有很多强大的第三方 GUI 库，例如 Python 标准 GUI 库。</p>

<h3>1. Guido 简介</h3>

<p>Python 创始人，原居荷兰，1995 年移居美国，2005 年加入 Google。</p>

<h3>2. 为什么叫 Python？</h3>

<p>说来很有趣，选用 Python 这个名字，仅仅是因为 Guido 很喜欢一部叫做《Monty Python 飞行马戏团》的肥皂剧。</p>

<h3>3. Python 是什么？</h3>

<p>是一门可以被应用到很多领域、功能强大、面向对象、跨平台的动态编程语言。1990年至今，Python 经过 17 年的发展，已经成为最流行的编程语言之一。在 Google，Python 语言更是被广泛应用，想在 Google 工作，Python 语言似乎成了一个基本要求。</p>

<p>Python何以有这么大的魅力，受到如此的追捧？笔者结合自己的使用经验，认为 Python 的强大，主要体现在以下几个方面：</p>

<h3>一、简单易学</h3>

<p>Python 世界非常强调 “简单” 二字，一个代码风格良好的 Python 程序，阅读起来，感觉就像是在阅读一段英文。Python 的这种伪代码本质，使得你可以更关注如何解决实际问题，而不是关注语言本身。</p>

<p>Python 的语法也相当简单，并且内置了很多高级数据结构。 Python 的简单易学，很适合作为入门语言。目前，包括麻省理工学院在内的国外很多高校，都已选用 Python 作为教学语言。</p>

<h3>二、代码量小</h3>

<p>实现同样的功能，Python 标准 GUI 库与 Java、C# 这样的“大个头”比起来，明显简约很多。 例如，打印出一个文本文件中的所有内容，用 Python 只需要一句。</p>

<p>如果你仅仅认为用 Python 只能写写 “Hello World”，那你就大错特错了。 Python 可以被应用到网络开发、GUI 开发、图形开发、Web 开发、游戏开发、手机开发、数据库开发等众多领域。</p>

<p>网络开发方面，Python 提供了大量可用的网络编程模块，涉及到 Socket、EMail、FTP 等等；众所周知的豆瓣网（http://www.douban.com/），就是使用了专门用于 Python 的网络开发框架——Twisted；</p>

<p>此外，Python 还支持 Jabber 等等。 GUI 开发方面，既有 Python 标准 GUI 库 —— TKinter，又有很多强大的第三方 GUI 库，例如 Python 标准 GUI 库。Web 开发方面，Python 更显强大。应用服务器，有 zope；CMS 系统，有 plone（基于 zope）。国内，润普科技（http://zopen.cn/），就是做基于 plone 应用的；此外，还有 django —— 一个可以和 RoR 相媲美的快速 web 开发框架、Pylons 等等。 游戏开发方面，Python 也有举足轻重的地位。很多网络游戏脚本，例如账号注册系统、物品交换系统、场地转换系统和攻击防御系统，都是用 Python 写的，与 C++ 相比，Python 更加轻便。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git 标签相关操作]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/09/git-biao-qian-xiang-guan-cao-zuo/"/>
    <updated>2013-02-09T14:15:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/09/git-biao-qian-xiang-guan-cao-zuo</id>
    <content type="html"><![CDATA[<p>原文链接：<a href="http://www.csser.com/board/4f3f516e38a5ebc97800050e#/post/4f54fd1bb439efec21000062">Git 标签相关操作</a><br/>
标签可以针对某一时间点的版本做标记，常用于版本发布。</p>

<!-- more -->


<h3>列出标签</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git tag # 在控制台打印出当前仓库的所有标签
</span><span class='line'>$ git tag -l 'v0.1.*' # 搜索符合模式的标签</span></code></pre></td></tr></table></div></figure>


<h3>打标签</h3>

<p>git标签分为两种类型：轻量标签和附注标签。<br/>
轻量标签是指向提交对象的引用，附注标签则是仓库中的一个独立对象。建议使用附注标签。</p>

<p><strong>创建轻量标签</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git tag v0.1.2-light</span></code></pre></td></tr></table></div></figure>


<p><strong>创建附注标签</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git tag -a v0.1.2 -m "发布0.1.2版本"</span></code></pre></td></tr></table></div></figure>


<p>创建轻量标签不需要传递参数，直接指定标签名称即可。</p>

<p>创建附注标签时，参数a即annotated的缩写，指定标签类型，后附标签名。参数m指定标签说明，说明信息会保存在标签对象中。</p>

<h3>切换到标签</h3>

<p>与切换分支命令相同，用 <code>git checkout [tagname]</code></p>

<h3>查看标签信息</h3>

<p>用 <code>git show</code> 命令可以查看标签的版本信息：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git show v0.1.2</span></code></pre></td></tr></table></div></figure>


<h3>删除标签</h3>

<p>误打或需要修改标签时，需要先将标签删除，再打新标签。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git tag -d v0.1.2 # 删除标签</span></code></pre></td></tr></table></div></figure>


<p>参数d即delete的缩写，意为删除其后指定的标签。</p>

<h3>补打标签</h3>

<p>打标签不必要在 head 之上，也可在之前的版本上打，
这需要你知道某个提交对象的校验和（通过git log获取）。</p>

<p>补打标签</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git tag -a v0.1.1 9fbc3d0</span></code></pre></td></tr></table></div></figure>


<h3>标签发布</h3>

<p>通常的 <code>git push</code> 不会将标签对象提交到 <code>git</code> 服务器，我们需要进行显式的操作：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git push origin v0.1.2 # 将v0.1.2标签提交到git服务器
</span><span class='line'>$ git push origin --tags # 将本地所有标签一次性提交到git服务器</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Play Piano on a Mac]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/09/how-to-play-piano-on-a-mac/"/>
    <updated>2013-02-09T10:03:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/09/how-to-play-piano-on-a-mac</id>
    <content type="html"><![CDATA[<p>原文链接：<br/>
<a href="http://www.ehow.com/how_6364489_play-piano-mac.html">http://www.ehow.com/how_6364489_play-piano-mac.html</a><br/>
<strong>Instructions:</strong><!-- more --><br/>
1.Open GarageBand.</p>

<p>2.Click &#8220;File,&#8221; &#8220;New,&#8221; and select &#8220;New Music Project.&#8221;</p>

<p>3.Name the project &#8220;Play Piano on a Mac,&#8221; and click &#8220;Create.&#8221; A new GarageBand session will open. By default, this session will contain an instrumental track that is set to &#8220;Grand Piano.&#8221; To change the default &#8220;Grand Piano&#8221; track to another type of piano, click on the track, click the &#8220;View/Hide Track Info&#8221; button, and select another virtual piano from the &#8220;Pianos and Keyboards&#8221; category. When happy with your selection, click the &#8220;View/Hide Track Info&#8221; button again to hide this menu.</p>

<p>4.Click &#8220;Menu,&#8221; and select &#8220;Musical Typing.&#8221; After doing so, a dialogue box will pop up showing you which keys on your keyboard correspond to which keys on a piano.</p>

<p>5.Press the corresponding keys on your keyboard to play piano. To record your performance, press the &#8220;Record&#8221; button at the bottom of GarageBand. When you are finished, press the spacebar to stop recording.</p>

<p>6.Save your track by clicking &#8220;File,&#8221; and &#8220;Save.&#8221; You have now successfully played piano on a Mac (see reference 1).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java 重用之 PathUtil]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/09/java-zhong-yong-zhi-pathutil/"/>
    <updated>2013-02-09T01:42:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/09/java-zhong-yong-zhi-pathutil</id>
    <content type="html"><![CDATA[<p>直接上代码：</p>

<!-- more -->




<figure class='code'><figcaption><span>PathUtil.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">bruce</span><span class="o">.</span><span class="na">pocket</span><span class="o">.</span><span class="na">tools</span><span class="o">.</span><span class="na">utils</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.UnsupportedEncodingException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.URLDecoder</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.security.ProtectionDomain</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Enumeration</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.jar.JarEntry</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.jar.JarFile</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author Bruce Yang</span>
</span><span class='line'><span class="cm"> * 路径工具~</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * 1.public static String getRunningPath() {}</span>
</span><span class='line'><span class="cm"> * &lt;b&gt;功能描述&lt;/b&gt;：</span>
</span><span class='line'><span class="cm"> * 获取当前正处于执行状态的 java 程序的绝对路径:</span>
</span><span class='line'><span class="cm"> * 如果是以 jar 的方式执行，则返回该 jar 文件的绝对路径；</span>
</span><span class='line'><span class="cm"> *   /Users/y3w/Desktop/ChangeIcon1.0.jar</span>
</span><span class='line'><span class="cm"> * 如果是以 eclipse 或 ant 的方式在目录中执行的，则返回 bin 或 build 目录的绝对路径~</span>
</span><span class='line'><span class="cm"> *   /Users/y3w/Projects/Eclipse/workspace1/ChangeIcon/bin/</span>
</span><span class='line'><span class="cm"> *   /Users/y3w/Projects/Eclipse/workspace1/ChangeIcon/build/</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * 2.public static String getRunningParentPath() {}</span>
</span><span class='line'><span class="cm"> * &lt;b&gt;功能描述&lt;/b&gt;：</span>
</span><span class='line'><span class="cm"> * 获取当前正处于执行状态的 java 程序的父路径（末尾不带 File.seperator）。</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * 3.public static String getFullPath(String resFileName) {}</span>
</span><span class='line'><span class="cm"> * &lt;b&gt;功能描述&lt;/b&gt;：</span>
</span><span class='line'><span class="cm"> * 在使用 jar 包内资源文件的时候，仅需传入文件名即可获得完整包路径~</span>
</span><span class='line'><span class="cm"> * 如传入 “ant_template.properties”，就能得到：</span>
</span><span class='line'><span class="cm"> * “/org/bruce/pocket/tools/res/ant_template.properties”</span>
</span><span class='line'><span class="cm"> * 优点就是，无论是在 eclipse 中执行，还是在 ant 中执行，甚至是在 jar 包中执行，</span>
</span><span class='line'><span class="cm"> * 都能表现一致，无障碍地拿到所需要资源文件的数据~</span>
</span><span class='line'><span class="cm"> * &lt;b&gt;注意事项&lt;/b&gt;：</span>
</span><span class='line'><span class="cm"> * 须将资源文件放置在以 DOMAIN 开头，以 “res” 结尾的包里面~</span>
</span><span class='line'><span class="cm"> * &lt;b&gt;注&lt;/b&gt;：</span>
</span><span class='line'><span class="cm"> * 借鉴了 cocos2d 的资源文件加载机制~</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * 4.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">PathUtil</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 在这里设定以哪个包为起始点执行搜索资源文件的操作（避免在导入的其他 jar 包里面做无用功）~</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">DOMAIN</span> <span class="o">=</span> <span class="s">&quot;org/bruce/&quot;</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">_runningPath</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="n">_runningParentPath</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">_pathList</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">static</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">_pathList</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">tempList</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">absPath</span> <span class="o">=</span> <span class="n">getRunningPath</span><span class="o">();</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// /Users/y3w/Desktop/ChangeIcon1.0.jar</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">absPath</span><span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="s">&quot;.jar&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">JarFile</span> <span class="n">jarFile</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">jarFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JarFile</span><span class="o">(</span><span class="n">absPath</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="c1">// [org/bruce/, org/, org/bruce/pocket/, ...]</span>
</span><span class='line'>          <span class="n">tempList</span> <span class="o">=</span> <span class="n">getFilteredFolderPaths</span><span class="o">(</span><span class="n">jarFile</span><span class="o">,</span> <span class="n">DOMAIN</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">item</span> <span class="o">:</span> <span class="n">tempList</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="s">&quot;/res/&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">_pathList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;/&quot;</span> <span class="o">+</span> <span class="n">item</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// [~/Projects/eclipse/workspace2/JavaDynamicCompile/org/bruce/pocket/tools/res, ...]</span>
</span><span class='line'>          <span class="c1">// [C:\java\Projects\JavaDynamicCompile\org\bruce\pocket\tools\res, ...]</span>
</span><span class='line'>          <span class="n">tempList</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>          <span class="n">listFolderPaths</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">absPath</span><span class="o">),</span> <span class="n">tempList</span><span class="o">);</span>    <span class="c1">// 绝对路径~</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">// windows</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">domain</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="kt">boolean</span> <span class="n">bIsWindows</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;os.name&quot;</span><span class="o">).</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;windows&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">bIsWindows</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">domain</span> <span class="o">=</span> <span class="n">DOMAIN</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">,</span> <span class="s">&quot;\\\\&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">domain</span> <span class="o">=</span> <span class="n">DOMAIN</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">item</span> <span class="o">:</span> <span class="n">tempList</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="n">domain</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">item</span><span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">&quot;res&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">item</span> <span class="o">=</span> <span class="n">item</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="n">absPath</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="k">if</span> <span class="o">(</span><span class="n">bIsWindows</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">_pathList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;/&quot;</span> <span class="o">+</span> <span class="n">item</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;\\\\&quot;</span><span class="o">,</span> <span class="s">&quot;/&quot;</span><span class="o">)</span> <span class="o">+</span> <span class="s">&quot;/&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">_pathList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;/&quot;</span> <span class="o">+</span> <span class="n">item</span> <span class="o">+</span> <span class="s">&quot;/&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'><span class="c1">//       System.out.println(pathList);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 由资源文件的文件命获取完整路径~</span>
</span><span class='line'><span class="cm">  * 须将资源文件放置在以 DOMAIN 开头，以 “res” 结尾的包里面，不然就会找不到~</span>
</span><span class='line'><span class="cm">  * @param resFileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getFullPath</span><span class="o">(</span><span class="n">String</span> <span class="n">resFileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">target</span> <span class="o">=</span> <span class="n">resFileName</span> <span class="o">+</span> <span class="s">&quot;_does_Not_Exist&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">fullPath</span><span class="o">;</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">_runningPath</span><span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="s">&quot;.jar&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">JarFile</span> <span class="n">jarFile</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">jarFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JarFile</span><span class="o">(</span><span class="n">_runningPath</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">item</span> <span class="o">:</span> <span class="n">_pathList</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">fullPath</span> <span class="o">=</span> <span class="n">item</span> <span class="o">+</span> <span class="n">resFileName</span><span class="o">;</span>
</span><span class='line'>              
</span><span class='line'>              <span class="cm">/**</span>
</span><span class='line'><span class="cm">              * getJarEntry 的合法参数格式：</span>
</span><span class='line'><span class="cm">              * org/bruce/pocket/tools/res/w400_h300.png</span>
</span><span class='line'><span class="cm">              * 须要 target 的第一个斜杠给去掉，纠结了老子半天~</span>
</span><span class='line'><span class="cm">              */</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">jarFile</span><span class="o">.</span><span class="na">getJarEntry</span><span class="o">(</span><span class="n">fullPath</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">))</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">target</span> <span class="o">=</span> <span class="n">fullPath</span><span class="o">;</span>
</span><span class='line'>                  <span class="k">break</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">item</span> <span class="o">:</span> <span class="n">_pathList</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">StringBuffer</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>
</span><span class='line'>              <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">_runningPath</span><span class="o">);</span>
</span><span class='line'>              <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
</span><span class='line'>              <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">resFileName</span><span class="o">);</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">,</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span><span class="o">)).</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">target</span> <span class="o">=</span> <span class="n">item</span> <span class="o">+</span> <span class="n">resFileName</span><span class="o">;</span>
</span><span class='line'>                  <span class="k">break</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">target</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 将 JarFile 中以特定前缀起始的 JarEntry.getName() 存放到列表中返回~</span>
</span><span class='line'><span class="cm">  * @param jarFile</span>
</span><span class='line'><span class="cm">  * @param strFilter</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">getFilteredFolderPaths</span><span class="o">(</span><span class="n">JarFile</span> <span class="n">jarFile</span><span class="o">,</span> <span class="n">String</span> <span class="n">strFilter</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">target</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LinkedList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>      <span class="n">Enumeration</span><span class="o">&lt;</span><span class="n">JarEntry</span><span class="o">&gt;</span> <span class="n">jarEntries</span> <span class="o">=</span> <span class="n">jarFile</span><span class="o">.</span><span class="na">entries</span><span class="o">();</span>
</span><span class='line'>      <span class="k">while</span> <span class="o">(</span><span class="n">jarEntries</span><span class="o">.</span><span class="na">hasMoreElements</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">JarEntry</span> <span class="n">jarEntry</span> <span class="o">=</span> <span class="n">jarEntries</span><span class="o">.</span><span class="na">nextElement</span><span class="o">();</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">jarEntry</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">jarEntry</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">startsWith</span><span class="o">(</span><span class="n">strFilter</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">target</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jarEntry</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">target</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 将目录中所有的子目录的绝对路径存放到列表中返回~</span>
</span><span class='line'><span class="cm">  * @param dir</span>
</span><span class='line'><span class="cm">  * @param pathList</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">listFolderPaths</span><span class="o">(</span><span class="n">File</span> <span class="n">dir</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">pathList</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">File</span> <span class="n">item</span> <span class="o">:</span> <span class="n">dir</span><span class="o">.</span><span class="na">listFiles</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">pathList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">item</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
</span><span class='line'>              <span class="n">listFolderPaths</span><span class="o">(</span><span class="n">item</span><span class="o">,</span> <span class="n">pathList</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 获取当前正处于执行状态的 java 程序的绝对路径</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getRunningPath</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">_runningPath</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">strTemp</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">ProtectionDomain</span> <span class="n">pDomain</span> <span class="o">=</span> <span class="n">PathUtil</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getProtectionDomain</span><span class="o">();</span>
</span><span class='line'>          <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="n">pDomain</span><span class="o">.</span><span class="na">getCodeSource</span><span class="o">().</span><span class="na">getLocation</span><span class="o">();</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">strTemp</span> <span class="o">=</span> <span class="n">URLDecoder</span><span class="o">.</span><span class="na">decode</span><span class="o">(</span><span class="n">url</span><span class="o">.</span><span class="na">getPath</span><span class="o">(),</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedEncodingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="cm">/**</span>
</span><span class='line'><span class="cm">          * Windows 下运行时会出现在首部多加一个斜杠，正反斜杠的问题~</span>
</span><span class='line'><span class="cm">          * C:\&gt;java -jar C:\ChangeFolderIcon\ChangeIcon1.0.jar</span>
</span><span class='line'><span class="cm">          * PathUtil.getRunningPath() = /C:/ChangeFolderIcon/ChangeIcon1.0.jar</span>
</span><span class='line'><span class="cm">          * Installer.createContainers() failed! exit!</span>
</span><span class='line'><span class="cm">          */</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;os.name&quot;</span><span class="o">).</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;Windows&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">// 剔除首部的斜杠~</span>
</span><span class='line'>              <span class="n">strTemp</span> <span class="o">=</span> <span class="n">strTemp</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>              <span class="c1">// 将斜杠替换为反斜杠~</span>
</span><span class='line'>              <span class="n">strTemp</span> <span class="o">=</span> <span class="n">strTemp</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">,</span> <span class="s">&quot;\\\\&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">_runningPath</span> <span class="o">=</span> <span class="n">strTemp</span><span class="o">;</span>
</span><span class='line'><span class="c1">//           System.out.println(&quot;PathUtil.getRunningPath() = &quot; + runningPath);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">_runningPath</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 获取父级目录的绝对路径~</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">getRunningParentPath</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">_runningParentPath</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">runningPath</span> <span class="o">=</span> <span class="n">PathUtil</span><span class="o">.</span><span class="na">getRunningPath</span><span class="o">();</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">if</span> <span class="o">(!</span><span class="n">runningPath</span><span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="s">&quot;.jar&quot;</span><span class="o">)</span> <span class="o">&amp;&amp;</span> <span class="n">runningPath</span><span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="n">File</span><span class="o">.</span><span class="na">separator</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>              <span class="c1">// 移除末尾的 “/”</span>
</span><span class='line'>              <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="n">runningPath</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="n">File</span><span class="o">.</span><span class="na">separator</span><span class="o">);</span>
</span><span class='line'>              <span class="n">runningPath</span> <span class="o">=</span> <span class="n">runningPath</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">index</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">// 移除最后一个路径元部件~</span>
</span><span class='line'>          <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="n">runningPath</span><span class="o">.</span><span class="na">lastIndexOf</span><span class="o">(</span><span class="n">File</span><span class="o">.</span><span class="na">separator</span><span class="o">);</span>
</span><span class='line'>          <span class="n">_runningParentPath</span> <span class="o">=</span> <span class="n">runningPath</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">index</span><span class="o">);</span>
</span><span class='line'><span class="c1">//           System.out.println(&quot;PathUtil.getRunningParentPath() = &quot; + runningParentPath);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">_runningParentPath</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * @param args</span>
</span><span class='line'><span class="cm">  * 输出为：</span>
</span><span class='line'><span class="cm">  * /Users/y3w/Projects/Eclipse/workspace2/JavaDynamicCompile/bin/</span>
</span><span class='line'><span class="cm">  * /Users/y3w/Projects/Eclipse/workspace2/JavaDynamicCompile</span>
</span><span class='line'><span class="cm">  * /org/bruce/pocket/tools/res/w400_h300.png</span>
</span><span class='line'><span class="cm">  * /org/bruce/pocket/tools/res/BruceYang.jv</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getRunningPath</span><span class="o">());</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getRunningParentPath</span><span class="o">());</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getFullPath</span><span class="o">(</span><span class="s">&quot;w400_h300.png&quot;</span><span class="o">));</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">getFullPath</span><span class="o">(</span><span class="s">&quot;BruceYang.jv&quot;</span><span class="o">));</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为 Eclipse for Mac 新增 Show in Finder 的功能]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/wei-eclipse-for-mac-xin-zeng-show-in-finder-de-gong-neng/"/>
    <updated>2013-02-08T22:47:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/wei-eclipse-for-mac-xin-zeng-show-in-finder-de-gong-neng</id>
    <content type="html"><![CDATA[<p>相信各位使用 Mac OS 作为开发平台的同僚都遇到过如下的问题：<br/>
想在 Finder 中显示 eclipse 工程中的某个文件，挺不容易的！<br/>
不知道其他人是怎么弄的，这里说一下我是怎么弄的吧：</p>

<!-- more -->


<p><strong>1.在工程视图里选中要在 Finder 中显示的文件</strong><br/>
<strong>2.在弹出的右键菜单中选择 Properties</strong><br/>
<strong>3.复制该文件父目录的绝对路径</strong><br/>
<strong>4.打开 Finder</strong><br/>
<strong>5.Command + Shift + G 弹出快速前往的对话框</strong><br/>
<strong>6.在路径输入框中粘贴之前复制的父目录绝对路径</strong><br/>
<strong>7.回车前往目标文件所在的父目录</strong><br/>
<strong>8.手动在 Finder 的父目录中定位目标文件</strong></p>

<p>不是很难，但由上面的步骤可以看出，操作起来还是挺麻烦的。<br/>
一次两次可能还不觉得，但如果是经常要执行类似的操作就很烦了~<br/>
我就一直在为这个问题而感到烦恼！如何来终结这种不利的境况？</p>

<h2>这里介绍一个解决方案</h2>

<p>为 eclipse 扩展一个自定义的功能！<br/>
<strong>原理很简单，就是以命令行的方式来调用外部的可执行文件来满足自己的需求。</strong></p>

<p>再对上面的需求做一下总结吧：<br/>
不就是要在 Finder（Mac OS）或者 Explorer（Windows）里面定位出某个文件么，<br/>
从编写程序的角度来看，文件的绝对路径都能拿到了，定位到该文件还有什么好难的？</p>

<p>摸索过程中我找到了一篇很有用的资料：<br/>
<a href="http://stackoverflow.com/questions/1161240/in-eclipse-reveal-current-file-in-filesystem">In eclipse, reveal current file in filesystem</a></p>

<p>浓缩的精华：<br/>
<strong>You can also develop your own external tool to open the file in a Windows explorer</strong><br/>
<img class="center" src="http://yang3wei.github.com/images/posts/meaningful.gif"></p>

<p>到这里就算是有头绪了，如图所示：<br/>
仅需对上图中针对 <code>Windows</code> 的配置做更改，适配到 <code>Mac</code> 平台就行了。<br/>
其实很简单，改几个地方就 ok 了：<br/>
第一个是 <code>Name</code>，改成你喜欢的名字吧，比如说：<code>show in finder</code><br/>
第二个是 <code>Location</code>，改成要调用的外部可执行文件的完整路径即可，如：<code>/usr/bin/open</code><br/>
第三个是 <code>Arguments</code>，涵义是要给外部可执行文件传入的参数。<br/>
这里可以再次借助 eclipse 提供的功能来简化我们所要做的操作：<br/>
${resource_loc} 可以拿到当前所选择文件的绝对路径；<br/>
${container_loc} 可以拿到当前所选择文件父目录的绝对路径。<br/>
<img class="center" src="http://yang3wei.github.com/images/posts/external_tools_configurations.png">
<img class="center" src="http://yang3wei.github.com/images/posts/external_tools_configring.png">
<code>/usr/bin/open</code> 是 <code>Mac</code> 的内置命令，<br/>
<code>open</code> 命令带 <code>-R</code> 参数表示在 <code>Finder</code> 中呈现出目标文件，<br/>
（注：不带 <code>-R</code> 参数的话就会选择相关联的程序来打开该文件）<br/>
这样一来的话，就算是大功告成了~</p>

<h2>如何来执行这个扩展出来的功能呢？</h2>

<p>也很简单，不过先要将名为 <code>show in finder</code> 的扩展功能设置为 <code>favourite</code>：<br/>
在 <code>Organize Favourites...</code> 里面 <code>add</code> 一下即可！<br/>
<img class="center" src="http://yang3wei.github.com/images/posts/set_as_favourite.png">
接下来就开始享受便利的生活吧：<br/>
首先，选择要在 <code>Finder</code> 中显示的目标文件，<br/>
然后，按一下工具栏 <code>Run</code> 按钮右边和 <code>Run</code> 按钮长的比较像的那个按钮。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac 下的 tree 命令]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/mac-xia-de-tree-ming-ling/"/>
    <updated>2013-02-08T17:19:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/mac-xia-de-tree-ming-ling</id>
    <content type="html"><![CDATA[<p>在默认安装安装的 <code>mac</code> 下没有找到 <code>tree</code> 命令，找了一下原来有个比较流氓的解决办法：</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'</span></code></pre></td></tr></table></div></figure>


<p>这个命令行跑起来类似平常<code>tree</code>的效果，比如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.
</span><span class='line'>|____extra
</span><span class='line'>| |____httpd-autoindex.conf
</span><span class='line'>| |____httpd-dav.conf
</span><span class='line'>| |____httpd-default.conf
</span><span class='line'>| |____httpd-info.conf
</span><span class='line'>| |____httpd-languages.conf
</span><span class='line'>| |____httpd-manual.conf
</span><span class='line'>| |____httpd-mpm.conf
</span><span class='line'>| |____httpd-multilang-errordoc.conf
</span><span class='line'>| |____httpd-ssl.conf
</span><span class='line'>| |____httpd-userdir.conf
</span><span class='line'>| |____httpd-vhosts.conf
</span><span class='line'>|____httpd.conf
</span><span class='line'>|____magic
</span><span class='line'>|____mime.types
</span><span class='line'>|____original
</span><span class='line'>| |____extra
</span><span class='line'>| | |____httpd-autoindex.conf
</span><span class='line'>| | |____httpd-dav.conf
</span><span class='line'>| | |____httpd-default.conf
</span><span class='line'>| | |____httpd-info.conf
</span><span class='line'>| | |____httpd-languages.conf
</span><span class='line'>| | |____httpd-manual.conf
</span><span class='line'>| | |____httpd-mpm.conf
</span><span class='line'>| | |____httpd-multilang-errordoc.conf
</span><span class='line'>| | |____httpd-ssl.conf
</span><span class='line'>| | |____httpd-userdir.conf
</span><span class='line'>| | |____httpd-vhosts.conf
</span><span class='line'>| |____httpd.conf
</span><span class='line'>|____other
</span><span class='line'>| |____bonjour.conf
</span><span class='line'>| |____php5.conf
</span><span class='line'>|____users</span></code></pre></td></tr></table></div></figure>


<p>写一个alias到~/.bash_profile里，就更方便了:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>alias tree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"</span></code></pre></td></tr></table></div></figure>


<h3>Update</h3>

<p>现在正在用的是 <code>homebrew</code> 安装的 <code>tree</code> 命令行。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install tree</span></code></pre></td></tr></table></div></figure>


<p>作者: Volcano 发表于November 22, 2010 at 8:34 pm<br/>
版权信息: 可以任意转载, 转载时请务必以超链接形式标明文章原始出处和作者信息及此声明<br/>
永久链接 - <a href="http://www.ooso.net/archives/564">http://www.ooso.net/archives/564</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I found a bug with CCParticleSystem]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/i-found-a-bug-with-ccparticlesystem/"/>
    <updated>2013-02-08T01:41:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/i-found-a-bug-with-ccparticlesystem</id>
    <content type="html"><![CDATA[<p>此次经验对我影响很大，虽然只是一个很小的问题，<br/>
但我还是没有掐掉上报 bug 的想法，于是在论坛上我碰到了一个很友善的老外。<br/>
一念之间，我因为自己的一点小善心而获得了更多的知识，<br/>
了解到了怎么上报 bug，怎么使用 git，还锻炼了英文，<br/>
实乃是一举多得，总结一下，遇到问题还是不要犯懒，稍微较下真儿可能就会受益匪浅！</p>

<!-- more -->


<p>帖子链接：<a href="http://www.cocos2d-iphone.org/forum/topic/36963?replies=1#post-174889">I found a bug with CCParticleSystem.m</a><br/>
发现了一个 cocos2d 粒子系统的bug，<br/>
怎么说呢，也就是同一份由 Particle Designer 生成的 plist 文件，<br/>
放到高低清的不同模式下，竟然得到了不同的视觉呈现。</p>

<p>觉得诡异之余我仔细观察了一下，发现该问题可能是由于y方向的重力数据有异所致。<br/>
于是我切到  <code>CCParticleSysem.m</code> 里面找了一番，发现由 plist 文件里面加载进来的数据，<br/>
差不多都有做乘以  <code>CC_CONTENT_SCALE_FACTOR()</code> 的操作，<br/>
但是 gravity 的 x 和 y 却没有。</p>

<p>后来我将低清分辨率所使用的 plist 文件中的 <code>gravity-x</code>，<code>gravity-y</code> 数据都做了下除2处理，<br/>
再一运行，发现问题已经不再，充分证明这就是问题的症结所在。<br/>
看了下 cocos2d v1.01 和 v2.0.0 以及最新项目的 CHNAGELOG，<br/>
都没有发现已经将这个 bug 修正的痕迹、记录，<br/>
于是便在 cocos2d for iphone 主页申请了一个账号，将这个bug 贴到了论坛里面，<br/>
希望有人能帮我转告 Riq，将这个 bug 修正掉~</p>

<p>cocos2d 在我看来已经相当不错了，但是世界上很难有绝对完美的事物，<br/>
经此一役，充分印证了这一点儿，一直以来都使用免费的 cocos2d 做游戏开发，<br/>
现在终于能为 cocos2d 贡献出自己的一点儿微薄力量来了，甚感欣慰~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[C盘Windows XP D盘Windows7 双系统安装纪录]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/cpan-windows-xp-dpan-windows7-shuang-xi-tong-an-zhuang-ji-lu/"/>
    <updated>2013-02-08T01:19:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/cpan-windows-xp-dpan-windows7-shuang-xi-tong-an-zhuang-ji-lu</id>
    <content type="html"><![CDATA[<p>最近我的 mac 出了问题，死活都进不去了<br/>
我重启了 n 多次都不管用，一直停在白色背景中央有一个缺苹果的画面。<br/>
以前也出现过这种情况，不过都只要多启动几次就能进去了，而且我总结出一个规律：<br/>
只要在进入上述那个画面的时候，硬盘灯还在一闪一闪的，那么十有八九都是能进入系统的；<br/>
只有在进入上述画面的时候硬盘灯没有闪动起来，就说明进不了勒，无论等多久~</p>

<!-- more -->


<p>不过这次我是真的栽了，重启了 n 多次还是老样子。<br/>
我想了下不能继续重启下去了，于是我在网上查了下，<br/>
有人说mac 在启动的时候是可以加上一些启动参数的，比如：<br/>
-x 进入安全模式，此种模式会加载尽可能少的驱动<br/>
-s 单人模式，大意就是进入系统之后，不能切换用户<br/>
-f 重建驱动缓存，在硬件发生改变的时候用这个参数<br/>
-v 有人给起名儿为啰嗦模式，挺合适的，就是在启动的过程中打印出当前正在做一些什么的信息。<br/>
cpus=1 不知道是什么含义，指定仅适用一个 cpu？<br/>
npci=0x2000 有人说启动不了的时候键入这个命令能有奇效，不过很可惜也没能帮上我的忙~<br/>
参数倒是挺多的，刚开始我只知道 -v 能过获得启动时候的具体信息，这样的话就不用一直对着那个白底缺苹果了<br/>
寻思着终于能明白发生了些什么了~<br/>
当然这毫无意义，因为还是没能帮我解决问题，<br/>
之后我试了很多方案，包括以上罗列参数所形成的各种组合，<br/>
我还拔掉了自行扩展的另一根4GB 的内存条，多次给 cmos 放电，<br/>
我咨询了卖给我电脑的经销商，他们说可能是少了kext 的驱动文件，但我对这一点很是怀疑，<br/>
因为我的硬盘里面分了两个区，两个分区里面都装了lion 系统，<br/>
按理来说，一个系统突然间就没法启动是因为缺少了驱动的话，那么我的第二个恢复系统突然间也启动不了了，<br/>
总不能说也是少了驱动的吧？这样就太诡异了。<br/>
而且我思索了一下之前的一些举动，在 mac 无法正常开机之前，<br/>
我仅仅是忘记拔下连接到电脑的 tf 卡，然后电脑提示 reboot and select proper boot device.</p>

<p>我另一台也是首台电脑上所装的 windows xp 已经用了 4 年左右的时间了，是从电脑城的工作人员配好就一直用着的，<br/>
当系统出现故障的时候我就用 ghost 一件来恢复，也没遇到什么大的麻烦，<br/>
不过这就让我一直都没有机会去接触装系统、装驱动什么的东西。<br/>
于是，当我看见这个提示的时候，第一个想到的便是拔掉 tf 卡读卡器。<br/>
不过，开机重启了几次还是提示相同的信息， <br/>
这次我火了，拆开主板就给 cmos 放电了，<br/>
然后再开机的时候，reboot 的提示没了，<br/>
悲剧也来了，mac 再也进不去了。。。。</p>

<p>最后一次正常关机的时候我还在 mac  AppStore 上面下载安装了几个游戏，<br/>
也不排除是这几个游戏的安装给我带来了这次灭顶之灾~</p>

<p>细细想来，我是在 2013  年 1 月 2 日 凌晨 2 点多的时候关的机，<br/>
当天下午 3~4 点钟从床上爬起来准备大干一场的时候，就出现了这种事情，<br/>
当时我还觉得挺恶心的，不过让我远远没有想到的是，<br/>
直到今天我也没能将 mac 系统给弄好。。。。。。<br/>
我还是觉得，应该是 bios 的错误设置导致了这次的灾厄，具体原因有待进一步挖掘~<br/>
（后来我就不断的调整 bios 中的设置，然后重启，不过也没起到什么作用，<br/>
因为 bios 里面的设置实在是太多了。我的一个同事说 bios 里面有一个 ahci 的设置要enable 一下，<br/>
但我在 索泰 G41 主板里面的 ami bios 里面死活就是没有看到有这么一个选项~）</p>

<p>所幸除了装 mac  的机器，我还有一台 amd cpu 的老机器以及一台做测试的 ipod touch4，都是可以联网查询资料的设备， <br/>
于是我便寻思着这次怎么也得把重装系统、双系统等的知识给补回来，我不会认栽，<br/>
如果 mac 系统实在恢复不过来，我情愿自己找资料重新黑一遍。。<br/>
都说 amd  cpu 的 pc 很难黑苹果（雪豹有人黑成功过，不过狮子黑成功的好像不是很多），<br/>
我使用惯了狮子系统的，再让我回到雪豹我是很难适应的，就不说用不了较新版本的 xcode 了，<br/>
就光是 dock 上面的那些 mac  app 就够让我烦的了<br/>
（狮子里面的 mission control 和 launchpad，用过的就会明白我的意思了）<br/>
所以当初我才直接购买了一台黑苹果，当时一台主机箱就花了 1850 元，是在 淘宝上面的 xhmend 店铺购买的。<br/>
而今虽然 mac 不能用了，但是上面的两个分区，我毫不介意把一个分区里面的数据搬出来格掉<br/>
在上面重新装一次，只要能够装好，那我主分区上面的 mac 系统也就十有八九能够修复回来了<br/>
（只要在副分区上面能装好 mac 系统，那么就说明问题不是出在 bios 上面，那么还剩下的可能就是驱动了，<br/>
只要我把正常 lion 系统里面的驱动复制回主分区的 mac 系统就应该没问题了。<br/>
而且我有一个优势，那就是设备的驱动都是可以直接拿来用的，当然我现在也只是做出一个猜测而已）</p>

<p>接下来我说干就干，首先我要做的便是在 AMD cpu 的老机器上面完成系统的重装过程<br/>
（mac 机器上面的两个分区里面的两个系统都进不了了，我想操作上面的文件都是一个大难题，<br/>
当时我是这么来弄的，我把 mac 机器里面的硬盘数据线连接到老机器的主板sata 口上面，<br/>
然后因为老机器里面的电源只能驱动一块硬盘，我就又只能用 mac 机器的电源来为装 mac 的硬盘供电了，<br/>
当时就觉得真是他妈的别扭，一新一旧两台电脑牢牢的靠在一起，<br/>
而其中的一台开着仅仅是为了给区区一块硬盘供电而已。。。。<br/>
而且出乎我意料的是，老机器开机以后虽然能正常检测到两块硬盘了，<br/>
但是由于 mac 系统的磁盘格式和 windows 的 NTFS、FAT32 不兼容，竟然毛都看不到一根。。。。<br/>
后来想到同事使用过的在 win 7 上面操作 mac 磁盘的工具软件 MacDrive，<br/>
便在网上下载了一个，试了一下果然行了，于是首先便决定吧 mac 上面的重要资料——笔记、项目、资源等， <br/>
先备份到移动磁盘上面，提前做出最坏的打算，即使装 mac 的硬盘被我做实验做地报废了，也不能伤到我的根本~） <br/>
还要掌握一些东西的使用，包括 u 盘启动盘的制作，Win PE 的使用，ghost  备份还原等方面的。</p>

<p>一台电脑开着仅仅是为了给一块硬盘供电，挺浪费的~ <br/>
我思忖着不能老这么下去啊，如果一直修不好，那不是一直都要这么下去？不行啊，要环保节能！！<br/>
那么，首先我要做的就是给 mac 硬盘上面装一个 windows 系统，方便我对 mac 系统的修复，<br/>
这个 windows 可以放在副分区里面，这样的话，就能很方便的操作主分区里面 mac 系统的磁盘文件了。<br/>
不过如前所述，我从来都没有亲手安装过一个系统，不管是 mac 还是 windows，都是买电脑给我的一手包办了的。<br/>
那么，我要克服的第一个难题便是 —— 在 mac 机器上安装一个全新的系统。</p>

<h2>安装双系统</h2>

<p>目标明确了以后，我就开始了对想法的实践，首先我要能成功地在老机器上面安装一个新系统。 <br/>
 我一直使用的 都是 Windows  XP 系统，这次装新系统就来个新鲜点儿的吧，就 Win7~ <br/>
当然，一方面也是因为我老机器里面已经有一个深度的 Ghost Win7 旗舰版镜像了~<br/>
（重新下载的话是一件很耗时的事情，说不定下完之后我就没心思再来安装了~）</p>

<p>就在这之前不久，我甚至连 Ghost 都没有具体操作过，备份还原也一直没明白其中的运作机制。<br/>
碰巧的是，在淘宝上面给我老妈买了一台带加密歌曲 tf 卡的收音机， <br/>
当时在往上面找到了破解这种 tf 加密卡的方法，<br/>
用到的便是两个这次要给我派上很大用处的 ghost32.exe 和  ghostxp.exe<br/>
ghost32.exe 是用来制作和释放 gho 文件的工具，而 ghostxp.exe 仅用来查看和提取 gho 文件中的子项目。<br/>
当时这两个工具一出手，立马就把加密 tf 卡给破掉了，1368 首老歌曲就这么简单的保存入了我的 mac 机器~<br/>
而且让我更加高兴的是，让我明白了 ghost 不过就是这么简单的一个东西~ <br/>
随着后面的使用和学习，我还发现 ghost 分为很多版本，有在 windows 下面跑的，也有在系统还没启动的时候运行的。<br/>
我很好奇的就是，系统还没启动的时候也有能用的 ghost。<br/>
当然最让我感慨的却是，ghost 原来也就是一个类似 winrar 的工具。<br/>
想了一想，ghost 不就相当于把整盘或者是整个分区压缩到一个扩展名为 gho 的东西么？  <br/>
然后，把 gho 文件释放到某个分区或是某个磁盘，不就相当于执行一个解压缩的过程么？  <br/>
好吧，ghost 就是这么简单一个东西，不多做讨论了~<br/>
相关资料连接：<br/>
<a href="http://wenku.baidu.com/view/c0736cde195f312b3169a57d.html">GHOST图解教程-备份_百度文库</a><br/>
<a href="http://wenku.baidu.com/view/3a94f73a580216fc700afd13">Ghost使用教程图解_百度文库</a></p>

<p>我做的第一件事情就是把 ghost 备份的 c 盘系统给还原到我的 另一个盘，然后设置成从第二个系统启动。<br/>
（这里直接用备份 c 盘的 gho 文件也是为了操作演练一下怎么将 gho 文件释放到一个分区，<br/>
而且因为是同一个机器里面 ghost 备份出来的系统，还原到别的分区里面以后也不用担心出现驱动不兼容的问题~）<br/>
毫无疑问这还是挺简单的，ghost 一出，谁与争锋？<br/>
但是问题是我没有空余的分区来承载 ghost  要释放的第二系统！<br/>
我 AMD 的老机器硬盘里面塞满了各种东西，空间挺不够用的，整理和转移资料就是一个很蛋疼的过程了。</p>

<p>之前我听说过有动态扩展分区的软件，能够在不损坏固有文件的情况下多开辟出一块分区出来。<br/>
于是我便在网上找了一下，确实打听到一个 叫 Partition Magic 的磁盘分区工具，<br/>
经过搜寻总算是给我找着了一个不是试用版的 pm，但是竟然在分区的过程中报错，可是整整地让我受了一惊~<br/>
后来我检查了一下，有一个几G 大小的 rar 文件给损坏掉了，之后我便没敢再去用 pm 了，实在太 tm 的惊险了。。 <br/>
后来在和我同事讨论的时候，他说这个 pm 都是一把老古董了，最好别去用它了。</p>

<p>动态扩展分区不行的话，那还是得清理出一块空闲的分区来了。<br/>
我当然还是硬着头皮整理和转移完毕了，我腾出了一个 80GB 的分区来。。<br/>
然后在这个分区里面又多划分出了 3 个分区，然后，我用ghost 将之前备份的 c 盘系统给释放到其中的一个分区里面<br/>
相关资料的连接：<br/>
<a href="http://www.360doc.com/content/09/0226/14/18929_2650563.shtml">如何给移动硬盘分区~图解</a><br/>
配置了一下 c 盘主系统 的 boot.ini 文件，重启之后如愿以偿的进入了逻辑盘里面的第二个系统里面。</p>

<figure class='code'><figcaption><span>boot.ini </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[boot loader]</span>
</span><span class='line'><span class="na">timeout</span><span class="o">=</span><span class="s">5</span>
</span><span class='line'><span class="na">default</span><span class="o">=</span><span class="s">multi(0)disk(0)rdisk(0)partition(3)\WINDOWS</span>
</span><span class='line'><span class="k">[operating systems]</span>
</span><span class='line'><span class="na">multi(0)disk(0)rdisk(0)partition(1)\WINDOWS</span><span class="o">=</span><span class="s">&quot;Microsoft Windows XP Professional C:&quot; /noexecute=optin /fastdetect</span>
</span><span class='line'><span class="na">multi(0)disk(0)rdisk(0)partition(3)\WINDOWS</span><span class="o">=</span><span class="s">&quot;Microsoft Windows XP Professional E:&quot; /noexecute=optin /fastdetect</span>
</span><span class='line'><span class="na">C:\GRLDR</span><span class="o">=</span><span class="s">&quot;深度一键还原 GHOST V11.0&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>简要的说明一下改动的地方和其作用：<br/>
[boot loader] 下面的 default= multi(0)disk(0)rdisk(0)partition(3)\windows 表示配置为从第 3 块分区启动。<br/>
重点看上面一行中的 partition(3)，这个 3 即表示从第 3 块分区启动（一般来说，第一块是 C 盘的话，那么第 3 块就是 E 盘了）~<br/>
如果是将第二系统装在D 盘的，那么便可以将这个数值改为 2。<br/>
另外，[operating system] 下面的第二行 multi(0)&#8230;.Professional E: &#8221; /noexecute=optin / fastdetect 是我复制粘贴地上一行，<br/>
只不过是改了一个地方而已：就是将 1 改成了 3。到这里的话，就算是配置完毕了，<br/>
重启以后将会读取 c 盘中的 boot.ini 文件，然后再跳到 E 盘里面启动第二个 Windows XP 系统~<br/>
顺便提一下，怎么返回到从 C 盘的系统启动呢？<br/>
只要在第二系统里面将 C 盘 boot.ini 文件中的 3 改回原来的 1 就行了。<br/>
或者是通过老毛桃 WinPE 转到引导的列表那里，选择从 &#8230;XP Professional C: 启动即可<br/>
（修改过 boot.ini 文件后选择列表会出现一些问题，你会发现键盘的上下键在选择的时候失灵了，<br/>
不过有专门做这种修复的工具，因为我有老毛桃，所以就有恃无恐了，<br/>
另外在 WinPE，第二系统里面都是随时可以改回来的，所以不是什么要命的问题~）</p>

<p>OK，总算是看到了一点儿希望了，那么接下来我就要着手深度 Ghost  Win7 旗舰版的安装了<br/>
于是我照蛇画龙，把装第二个 windows xp 的逻辑分区给快速格式化掉，<br/>
然后用 ghost 把深度完美Ghost Win7 旗舰版 iso 文件中的 win7.gho 释放到这个分区里面。<br/>
出乎意料的是这次竟然不行了，在 google 上面搜索了一番，找到了大概的原因： <br/>
从逻辑盘启动第二系统还是需要以 c 盘的 boot.ini 文件作支撑的，<br/>
如果逻辑盘里面的第二系统同样是 windows xp 还好，但是如果换成 Windows 7 的话却行不通了。。。</p>

<p>这里要说一下导致这种情况出现的原因：<br/>
Windows XP 和 Windows 7 是两种差异较大的系统，他们的启动机制是不一样的。<br/>
首先要介绍的是一个主引导记录存放格式的概念，这里要知道的有两种： nt52  和  nt60。</p>

<p>如果一个分区的主引导记录格式是 nt52，<br/>
那么它将被判别为 windows xp 系统，将会以 windows  xp 的方式启动。</p>

<p>照我的理解就是：<br/>
接下来将会用到  ntldr、grldr、boot.ini、NTDETECT.COM 等文件，<br/>
如果其中的某个文件，比如说 boot.ini 文件，找不到的话，系统就会无法正常启动。</p>

<p>如果一个分区的主引导记录格式是 nt60，那么它将会被判别为 windows 7 系统，将会以 windows 7 的方式启动。<br/>
这里和 windows  xp 有较大的区别了，因为  windows 7 的启动并不需要上面所说到的那些 boot.ini、ntldr 的文件，<br/>
它会用到的是一个名为 bootmgr 的文件，还有就是位于分区根目录下 Boot 目录中的 BCD 文件。</p>

<p>逻辑盘里面的第二系统没法正常启动的原因就弄清楚了—— windows xp 和 windows 7 的启动方式有很大的差别~<br/>
那到底应该怎么办才能让作为第二系统的 Windows7 正常跑起来呢？<br/>
解决办法也是有的，也挺简单的，只要在磁盘管理里面把 Windows 7 所在的分区设置为 “活动的” 就可以了~<br/>
（只有主分区才能被设置为活动的，而且再有多个主分区的情况下，只能有一个主分区保持活动的状态~）<br/>
这样的话在电脑开机的过程中就会自动选择活动分区里面的系统来启动。。。。<br/>
不过我又遇到问题了 —— 只有主分区才能被设置为活动的分区，扩展分区里面逻辑分区是不能被设置为活动分区的！！</p>

<p>主分区？扩展分区？逻辑分区？<br/>
新名词挺多的，不过不要害怕，也都是一些不晦涩的概念，<br/>
受 windows 系统 的限制，一块硬盘的主分区和扩展分区的总数最多只能为 4 块，<br/>
为了适应要求更多分区的需求，一块扩展分区是能够被划分为 n 多块逻辑分区的。<br/>
概括来说，主分区最多只能有 4 块，逻辑分区则允许包含很多块~<br/>
我陈述一下我所遇到的问题吧，我老机器的磁盘仅仅被划分成了一个主分区和一个扩展分区，<br/>
主分区C 盘 20GB 左右被拿来装系统，扩展分区 280 GB 左右，<br/>
然后扩展分区又被分成了三个逻辑分区，两个 80GB 的，一个 120 GB 的~<br/>
明白我我所遇到的问题了吧，我压根儿就拿不出第二个主分区来装 Windows 7 了！<br/>
然后我又花了很多时间在网上查资料，功夫不负有心人，我误打误撞在学习怎么制作 u 盘启动盘的时候接触到了老毛桃。。<br/>
老毛桃不是一颗桃子而是一个人，他开发出了一个叫老毛桃的 u 盘启动盘制作工具，<br/>
名气大得很，我在很早的时候就听说过他的大名了~<br/>
通过大好人老毛桃前辈开发出来的 u 盘启动盘制作工具，我三下五除二便制作好了一个 u 盘启动盘~<br/>
U 盘启动盘我不知道别人是不是这么叫的，总之就是一个包含了 WinPE<br/>
（Windows PotableEdition，便携版 windows）的 u 盘吧~<br/>
这个 WinPE 到底有多便携呢？经过我的观察，最新版 老毛桃工具中 的 WinPE 应该是小于 80 MB 的，<br/>
而最新版老毛桃工具中的 Win7PE 的大小好像仅为 86MB，记的不是很清楚，不过大概就这么大小吧~<br/>
WinPE 的作用还是挺大的，之前没有接触过也就不知道，到实际使用过之后才发现它的重要性。<br/>
WinPE 在启动的时候只需要将其本身加载到内存中去就可以了，<br/>
通过它你可以很轻松地给一台裸机划分磁盘、安装系统，<br/>
当然，在你的系统出现故障你再也无法进入系统的时候，它也能发挥出很大的作用：<br/>
帮你还原系统，修复系统，操作坏了系统的磁盘里面的文件，<br/>
当然我没有那个机会去体会他的重要性，但我仅仅只是那么想一想便能够认识到他的重要意义了，<br/>
问自己一个问题，系统坏了的时候如果没有装好 WinPE 的 u 盘，你该怎么办？<br/>
我来抛砖引玉给出我能想到的对策吧 —— 取出硬盘，<br/>
连接到能够正常使用的机器的主板上面，修复系统、ghost还原系统等~<br/>
而且这里还有一个问题，装系统的时候是要和机器里面的其他硬件相匹配的，<br/>
这样的话即使连接到能正常使用的机器上面，<br/>
你也不能在上面重装系统，因为装好了之后你再把硬盘接回自己的机器里面，<br/>
硬件配置什么的都已经出现了变动，很有可能就会开不了机了（除非两台机器的配置一模一样）~<br/>
当然我只是列举出一种非常极端的情况，一般情况下c盘系统坏掉的时候，<br/>
还是能够通过不依赖于具体系统的 ghost 来完成还原动作的，<br/>
我的老机器的系统能够连续使用 4 年就属于这种情况~</p>

<p>又扯远了，回头~<br/>
在进入老毛桃老前辈制作的 WinPE 系统之后，<br/>
我发现了一个比赛门铁克 Partition Magic 好用的多的免费分区工具——DiskGenius。<br/>
说他好用是因为让我有力无处使的逻辑分区竟然能在这个工具里面轻而易举的转变为主分区！<br/>
这可真是太好了，两下我便把我老机器里面的磁盘重新调整了一下，之后我得到了如下结构的硬盘分区结构：<br/>
3 个主分区+ 1 个扩展分区，1 个扩展分区里面再分出 3 个逻辑分区，这样我就有整个 6 块分区了。<br/>
我分出 3 个主分区是因为除了 win 7 ，我还想体验一下别的系统，诸如 solaries、mac 雪豹、linux、ubuntu 什么的~<br/>
这些系统里面 mac lion 系统我已经用过了，不过我还是想试一试能不能装一个 雪豹。<br/>
另外就是  linux 和  ubuntu 也接触不短的时间了，<br/>
但让我更加期待的是直接将他们安装到硬盘上面的流畅度是怎么样的~<br/>
（说实话在 虚拟机里面是弄不出什么名堂的，卡呀卡的让人没一点儿心思去畅快地玩儿。。<br/>
在我的印象里，也就是 windows xp 的虚拟机比较实用一点，<br/>
一些不放心的 exe 我就丢到里面执行，或者是病毒、木马测试什么的~）</p>

<p>好了，主分区的问题到这里又算是解决了，要提一下的是其间我还尝试了一下备份分区表的操作，<br/>
以后应该有用到的机会的，有备无患~<br/>
这样我便成功地将 windows 7  ghost 文件释放到了主分区的一个盘里面，<br/>
弄好了以后我马上就在管理磁盘里面将包含了 ghost win7 的分区设置为活动分区，接下来就是重启等待着解开 Win7 的面纱~<br/>
成果不一定是甜蜜的，但道路却是很曲折，我又没能如愿以偿~<br/>
在重启后进入 Win7 的过程中，竟然爆出 missing operating system 错误~<br/>
我唯有向可用的网络伸出救援的手，我转到百度百科的词条里面查阅了一下 Ghost win7 的相关资料<br/>
资料连接：<a href="http://baike.baidu.com.cn/view/4707686.htm">百度百科_ghost win7</a><br/>
这个词条里面包含了一些 FAQ，FAQ 里面正好有我所遇到的问题，<br/>
不过我当时并没有按照那么做，也不知道怎么弄的，后来重启了一次，竟然不再显示 missing operating system 了，<br/>
然而也并没有让我如愿进入 win 7，而是向我提出了第二个问题：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>文件：\Windows\system32\ntkrnlpa.exe  
</span><span class='line'>状态：0xc0000428  
</span><span class='line'>信息：Windows 无法验证此文件的数字签名</span></code></pre></td></tr></table></div></figure>


<p>我还是挺无助的，继续在网上找解决方案，终于是功夫不负有心人，<br/>
贴出相关资料的链接：<br/>
<a href="http://blog.sina.com.cn/s/blog_6fd345430100o07a.html">双系统：XP 上装 GHOST 版 win7 的一些心得</a><br/>
大意就是D盘里面的 win7 在验证数据签名的时候验证的不是 D 盘里面相关文件的签名， <br/>
而是错误地跑到 C 盘里面去验证 Windows XP 类似文件的签名了，<br/>
而 C 盘下 windows XP 相关文件的上面是不包含这种签名的，无怪乎这里就要验证出错了~<br/>
为什么会这样呢？因为 Ghost Win7 实在 c 盘上面安装好以后所制作出来的，而我用的时候却把它还原回了 D 盘~<br/>
好了，问题的表层原因和深层原因都算是浮现出来了，怎么来解决这个问题呢？<br/>
再参看一篇资料的连接：<br/>
<a href="http://www.360doc.com/content/12/0129/20/1309227_182595344.shtml">【多系统引导启动原理】——WinXP、Win7 和 WinPE 三系统启动的方法</a><br/>
它的里面提到了一个叫做 bcdtool 的工具，这个工具就是用来操作 Win7 系统 Boot 目录下面的 BCD 文件的，<br/>
怎么操作呢？这里上面两篇资料里面说地不是很清楚，我得补充一些东西：</p>

<p>bcdTool 1.09.07.21 的使用比较奇葩，有非常要注意的几点：<br/>
1。你不能选择打开目标 bcd 文件，你只能把你要操作的 bcd 文件放到与 bcdtool.exe 相同目录里面，<br/>
这样的话你再打开 bcdtool 的时候，就会默认使用同一目录里面的那个 BCD 文件；<br/>
2。而且 bcdtool 也不能完成保存文件的操作，你只能在修改完毕之后在右边的键值对面板里面单击右键，<br/>
在弹出的右键菜单中选择“保存”来完成文件的保存~<br/>
3。你直接在 Windows Boot Manager 对应的右边的键值对里面修改 device 为 partition=D: 是没用的，<br/>
必须要右键 Windows Boot Manager，新建出一对东西来（[1]Windows Boot Loader  和 [2]Windows Legacy OS Loader）<br/>
我试着删除这两个其中的一个，发现不能够删除，只能是这两个一起存在。<br/>
然后需要做的就是在 [1] 和 [2] 里面更改键值对，改完之后一定要记得右键保存~<br/>
我观察了一下，键值对较多的一个对应的是 Win 7 系统的，键值对较少的对应的才是 Windows XP 系统的。<br/>
Windows XP 的键值对不用更改，要改的是键值对较多的对应 Win 7 的，<br/>
那么要改什么？很简单，改两个就行了，一个是 device 键，一个是 osdevice 键，统统改成 partition=D:<br/>
（这里因为我的 win 7 是装在  d 盘的，所以 partition=D:，这里的 partition 即是分区的意思~）<br/>
4。修改完了以后还是要记得再保存一下，然后就可以将 bcdtool.exe 所在目录中的 BCD 文件搬回老地方了，<br/>
这里我 win 7 是装在 D: 盘的，所以我把这个 BCD 文件搬回  D:/Boot/ 目录下面<br/>
Boot 是个隐藏的文件夹，你需要在文件夹选项中将 显示所有文件、显示系统隐藏文件打开才能看到~</p>

<p>经过了上面一系列的操作，我终于在重启之后进入了 Win 7 的系统安装环节~<br/>
当 win 7 的四瓣飞出来的时候，我简直觉得美呆了（当然和 Mac 的还是没得比，在我心中 mac 才是真正的 no。1）<br/>
其实我当时也是挺惊讶的，我还以为直接就能进 win 7 系统了，没想到到头了即使是 ghost 版的 win 7，<br/>
也还是要经历安装驱动等一些的步骤~<br/>
令我感到很气恼的是，进去之后就发现系统里面给装了很多软件，<br/>
这样的系统没法给我干净的感觉，我喜欢的是一个个地把自己需要的软件给装进来，<br/>
而不是在正常使用之前还要把一些无用的软件给删掉~<br/>
当然我也只是牢骚一下罢了，想他们弄出这么一个方便的东西来也不容易，预装一些软件盈点儿利也是能够理解的~<br/>
至此就算是告一段落了，win7 成功安装成 D 盘里面的第二系统~</p>

<p>最后，提出一些还要注意的地方：<br/>
1。win 7 好不容易装好了，清理干净、卸掉无用软件、装好必用软件、打好补丁以后，记得用 ghost 备份一下，<br/>
以后再要用到的时候就不用重新来安装一次了~<br/>
2。Windows XP 里面的一些软件要注意下，不要随随便便地就给安装了，拿我遇到的一段经历来说吧：<br/>
我在 win 7 里面装了一下在 windows xp 里面适用的一个游戏——《机械迷城》，<br/>
这之后还运行不到两下，我在用 alt + tab 切换程序的时候，win7 就蓝屏了~ <br/>
当然也不排除可能由其他原因所致，诸如：<br/>
win 7 的 bug，不能快速重复的按下 alt + tab，<br/>
或者是因为我安装了什么不兼容的软件所致，比如我将 flash 升级到最新版，<br/>
再或者是因为我将主机箱横躺着所导致的（后面我将机箱扶正以后进入了win7系统，不过那是再我第二次安装 win 7 以后），<br/>
还有可能就是过程中我安装的什么新驱动导致了蓝屏的出现，<br/>
最后的话就是新软件有嫌疑了，因为我当时确实安装了几个软件，比如：chrome、360安全卫士等~<br/>
3。我玩老毛桃 Win7 PE 的时候发现有一个修复引导的工具，就用那个东西试了一下，<br/>
想看一看到底能不能修复好 win7 系统为正常的引导，我还特意将正常的 BCD 文件保存了起来，<br/>
在 D 盘的 Boot 目录下面换回了以前那个不可用的 BCD 文件，<br/>
然后我就很猛地开始做修复了。。。。。。。<br/>
修复完了之后我重启转为硬盘启动到 win 7，这时候大麻烦来了，修复了以后 win7 不但不能用了，<br/>
在我将修复新增的几个文件比着日期删除掉以后，在将可用的 BCD 文件替换回来以后， <br/>
Win 7 依然萎着！爆出的错误信息为：boot.ini非法，正从 c:\windows 启动<br/>
我排查了好几个小时，终于在网上找到了相关问题的解决方案：<br/>
其实也就是我之前提到的那个 nt52 与 nt60 的问题，
老毛桃引导修复应该是把 win7 的 nt60 改为 Windows XP 的 nt 52 了，<br/>
这样的话，Win7 系统盘里面出现找 boot.ini 文件的举动就不难解释了~<br/>
回头看，怎么将 nt52 修改回 nt60 ？<br/>
使用 bootsect.exe 工具在命令行下面执行 “bootsect.exe /nt60 d:” 命令即可！<br/>
相关资料：<a href="http://baike.baidu.com/view/2789343.htm">百度百科_bootsect.exe</a><br/>
第一个参数是转换为哪种格式，第二个参数是作用在哪个分区，这里我 Win 7 在 D 盘，所以作用在 d: 上面~</p>

<p>OK，安装双系统到这里就算是结束了，这才是第一步，<br/>
我后面修复 mac 系统的路还是挺漫长的，得做好心理准备~<br/>
附相关工具的下载连接：<br/>
<a href="http://download.csdn.net/detail/yang3wei/4963762">系统维护工具辑录（安装Ghost Win7必备）</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[主板放电之后 mac 无法正常启动之谜]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/zhu-ban-fang-dian-zhi-hou-mac-wu-fa-zheng-chang-qi-dong-zhi-mi/"/>
    <updated>2013-02-08T01:16:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/zhu-ban-fang-dian-zhi-hou-mac-wu-fa-zheng-chang-qi-dong-zhi-mi</id>
    <content type="html"><![CDATA[<p>前段时间，在插上带 tf 卡的读卡器的情况下打开了我的 mac 主机，之后我便陷入了一连串的麻烦之中~</p>

<!-- more -->


<p>平时开机都是很正常的，这次却意外的在屏幕上显示出了黑底白字的一串英文：
reboot and select proper boot device.
大意也就是叫我选择一个可以被启动的设备来重启。
我也按照文字提示做了，我拔掉了插入 tf 卡的读卡器，然后就重启了。
可即便如此，重启了以后还是之前的老样子，依然给我打印出那段文字。
就这么的搞了几次，弄得我有些心烦了，于是便拆开主机箱果断地给主板放放电，让它领教一下我的厉害。。
可我就是没想到因为这么草率的一个举动，就让我白白忙活了好几天，直到今天下午才把系统给修复回来。
说说当时的情况吧，放电了以后我匆匆忙忙地就盖好了机箱盖儿重启了，
可我等来的不是用户登陆界面，而是无止尽的白色背景缺苹果。。
后来我终于还是妥协了，我不再进主分区的系统了，我试着看能不能进入恢复分区的系统
（这个分区里面也有一个 mac 系统，用来做主分区 mac 系统的修复用~）
可是在我试了几次过后，还是失望了，主分区和恢复分区里面的两个 mac 系统竟然都进不去了~</p>

<p>分析一番后我怀疑是放电过后 bios 设置被还原回初始状态了，否则再怎么出问题，恢复分区里的 mac 也没理由进不去的。
同事们也给我支招，说要把 bios 里面的 ahci 选项给开启，于是我便跑到 bios 设置里面找啊找，
找了很久几乎都把 ami 的 bios 设置翻了个遍，还是没能找到带 ahci 字样的相关选项。
这之后我便进入了很长一段时间的摸索阶段，偶然在网上看到有人说有些主板默认就是开启了 ahci 选项的，即便找不到它。。。。
查阅资料了好一段时光我才获悉这完全就是误导！！！
首先我查的是 ami 的 bios 怎么开启 ahci ，找到了有用的资料，然后我知道是在南桥芯片的设置里面的。
因为我在 bios 里面鼓捣了很久，印象中南桥芯片的设置里面压根就没看到有设置 ahci 的那个选项。。
经过刻苦的搜索，我又获得了一些有用的讯息：
1。与 ahci 设置相关的封装在南桥芯片里面的硬件名叫 ich7 什么的
（有 ich5，ich6，ich7，ich7r，ich8，等等）
2。并不是所有的 ich 都支持 ahci，包括 ich5，ich6，ich7 就不支持 ahci
3。我查阅了我所使用硬盘的参数，发现我的南桥里面正是使用的 ich7
综上所述，我的南桥芯片设置里面找不到 ahci 相关的设置就不奇怪了，因为在里面的 ich7 压根儿就不支持 ahci 的功能啊~</p>

<p>好吧，既然不支持，那怎么才能让他支持起  ahci 模式来呢？
mac os x lion 跑起来必须要  ahci 的支持，而我的机器在正常运作的时候确实是能够运行 lion 系统的，
那么我就推断出一定是有方法能够让主板提供对 ahci 的支持的。。。
然后又是漫长的搜索了，功夫不负有心人，我找到了一个叫天缘的博客，
里面介绍了一种安装 ahci 驱动的法子，当时很开心满以为找到解决方法了，
可后来操作实施的时候却碰到了问题， 那个 ahci 驱动根本就不能装到 ich 7 里面，
原因是这样的，天缘介绍的方法有一个替换文本的操作，替换的文本就是  ich 的设备编号，可是我找不到 ich7 的编号。。
之后我又仔仔细细地看了一遍天缘写的那篇文章，它里面确实提到那种安装 ahci 驱动的方法是不能应用与 ich 7 的。
就这样我又空欢喜了一场，再次回到不知所措的状态。。。</p>

<p>转机是这么来的，之前和卖给我 mac 机器的技术支持人员交流了一下，
当时并没有将这个问题给解决下来，他的建议是叫我交 150 块钱重装系统
我挺犹豫的，有如下几个原因：
1。路途遥远，机器运来运去的，麻烦不说，还容易损坏，而且我也没有邮寄主机箱的经历。
2。150块钱安装费也不是一个小数字，还是有些不舍，话说我自己如果能解决这个问题的话，不仅能省钱还能学到东西。
3。盘里面的数据安全问题，我并不希望数据毁掉或者泄露掉~
正是由于上述的几个原因，我并没有按照客服技术人员说的去做~
但是后来我折腾了两日实在没耐性弄下去了，于是我想到客服的员工不仅仅只有那一位，
还有一个最大的老板在里面，而且他的旺旺一般都是在线的，何不去试试手气呢？
老板就是老板，霸气，没有客服打杂工的那种市侩，而且我自己也摸索了很长一段时间，
一针见血的就提出了自己的推测 —— 断电后 bios 里面的某个设置被弄错了，导致无法正常进入主分区和恢复分区的 mac 系统~
老板的实力刚刚的，第二句话就给出了我解决方案 —— 在 bios 设置里面将 USB 设置的 high-speed 改为 full-speed，
当时还觉得挺奇怪的，mac 不能正常启动和 usb 设置有半毛钱的关系么？
不过虽然觉得奇怪，我还是照老板说的做了，三下五除二连接好我的 mac 机器，进入 bios 设置将 USB 选项更改了一下，
完了以后重启电脑，口中不断地默念“God bless me!”，神奇的一幕出现了，我心爱的 mac 终于回复了正常。。
那一刻我简直是激动地热泪盈眶，终于弄好了，终于可以干事了，简直是太好了~</p>

<p>虽然系统正常的恢复了过来，但是作为一次惨痛的经历，这无时无刻不提醒着我，
一定要知之为知之，方能在以后再次碰到此类问题的时候不手忙脚乱~
第一个疑问便是—— 难道不启动主板的 ahci 选项也能正常跑起  mac lion 来？
结合我之前修复系统的过程中所查阅的一些资料来思考一番，我觉得可能存在如下的一中可能：
即便主板上没有设置 ahci 的选项，即便在没有 ahci 选项的情况下默认不是 ahci 模式，
也可以通过高层操作系统中的驱动支持来弥补这块空缺！
我是有依据的，因为之前我在 csdn 的下载频道里面看到过类似，“黑苹果 + 免 ahci 驱动” 的资源~
我还下载了一个看了一看，其实就是一个 kext 结尾的 mac os 驱动文件，名为 AppleIntelIPIIXATA.kext、ATAPortInjector.kext
然后我猜想我的黑苹果扩展驱动目录中也应该存在这些驱动文件。
奇怪的是我没有找到这些驱动文件，但是通过我所查找到的资料，也有提到还存在其他的驱动文件是提供 ahci 弥补功能的，
诸如
  PC 上安装Mac OS X(四)——安装雪豹
 这篇资料中所提到的：IOAHCIBlockStorageinjector.kext 和 AppleAHCIPort.kext
这两个文件也是起到弥补 ahci 设置缺失的功能的
看到这里时我又跑到 mac 系统的扩展驱动目录（SLE——/System/Library/Extensions、EE——/Extras/Extensions）
里面找了一下，这次总算是有所斩获了 ——
在 SLE 目录下我找到了 AppleAHCIPort.kext 文件，
在 EE 目录下我找到了 IOAHCIBlockStorageinjector.kext 文件，
很吻合上面那篇资料里面所说到的情形，作者果然还是所言非虚啊~</p>

<p>下面手打 360doc 里面自己觉得有价值的一段文字：
导致五国的原因有很多很多，比如“你的 cpu 不支持64位和 sss3 指令集” 或者某个 kext 冲突之类的。
如果是前者，问题还算好解决。只要在 bootThink 图形界面中按 f8，输入 -x32 启动即可；
另外，对于某些只支持32位的 kext 也要使用这种方式来启动；
还有，也可以键入 cpus = 1（强制多核 cpu 使用单核）试试可不可以启动。
如果是后者，我们就要输入 -v 启动啰唆模式（Verbose）来看看问题出在哪里了。
举个粒子，输入 -v 启动之后会出现一大堆的 代码，暂时不去管他，最后他会停止在某处。
找到  panic 这个词，我们可以在这下面看到问题所在 。panic 原本是 恐慌的意思，
在这里表示系统遇到致命错误。假设错误代码如下面所示，我们就知道问题处在 AppleIntelCPUPowerManagement，
查询一些资料就知道只要安装 NullCPUPowerManagement.kext 即可解决问题。
依次类推，其他问题也可以按照这个思路下去。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[沉溺于 Mac，沉溺于 XCode]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/08/chen-ni-yu-mac-chen-ni-yu-xcode/"/>
    <updated>2013-02-08T00:54:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/08/chen-ni-yu-mac-chen-ni-yu-xcode</id>
    <content type="html"><![CDATA[<!-- more -->


<p></p>

<h2>2012 年的最后一天，唠几句闲话先~</h2>

<p>从 2011 年 6月份开始踏入 iOS 开发行列，如今已经一个半年头了。遇到的第一个问题便是对 objective-c 一点都不懂，作为 c 的扩展，oc 和 cpp 可谓是一对亲兄弟。现在看来，只是 oc 那种的中缀式语法让我感到比较奇葩，让当时作为菜鸟的我难以理解。我在大学的专业学的是软件开发与项目管理，c、数据结构、离散数学什么的都开过课程，但作为逃课王的我，每每挂科后于补考时咸鱼翻身总是那么地稀松平常。没有细数自己挂过多少门科，但很庆幸的是，没有一门是在补考时没有扳回来的。记得逃课最长的一次记录是连续 20 多天没有去上主修专业的课程，我的专业老师托与我同寝的兄弟给我传话，再不去就要叫家长了。当然，我后来还是妥协了，谁也不愿意让老爸老妈来大老远地跑过来视察自己糜烂的大学生活~</p>

<p>总的来说吧，虽然我还是挺放任、挺邪恶的，但我还是有一颗向上的心。依然能够想起当年我在长沙的寒冬，于小树林里学习《计算机网络》的情形，难得我也有认真的时候。除此之外，java 的学习我也挺用功的，还写了不少小玩意儿来自娱自乐。当初学习 c 语言的时候我就没正儿八经的听过几节课，教 c 语言的老师后来也是果断地就把我给做掉了。说来我对自己的专业还是感觉挺恶心的，专业老师教导我，软件开发与项目管理 == java | c# web项目。这和我认识里的软件、项目可差得远了。不过我承认，这确实是我自己有点儿想地太美了。</p>

<p>PS：<br/>
我之前以为软件开发与项目管理是一个很宽的范畴，其中就包括了游戏的开发。也就是说，在前面打好了基础之后，后面自己能够根据爱好自由地选择出口。但是我错了，大专里面的专于一点让这成为梦幻的泡沫。</p>

<p>2011 年 6 月份我从学院里面毕业了，我始终是不太愿意去找一份 web 相关的工作。后来，我有在深圳工作的朋友邀我一起做 iOS 开发，于是我便打扮地像蜗牛一样背着重重的壳朝着深圳出发了。之后也发生了很多事情，到这里有点儿犯懒了，下次再补上吧。</p>

<h2>接下来进入重点，下面是一些有助于开发的知识：</h2>

<p><strong>关键字：</strong><code>Mac OS X Lion 10.7.2</code>、<code>XCode 4.2</code>、<code>hotkey</code>。<br/>
<strong>备注：</strong>随着了解的不断深入，我越来越沉溺于 mac 和 xcode 无法自拔，太优秀了！</p>

<h3>mac 系统通用快捷键（mac 下的应用多数会往这些标准看齐）</h3>

<p>command + w: 关闭当前窗口<br/>
command + q: 退出程序<br/>
（Google Chrome 有点奇葩，按下之后还需要hold 那么一小会儿才能退出）</p>

<p>command + m: 最小化当前窗口<br/>
（怎么不用鼠标将最小化于dock 上的窗口还原？spotlight 或 control + f2->window 菜单项都行）</p>

<p>command + h: 隐藏当前应用的所有窗口<br/>
command + c: 复制<br/>
command + v: 粘贴<br/>
control + F2：激活菜单栏<br/>
（这个关机的时候比较好用，手不用脱离键盘了）</p>

<p>command + f: 寻找<br/>
command + space: 切换输入法<br/>
command + tab：切换程序<br/>
（这里又要注意的地方，切换过程中最好不要移动鼠标，否则容易出现混乱切换的情况）</p>

<p>control + space：spotlight</p>

<p>spotlight 这东西设计的很精妙，一些人说这没什么用要禁掉乃是因为没有找到正确的使用方法。从设计上来看，spotlight 位于屏幕的最右上角，就一个放大镜的小图标，可以通过 control + space 快捷键轻松调出，然后就会将焦点转移到搜索框里面，在这里可以很便捷地搜索自己想要找的东西，包括各种可用的 Applications，这也是我推崇 spotlight 一个很重要的原因，因为有了这个东西，手指完全不用脱离键盘你就可以启动任何为你所需要的应用程序。不知道一般家庭用的 mac 用户对这点是否有如此严苛的需求，但作为开发人员而言，穿梭于各种应用的功能之间，是在平凡不过的事情，这一点给我带来了很大的便利性。举例说明：在要启动 XCode 开始一天工作的时候，按下 control + space 调出 spotlight 搜索框，键入 XCode 后，搜索框下面会列出各种各样的候选条目，可以发现 XCode.app 是放在很前列的，只需要配合上下键、回车键，就达到了快捷启动 XCode 的目的。</p>

<p><strong>现在我已经越来越意识到快捷键所带来的便利</strong>，这是也是有根源的。传说中的代码编辑神器 vi、vim、emacs，无一不在快捷键上独树一帜。它们的理念就是在编码过程中抛弃对鼠标的操作，甚至抛弃对上下左下键的操作，以达到最神速、迅捷的编辑目的。有些特色所带来的便利性没有体会过是很难以理解的，这就是导致一些很优秀的东西口碑褒贬不一的重要原因之一。</p>

<p>最后要说的就是 Dock，你可以通过 command + alt + d 隐藏或者呈现 dock，也可以选在把 dock 放在左、下、右任一个方位，你可以把 Applications 文件夹的应用程序拖拽到 Dock上面，方便你的使用，也可以在不需要的时候把dock 上面的条目拽出 Dock 从而移除它。对比 windows 来看，Dock 还是一个非常舒服的东西，特别是 mac 界面本身就非常精美，一个个的应用图标排布在 Dock 上面，再配合 Magnification 的放缩效果，可谓是琳琅满目。反观windows xp，底部一个系统的任务栏，应用程序的的菜单本本分分的布置在自己窗口的顶部。孰好孰坏就不多做评论了，唯一确定的一点是我是更倾向于 mac 的设计风格的（难道是因为我用 windows 那么多年已经厌倦的原因？）Dock 上面的两个重量级功能：Mission Control 和 Launchpad。Mission Control 让我在单屏显示器上面获得了多屏显示的感受，而 LaunchPad 则让启动想要的程序变地无比简单。对比 Windows，LaunchPad 这种模仿 iOS 风格的以面、网格呈现可用条目的方式，无疑比那层层弹出的列表方式更为高效、优秀。</p>

<p>1。Finder 的最常用快捷键：<br/>
space：预览文件<br/>
command + down：打开文件<br/>
command + backspace：移到废纸篓<br/>
command + ctrl + 0 ~ 7：按各种方式规整地排列子文件<br/>
command + shift + g：前往某个路径<br/>
command + 1 ~ 4：更换呈现方式<br/>
command + shift + f：All my Files<br/>
command + shift + o: 打开文档目录<br/>
command + shift + d: 打开桌面目录<br/>
command + alt + L: 打开下载目录<br/>
command + shift + h: 打开home 目录<br/>
command + shift + C: 打开我的电脑<br/>
command + shift + A: 打开应用程序目录<br/>
command + shift + U: 打开工具目录</p>

<p>2。编码神器 XCode 最有价值的快捷键<br/>
command + e: 将所选中的文本传递到搜索框（但搜索框不会呈现出来）<br/>
command + f: 寻找<br/>
command + g: 寻找下一个<br/>
command + L: 定位到当前所编辑的代码文件的第多少行<br/>
上面这些快捷键能够很轻松的完成编辑点定位的功能，再次我们心爱的让鼠标被冷落在一旁。使用说明：有时候报错会报出错误出现在哪一行，诸如opengl es2 check_gl_error，这里 command + L 能发挥出很好的行定位作用。再个就是 command + f 与 command + g，command +f 键入自己想要定位到的点前面的几个符号进行搜索，配合 command + g 寻找下一个，定位到目标点位以后，按下  esc 关闭搜索功能，就完成了编辑点的精确定位。</p>

<p>控制台相关快捷键：<br/>
command + shift + c: 打开控制台视图<br/>
command + shift + y: 关闭控制台视图（这里我觉得不是很好，完全可以和打开使用一组相同的快捷键，易记）<br/>
command + k： 清除控制台输出<br/>
不得不说一下，mac 的界面优化做的实在是太到位了，简单说来就是你想要的功能都还在那儿，但是他们所占据的屏幕面积却是非常非常的少，一旦你要用到他们的时候，用起来也不会觉得很难找、很难用，这就是 mac 界面的精髓所在了（当然这要建立在对 mac 足够了解的基础之上）。</p>

<p>产品相关的快捷键：<br/>
我相信这是最最常用、最最贴身，人人都要牢记的一块了~<br/>
command + b: 编译、生成<br/>
command + r : 运行<br/>
command + i: profile<br/>
（找不到一个好的翻译词，用 Instruments 做内存占用的分析是必须走的流程）</p>

<p>command + shift + b: 分析<br/>
（这种特殊的编译有助于找到比较明显的泄露的代码）</p>

<p>command + shift + k: 清理<br/>
（这也是很常用的功能，不少问题都是通过清理后重新编译的方法来解决的）</p>

<p>command + q: 退出<br/>
（之所以放在这里是因为，有时候你的 xcode 出现怪异行为的时候，退出重启无疑是最佳方案）<br/>
举例而言，xcode 4.2 里面编辑签名配置的时候，有时候会出现改不动的情况，这里退出重启就很有用了。顺带说一下xcode 界面左上角圆形stop 按钮右侧的矩形条，这个东西用来控制以 debug 还是 release 的模式编译产品。debug 模式下会打印出各种各样的 log，这样有助于我们解决遇到的bug，但是执行效率会被降低。release 模式下 debug 打印则被禁止掉，如果是真机测试的话，所得到的效果是最接近用户使用的效果的。发布产品也必须发布 release 模式下生成的产品。</p>

<p>特别把 xcode 工程浏览视图中的 show in finder 功能拿出来说一下，在 xcode 中这个简单实用的功能，你要在 eclipse 里面办到，那可就不容易了。在使用 xcode 之前，eclipse 一直是我最忠实、心爱的伙伴，但就这点来说，eclipse 还是让我很失望的。</p>

<p>还要说一说 XCode 的视图控制设计，是我见过的最优秀的了。我一般是把右侧的属性栏视图关掉，仅留下工程结构视图和 代码编辑视图（做游戏对属性栏的需求不是很多）。在代码编辑区按下 command + shift + j 在工程目录视图中可以定位到当前编辑文件的所在的位置。command + 0~ 9 的数字可以在与工程目录视图并列的其他数个视图中快捷切换，特别是 command + 0，能够将 XCode 左侧栏完全的隐藏、打开，另外，整个过程的过度效果也是非常舒服的，比 eclipse 的最大化编辑器、还原到正常尺寸更优秀，隐藏左侧栏在做代码文件的版本对比的时候是非常实用的，还有就是做代码移植的时候，让代码编辑区域贴紧窗口左壁能够得到更合适的视角。暂时就说这么多，伴随这一年多的使用，积累下来的经验、技巧肯定还有遗漏的地方，后面想到了会更新上来，自恋一下，务必让这篇文章成为 mac、iOS 开发者心所向往的神奇篇章~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ant 自动构建 build.xml]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/05/ant-zi-dong-gou-jian-build-dot-xml/"/>
    <updated>2013-02-05T13:10:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/05/ant-zi-dong-gou-jian-build-dot-xml</id>
    <content type="html"><![CDATA[<!-- more -->


<h2>功能：</h2>

<p>生成的 <code>build.xml</code> 用来提供自动以 eclipse 执行，<br/>
自动打 jar 包，自动以 ant 执行，自动执行生成的 jar 等功能~</p>

<p>非常便捷的生成 java 工程的 <code>build.xml</code> ，<br/>
<code>build.xml</code> 常用配置我给抽取到 <code>build.properties</code> 文件里面了。<br/>
自此就可以尽可能少的去编辑、查看 <code>build.xml</code> 文件了<br/>
（新增其他格式的资源文件要改动下）<br/>
（第一次生成 build.xml 时会从 libs 目录中提取相关的数据）<br/>
（生成完毕之后新添加的外部 jar 包也要在里面新增下）</p>

<p>PathUtil 提供传入资源文件名称，返回完整包路径的便捷方法 getFullPath()，<br/>
如，传入 <code>123.png</code>，返回 <code>/org/bruce/pocket/tools/res/123.png</code><br/>
这种格式的 “包路径” 能够很便利地被 java 程序使用，如：</p>

<figure class='code'><figcaption><span>code snippet  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="err">类名</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="s">&quot;/org/bruce/pocket/tools/res/123.png&quot;</span><span class="o">);</span>
</span><span class='line'><span class="kt">byte</span><span class="o">[]</span> <span class="n">bytes</span> <span class="o">=</span> <span class="n">IOUtils</span><span class="o">.</span><span class="na">toByteArray</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>
</span><span class='line'><span class="n">IOUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里得到的字节数组可以很方便的转换为字符串、图片对象什么的~<br/>
转换为字符串：<code>google -》熔岩 51Blog-》StringFileBridge.java</code><br/>
转换为图片：<code>Image image = ImageIO.read(bytes);</code></p>

<h2>原理：</h2>

<p>把 <code>org.bruce.pocket.tools.res</code> 包里面的<br/>
<code>ant_template.properties</code> 、<code>ant_template.xml</code> 读取为字符串，<br/>
做一些简单的文本替换，然后将新生成的字符串<br/>
写入到 java 工程根目录的 <code>build.properties</code> 、<code>build.xml</code> 文件中，</p>

<p>有一些必须要遵循的要求：<br/>
资源文件必须放置在以 <code>.res</code> 结尾的 <code>package</code> 里面，<br/>
对于 <code>PathUtil.java</code>，根据个人喜好来定义 DOMAIN（我的 domain 是 <code>org/bruce/</code>）<br/>
生成的 <code>build.properties</code>、<code>build.xml</code> 也只是初步的，<br/>
<code>build.properties</code> 里面的有些属性是必须要写上的，<br/>
比如说，桌面的路径<br/>
（这里涉及到将生成的 jar 文件复制到桌面的操作）</p>

<p>还有就是应用程序的作者、当前版本、名称等，<br/>
程序的名称我做了处理，直接拿工程文件的名称来用。<br/>
版本、作者虽然不是重点，但规范的来说，<br/>
最好还是写上，也免得 ant 执行打 jar 包操作的时候出问题。</p>

<h2>上代码：</h2>

<!-- more -->




<figure class='code'><figcaption><span>GenBuildXml.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">bruce</span><span class="o">.</span><span class="na">pocket</span><span class="o">.</span><span class="na">tools</span><span class="o">.</span><span class="na">items</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.commons.io.IOUtils</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.bruce.pocket.tools.gui.Dta</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.bruce.pocket.tools.gui.GUI</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.bruce.pocket.tools.utils.IOBridge</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.bruce.pocket.tools.utils.PathUtil</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author Bruce Yang</span>
</span><span class='line'><span class="cm"> * 为 eclipse 的 java 工程自动生成 build.xml~</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">GenBuildXml</span> <span class="kd">extends</span> <span class="n">Dta</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">GenBuildXml</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getSimpleName</span><span class="o">());</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">setTips</span><span class="o">(</span><span class="s">&quot;为 eclipse 工程自动生成 build.xml~&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">setDesc</span><span class="o">(</span><span class="s">&quot;&lt;html&gt;使用说明：&lt;br/&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s">&quot;我做了限制，一次只能拽入一个 java 工程文件夹&lt;br/&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s">&quot;而且对拽入的文件夹会执行检查操作，以提高操作安全性&lt;br/&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s">&quot;检查：是否存在 .project, .classpath 文件，&lt;br/&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>              <span class="s">&quot;是否存在 src 文件夹&lt;/html&gt;&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">setImgName</span><span class="o">(</span><span class="s">&quot;w400_h300.png&quot;</span><span class="o">);</span>  <span class="c1">// 窗口大小由图片大小所决定~</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">handle</span><span class="o">(</span><span class="n">File</span> <span class="n">f</span><span class="o">)</span> <span class="o">{}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">handleEntries</span><span class="o">(</span><span class="n">List</span><span class="o">&lt;</span><span class="n">File</span><span class="o">&gt;</span> <span class="n">listEntries</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">File</span> <span class="n">firstItem</span> <span class="o">=</span> <span class="n">listEntries</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// 一次只能处理一个工程文件，而且仅在拽入的是单个文件夹的时候才有效~</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(!</span><span class="n">firstItem</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;不是一个工程文件夹（目录）！&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">listEntries</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;一次仅处理一个工程文件夹！&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">bSrcDir</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">bDotProject</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">bDotClasspath</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">File</span><span class="o">[]</span> <span class="n">files</span> <span class="o">=</span> <span class="n">firstItem</span><span class="o">.</span><span class="na">listFiles</span><span class="o">();</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">File</span> <span class="n">file</span> <span class="o">:</span> <span class="n">files</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;src&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">bSrcDir</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;.project&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">bDotProject</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;.classpath&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">bDotClasspath</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// 为确保操作的安全执行，必要的检查是不可忽略的~</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(!</span><span class="n">bSrcDir</span> <span class="o">||</span> <span class="o">!</span><span class="n">bDotProject</span> <span class="o">||</span> <span class="o">!</span><span class="n">bDotClasspath</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;生成 build.xml 失败，该文件夹不具有 .project、.classpath 或 src 目录~&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;This is a valid java project directory!&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// 于根目录生成 build.properties 文件~</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">propPath</span> <span class="o">=</span> <span class="n">PathUtil</span><span class="o">.</span><span class="na">getFullPath</span><span class="o">(</span><span class="s">&quot;ant_template.properties&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">InputStream</span> <span class="n">is</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getClass</span><span class="o">().</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="n">propPath</span><span class="o">);</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">strProp</span> <span class="o">=</span> <span class="n">IOBridge</span><span class="o">.</span><span class="na">stream2String</span><span class="o">(</span><span class="n">is</span><span class="o">,</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">IOUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>
</span><span class='line'>      <span class="n">strProp</span> <span class="o">=</span> <span class="n">strProp</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;__APPLICATION_NAME__&quot;</span><span class="o">,</span> <span class="n">firstItem</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">File</span> <span class="n">buildProp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">firstItem</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">()</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">&quot;build.properties&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">IOBridge</span><span class="o">.</span><span class="na">string2File</span><span class="o">(</span><span class="n">strProp</span><span class="o">,</span> <span class="n">buildProp</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="c1">// 于根目录生成 build.xml 文件~</span>
</span><span class='line'>      <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>      <span class="n">File</span> <span class="n">fLibs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">firstItem</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">()</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">&quot;libs&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">fLibs</span><span class="o">.</span><span class="na">exists</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">fLibs</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">File</span><span class="o">[]</span> <span class="n">jarFiles</span> <span class="o">=</span> <span class="n">fLibs</span><span class="o">.</span><span class="na">listFiles</span><span class="o">();</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="n">File</span> <span class="n">jarFile</span> <span class="o">:</span> <span class="n">jarFiles</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">jarFile</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">endsWith</span><span class="o">(</span><span class="s">&quot;.jar&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\t\t\t&lt;zipfileset excludes=\&quot;META-INF/*.SF\&quot; src=\&quot;./libs/&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">jarFile</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>                  <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\&quot; /&gt;\n&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">xmlPath</span> <span class="o">=</span> <span class="n">PathUtil</span><span class="o">.</span><span class="na">getFullPath</span><span class="o">(</span><span class="s">&quot;ant_template.xml&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">is</span> <span class="o">=</span> <span class="n">GenBuildXml</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getResourceAsStream</span><span class="o">(</span><span class="n">xmlPath</span><span class="o">);</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">strXml</span> <span class="o">=</span> <span class="n">IOBridge</span><span class="o">.</span><span class="na">stream2String</span><span class="o">(</span><span class="n">is</span><span class="o">,</span> <span class="s">&quot;utf-8&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">IOUtils</span><span class="o">.</span><span class="na">closeQuietly</span><span class="o">(</span><span class="n">is</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">strXml</span> <span class="o">=</span> <span class="n">strXml</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;__EXTERNAL_JARS__&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">strXml</span> <span class="o">=</span> <span class="n">strXml</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;__EXTERNAL_JARS__&quot;</span><span class="o">,</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>                    
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">strXml</span> <span class="o">=</span> <span class="n">strXml</span><span class="o">.</span><span class="na">replace</span><span class="o">(</span><span class="s">&quot;__PROJECT_NAME__&quot;</span><span class="o">,</span> <span class="n">firstItem</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">File</span> <span class="n">buildXml</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">firstItem</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">()</span> <span class="o">+</span> <span class="n">File</span><span class="o">.</span><span class="na">separator</span> <span class="o">+</span> <span class="s">&quot;build.xml&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">IOBridge</span><span class="o">.</span><span class="na">string2File</span><span class="o">(</span><span class="n">strXml</span><span class="o">,</span> <span class="n">buildXml</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">new</span> <span class="nf">GUI</span><span class="o">(</span><span class="k">new</span> <span class="n">GenBuildXml</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>ant_template.properties  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="err">#</span> <span class="nx">App</span> <span class="nx">name</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;JavaDynamicComiple&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">name</span><span class="o">=</span><span class="nx">__APPLICATION_NAME__</span>
</span><span class='line'><span class="err">#</span> <span class="nx">App</span> <span class="nx">version</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;1.0&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">version</span><span class="o">=</span><span class="mf">1.0</span>
</span><span class='line'><span class="err">#</span> <span class="nx">App</span> <span class="nx">author</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;yang3wei&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">author</span><span class="o">=</span><span class="nx">yang3wei</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Desktop</span> <span class="nx">absolute</span> <span class="nx">path</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;/Users/y3w/Desktop&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">desktop</span><span class="o">=</span><span class="err">/Users/y3w/Desktop</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Resource</span> <span class="kr">package</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;org/bruce/pocket/tools/res&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">res</span><span class="p">.</span><span class="nx">pkg</span><span class="o">=</span>
</span><span class='line'><span class="err">#</span> <span class="nx">Classpath</span> <span class="nx">of</span> <span class="nx">entry</span> <span class="kr">class</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">g</span><span class="p">.</span> <span class="s2">&quot;org.bruce.test.Main&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nx">entry</span><span class="p">.</span><span class="kr">class</span><span class="o">=</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>ant_template.xml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;project</span> <span class="na">name=</span><span class="s">&quot;__PROJECT_NAME__&quot;</span> <span class="na">default=</span><span class="s">&quot;execute.class&quot;</span> <span class="na">basedir=</span><span class="s">&quot;.&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;1.define variables~&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- </span>
</span><span class='line'><span class="c">  也可以从 xml 文件中读取属性：&lt;xmlproperty file=&quot;config.xml&quot; /&gt;</span>
</span><span class='line'><span class="c">  详细请参见：http://blog.csdn.net/jzy23682891/article/details/7063489 </span>
</span><span class='line'><span class="c">  --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">file=</span><span class="s">&quot;build.properties&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;src&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/src&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;libs&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/libs&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;build&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/build&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;dist&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/dist&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;2.define external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;path</span> <span class="na">id=</span><span class="s">&quot;external.jars.path&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;fileset</span> <span class="na">dir=</span><span class="s">&quot;${libs}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/fileset&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/path&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;prepare&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;3.prepare&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mkdir</span> <span class="na">dir=</span><span class="s">&quot;${build}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mkdir</span> <span class="na">dir=</span><span class="s">&quot;${dist}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;compile&quot;</span> <span class="na">depends=</span><span class="s">&quot;prepare&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;5.compile&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;description&gt;</span>将src目录下的资源文件复制到 build目录下面(保留包结构)<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${build}/${res.pkg}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;copy</span> <span class="na">todir=</span><span class="s">&quot;${build}/${res.pkg}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;fileset</span> <span class="na">dir=</span><span class="s">&quot;${src}/${res.pkg}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.jpg&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.png&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.gif&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.prop&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.properties&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/fileset&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/copy&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nt">&lt;javac</span> <span class="na">srcdir=</span><span class="s">&quot;${src}&quot;</span> <span class="na">destdir=</span><span class="s">&quot;${build}&quot;</span> <span class="na">encoding=</span><span class="s">&quot;UTF-8&quot;</span> <span class="na">deprecation=</span><span class="s">&quot;true&quot;</span> <span class="na">listfiles=</span><span class="s">&quot;off&quot;</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span> <span class="na">target=</span><span class="s">&quot;1.6&quot;</span> <span class="na">debug=</span><span class="s">&quot;false&quot;</span> <span class="na">failonerror=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="c">&lt;!--给编译器指定编码，防止出现：&quot;警告： 编码 GBK 的不可映射字符&quot;--&gt;</span>
</span><span class='line'>          <span class="nt">&lt;compilerarg</span> <span class="na">line=</span><span class="s">&quot;-encoding UTF-8 &quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;classpath</span> <span class="na">refid=</span><span class="s">&quot;external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/javac&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;compile finished!&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;execute.class&quot;</span> <span class="na">depends=</span><span class="s">&quot;compile&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.execute&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;java</span> <span class="na">classname=</span><span class="s">&quot;${entry.class}&quot;</span> <span class="na">classpath=</span><span class="s">&quot;${build}&quot;</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sysproperty</span> <span class="na">key=</span><span class="s">&quot;file.encoding&quot;</span> <span class="na">value=</span><span class="s">&quot;UTF-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;classpath</span> <span class="na">refid=</span><span class="s">&quot;external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/java&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;package2jar&quot;</span> <span class="na">depends=</span><span class="s">&quot;compile&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.package2jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;jar</span> <span class="na">destfile=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="na">basedir=</span><span class="s">&quot;${build}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;manifest&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Name&quot;</span> <span class="na">value=</span><span class="s">&quot;${name}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Version&quot;</span> <span class="na">value=</span><span class="s">&quot;${version}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Author&quot;</span> <span class="na">value=</span><span class="s">&quot;${author}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;Created-By&quot;</span> <span class="na">value=</span><span class="s">&quot;${author}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;Main-Class&quot;</span> <span class="na">value=</span><span class="s">&quot;${entry.class}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/manifest&gt;</span>
</span><span class='line'>__EXTERNAL_JARS__     <span class="nt">&lt;/jar&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;execute.jar&quot;</span> <span class="na">depends=</span><span class="s">&quot;package2jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.jar.execute&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;java</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span> <span class="na">failonerror=</span><span class="s">&quot;true&quot;</span> <span class="na">jar=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sysproperty</span> <span class="na">key=</span><span class="s">&quot;file.encoding&quot;</span> <span class="na">value=</span><span class="s">&quot;UTF-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/java&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;copy2desktop&quot;</span> <span class="na">depends=</span><span class="s">&quot;package2jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.copy2desktop&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;copy</span> <span class="na">file=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="na">tofile=</span><span class="s">&quot;${desktop}/${name}${version}.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;clean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${build}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">file=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${dist}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;project</span> <span class="na">name=</span><span class="s">&quot;__PROJECT_NAME__&quot;</span> <span class="na">default=</span><span class="s">&quot;execute.class&quot;</span> <span class="na">basedir=</span><span class="s">&quot;.&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;1.define variables~&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="c">&lt;!-- </span>
</span><span class='line'><span class="c">  也可以从 xml 文件中读取属性：&lt;xmlproperty file=&quot;config.xml&quot; /&gt;</span>
</span><span class='line'><span class="c">  详细请参见：http://blog.csdn.net/jzy23682891/article/details/7063489 </span>
</span><span class='line'><span class="c">  --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">file=</span><span class="s">&quot;build.properties&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;src&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/src&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;libs&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/libs&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;build&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/build&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;dist&quot;</span> <span class="na">value=</span><span class="s">&quot;${basedir}/dist&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;2.define external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;path</span> <span class="na">id=</span><span class="s">&quot;external.jars.path&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;fileset</span> <span class="na">dir=</span><span class="s">&quot;${libs}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/fileset&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/path&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;prepare&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;3.prepare&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mkdir</span> <span class="na">dir=</span><span class="s">&quot;${build}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;mkdir</span> <span class="na">dir=</span><span class="s">&quot;${dist}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;compile&quot;</span> <span class="na">depends=</span><span class="s">&quot;prepare&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;5.compile&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;description&gt;</span>将src目录下的资源文件复制到 build目录下面(保留包结构)<span class="nt">&lt;/description&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${build}/${res.pkg}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;copy</span> <span class="na">todir=</span><span class="s">&quot;${build}/${res.pkg}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;fileset</span> <span class="na">dir=</span><span class="s">&quot;${src}/${res.pkg}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.jpg&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.png&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.gif&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.prop&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;include</span> <span class="na">name=</span><span class="s">&quot;**/*.properties&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/fileset&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/copy&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nt">&lt;javac</span> <span class="na">srcdir=</span><span class="s">&quot;${src}&quot;</span> <span class="na">destdir=</span><span class="s">&quot;${build}&quot;</span> <span class="na">encoding=</span><span class="s">&quot;UTF-8&quot;</span> <span class="na">deprecation=</span><span class="s">&quot;true&quot;</span> <span class="na">listfiles=</span><span class="s">&quot;off&quot;</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span> <span class="na">target=</span><span class="s">&quot;1.6&quot;</span> <span class="na">debug=</span><span class="s">&quot;false&quot;</span> <span class="na">failonerror=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="c">&lt;!--给编译器指定编码，防止出现：&quot;警告： 编码 GBK 的不可映射字符&quot;--&gt;</span>
</span><span class='line'>          <span class="nt">&lt;compilerarg</span> <span class="na">line=</span><span class="s">&quot;-encoding UTF-8 &quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;classpath</span> <span class="na">refid=</span><span class="s">&quot;external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/javac&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;compile finished!&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;execute.class&quot;</span> <span class="na">depends=</span><span class="s">&quot;compile&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.execute&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;java</span> <span class="na">classname=</span><span class="s">&quot;${entry.class}&quot;</span> <span class="na">classpath=</span><span class="s">&quot;${build}&quot;</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sysproperty</span> <span class="na">key=</span><span class="s">&quot;file.encoding&quot;</span> <span class="na">value=</span><span class="s">&quot;UTF-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;classpath</span> <span class="na">refid=</span><span class="s">&quot;external.jars.path&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/java&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;package2jar&quot;</span> <span class="na">depends=</span><span class="s">&quot;compile&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.package2jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;jar</span> <span class="na">destfile=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="na">basedir=</span><span class="s">&quot;${build}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;manifest&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Name&quot;</span> <span class="na">value=</span><span class="s">&quot;${name}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Version&quot;</span> <span class="na">value=</span><span class="s">&quot;${version}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;App-Author&quot;</span> <span class="na">value=</span><span class="s">&quot;${author}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;Created-By&quot;</span> <span class="na">value=</span><span class="s">&quot;${author}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>              <span class="nt">&lt;attribute</span> <span class="na">name=</span><span class="s">&quot;Main-Class&quot;</span> <span class="na">value=</span><span class="s">&quot;${entry.class}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/manifest&gt;</span>
</span><span class='line'>__EXTERNAL_JARS__     <span class="nt">&lt;/jar&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;execute.jar&quot;</span> <span class="na">depends=</span><span class="s">&quot;package2jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.jar.execute&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;java</span> <span class="na">fork=</span><span class="s">&quot;true&quot;</span> <span class="na">failonerror=</span><span class="s">&quot;true&quot;</span> <span class="na">jar=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;sysproperty</span> <span class="na">key=</span><span class="s">&quot;file.encoding&quot;</span> <span class="na">value=</span><span class="s">&quot;UTF-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/java&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;copy2desktop&quot;</span> <span class="na">depends=</span><span class="s">&quot;package2jar&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;echo</span> <span class="na">message=</span><span class="s">&quot;${name}.copy2desktop&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;copy</span> <span class="na">file=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="na">tofile=</span><span class="s">&quot;${desktop}/${name}${version}.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;clean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${build}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">file=</span><span class="s">&quot;${dist}/${name}${version}.jar&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;delete</span> <span class="na">dir=</span><span class="s">&quot;${dist}&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;rerun&quot;</span> <span class="na">depends=</span><span class="s">&quot;clean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ant</span> <span class="na">antfile=</span><span class="s">&quot;build.xml&quot;</span> <span class="na">target=</span><span class="s">&quot;execute.class&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span><span class='line'>  <span class="nt">&lt;target</span> <span class="na">name=</span><span class="s">&quot;rerun&quot;</span> <span class="na">depends=</span><span class="s">&quot;clean&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;ant</span> <span class="na">antfile=</span><span class="s">&quot;build.xml&quot;</span> <span class="na">target=</span><span class="s">&quot;execute.class&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/target&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java 图片缩放工具类]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/05/java-tu-pian-suo-fang-gong-ju-lei/"/>
    <updated>2013-02-05T12:48:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/05/java-tu-pian-suo-fang-gong-ju-lei</id>
    <content type="html"><![CDATA[<p>直接上代码：</p>

<!-- more -->




<figure class='code'><figcaption><span>ImageResizer.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">bruce</span><span class="o">.</span><span class="na">pocket</span><span class="o">.</span><span class="na">tools</span><span class="o">.</span><span class="na">utils</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.awt.image.BufferedImage</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.awt.image.RenderedImage</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.FileOutputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.sun.image.codec.jpeg.JPEGCodec</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.sun.image.codec.jpeg.JPEGImageEncoder</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author Bruce Yang</span>
</span><span class='line'><span class="cm"> * 调整图片大小~</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ImageResizer</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">ImageResizer</span><span class="o">.</span><span class="na">resizeJpgImage</span><span class="o">(</span><span class="s">&quot;c:/test.JPG&quot;</span><span class="o">,</span> <span class="s">&quot;c:/test4.jpg&quot;</span><span class="o">,</span> <span class="mi">400</span><span class="o">,</span> <span class="mi">300</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 图像缩放 png 格式~</span>
</span><span class='line'><span class="cm">  * @param srcImgPath 原图片文件路径</span>
</span><span class='line'><span class="cm">  * @param destImgPath 生成的缩略图片文件路径</span>
</span><span class='line'><span class="cm">  * @param destWidth 生成图片的宽度</span>
</span><span class='line'><span class="cm">  * @param destHeight 生成图片的高度</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">resizePngImage</span><span class="o">(</span><span class="n">String</span> <span class="n">srcImgPath</span><span class="o">,</span> <span class="n">String</span> <span class="n">destImgPath</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destWidth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destHeight</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">resizePngImage</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">srcImgPath</span><span class="o">),</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">destImgPath</span><span class="o">),</span> <span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">resizePngImage</span><span class="o">(</span><span class="n">File</span> <span class="n">srcFile</span><span class="o">,</span> <span class="n">File</span> <span class="n">destFile</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destWidth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destHeight</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(!</span><span class="n">srcFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">// .DS_Store 这个文件害我调了半天，主要是 这个方法里面不包含文件名判断的逻辑，直接就给报错中断执行了~</span>
</span><span class='line'><span class="c1">//           System.err.println(srcFile.getAbsolutePath());</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">srcBi</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">srcFile</span><span class="o">);</span>
</span><span class='line'>          <span class="c1">// Image.SCALE_SMOOTH 的缩略算法 生成缩略图片的平滑度的 优先级比速度高 生成的图片质量比较好 但速度慢~</span>
</span><span class='line'>          <span class="n">Image</span> <span class="n">img</span> <span class="o">=</span> <span class="n">srcBi</span><span class="o">.</span><span class="na">getScaledInstance</span><span class="o">(</span><span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">,</span> <span class="n">Image</span><span class="o">.</span><span class="na">SCALE_SMOOTH</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">targetBi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedImage</span><span class="o">(</span><span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">,</span> <span class="n">BufferedImage</span><span class="o">.</span><span class="na">TYPE_INT_RGB</span><span class="o">);</span>
</span><span class='line'>          <span class="n">targetBi</span><span class="o">.</span><span class="na">getGraphics</span><span class="o">().</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">writePNGImage</span><span class="o">(</span><span class="n">targetBi</span><span class="o">,</span> <span class="n">destFile</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">ex</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 图像缩放 jpg 格式~</span>
</span><span class='line'><span class="cm">  * @param srcImgPath 原图片文件路径</span>
</span><span class='line'><span class="cm">  * @param destImgPath 生成的缩略图片文件路径</span>
</span><span class='line'><span class="cm">  * @param destWidth 生成图片的宽度</span>
</span><span class='line'><span class="cm">  * @param destHeight 生成图片的高度</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">resizeJpgImage</span><span class="o">(</span><span class="n">String</span> <span class="n">srcImgPath</span><span class="o">,</span> <span class="n">String</span> <span class="n">destImgPath</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destWidth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destHeight</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">resizeJpgImage</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">srcImgPath</span><span class="o">),</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">destImgPath</span><span class="o">),</span> <span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">resizeJpgImage</span><span class="o">(</span><span class="n">File</span> <span class="n">srcFile</span><span class="o">,</span> <span class="n">File</span> <span class="n">destFile</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destWidth</span><span class="o">,</span> <span class="kt">int</span> <span class="n">destHeight</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(!</span><span class="n">srcFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">Image</span> <span class="n">srcImg</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">srcFile</span><span class="o">);</span>
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">targetBi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedImage</span><span class="o">(</span><span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">,</span> <span class="n">BufferedImage</span><span class="o">.</span><span class="na">TYPE_INT_RGB</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="c1">// Image.SCALE_SMOOTH 的缩略算法 生成缩略图片的平滑度的 优先级比速度高 生成的图片质量比较好 但速度慢~</span>
</span><span class='line'>          <span class="n">Image</span> <span class="n">img</span> <span class="o">=</span> <span class="n">srcImg</span><span class="o">.</span><span class="na">getScaledInstance</span><span class="o">(</span><span class="n">destWidth</span><span class="o">,</span> <span class="n">destHeight</span><span class="o">,</span> <span class="n">Image</span><span class="o">.</span><span class="na">SCALE_SMOOTH</span><span class="o">);</span>
</span><span class='line'>          <span class="n">targetBi</span><span class="o">.</span><span class="na">getGraphics</span><span class="o">().</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">FileOutputStream</span> <span class="n">fos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">destFile</span><span class="o">);</span>
</span><span class='line'>          <span class="n">JPEGImageEncoder</span> <span class="n">encoder</span> <span class="o">=</span> <span class="n">JPEGCodec</span><span class="o">.</span><span class="na">createJPEGEncoder</span><span class="o">(</span><span class="n">fos</span><span class="o">);</span>
</span><span class='line'>          <span class="n">encoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">targetBi</span><span class="o">);</span>
</span><span class='line'>          <span class="n">fos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ex</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">ex</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 由高清背景图片生成 ipad 所用背景图片~</span>
</span><span class='line'><span class="cm">  * 将 2560 * 3840 的图片截除上下两部分，缩放为原来的 0.3 倍（得到的图片的大小为 768 * 1024）~</span>
</span><span class='line'><span class="cm">  * @param imgsrc</span>
</span><span class='line'><span class="cm">  * @param imgdist</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">genIpadBg</span><span class="o">(</span><span class="n">String</span> <span class="n">srcImgPath</span><span class="o">,</span> <span class="n">String</span> <span class="n">destImgPath</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">File</span> <span class="n">srcImgFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">srcImgPath</span><span class="o">);</span>
</span><span class='line'>      <span class="n">File</span> <span class="n">destImgFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">destImgPath</span><span class="o">);</span>
</span><span class='line'>      <span class="n">genIpadBg</span><span class="o">(</span><span class="n">srcImgFile</span><span class="o">,</span> <span class="n">destImgFile</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">genIpadBg</span><span class="o">(</span><span class="n">File</span> <span class="n">srcImgFile</span><span class="o">,</span> <span class="n">File</span> <span class="n">destImgFile</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(!</span><span class="n">srcImgFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">return</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">srcBi</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">srcImgFile</span><span class="o">);</span>
</span><span class='line'>          <span class="n">srcBi</span> <span class="o">=</span> <span class="n">srcBi</span><span class="o">.</span><span class="na">getSubimage</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">213</span><span class="o">,</span> <span class="n">srcBi</span><span class="o">.</span><span class="na">getWidth</span><span class="o">(),</span> <span class="mi">3414</span><span class="o">);</span>
</span><span class='line'>          <span class="n">Image</span> <span class="n">img</span> <span class="o">=</span> <span class="n">srcBi</span><span class="o">.</span><span class="na">getScaledInstance</span><span class="o">(</span><span class="mi">768</span><span class="o">,</span> <span class="mi">1024</span><span class="o">,</span> <span class="n">Image</span><span class="o">.</span><span class="na">SCALE_SMOOTH</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">destBi</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedImage</span><span class="o">(</span><span class="mi">768</span><span class="o">,</span> <span class="mi">1024</span><span class="o">,</span> <span class="n">BufferedImage</span><span class="o">.</span><span class="na">TYPE_4BYTE_ABGR</span><span class="o">);</span>
</span><span class='line'>          <span class="n">destBi</span><span class="o">.</span><span class="na">getGraphics</span><span class="o">().</span><span class="na">drawImage</span><span class="o">(</span><span class="n">img</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">ImageIO</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">destBi</span><span class="o">,</span> <span class="s">&quot;png&quot;</span><span class="o">,</span> <span class="n">destImgFile</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 根据图片路径 读取图片文件</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">BufferedImage</span> <span class="nf">readImage</span><span class="o">(</span><span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">BufferedImage</span> <span class="n">bi</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="n">bi</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">fileName</span><span class="o">));</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">bi</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 生成新的图片文件</span>
</span><span class='line'><span class="cm">  * @param im</span>
</span><span class='line'><span class="cm">  * @param formatName</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writeImage</span><span class="o">(</span><span class="n">RenderedImage</span> <span class="n">ri</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileformat</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">boolean</span> <span class="n">result</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">result</span> <span class="o">=</span> <span class="n">ImageIO</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">ri</span><span class="o">,</span> <span class="n">fileformat</span><span class="o">,</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">fileName</span><span class="o">));</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 转换图片格式 到 PNG</span>
</span><span class='line'><span class="cm">  * @param im</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writePNGImage</span><span class="o">(</span><span class="n">RenderedImage</span> <span class="n">ri</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">writeImage</span><span class="o">(</span><span class="n">ri</span><span class="o">,</span> <span class="s">&quot;PNG&quot;</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 转换图片格式 到 jpg</span>
</span><span class='line'><span class="cm">  * @param im</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writeJPEGImage</span><span class="o">(</span><span class="n">RenderedImage</span> <span class="n">ri</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">writeImage</span><span class="o">(</span><span class="n">ri</span><span class="o">,</span> <span class="s">&quot;JPEG&quot;</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * @param bi</span>
</span><span class='line'><span class="cm">  * @param destFile</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writeJPEGImage</span><span class="o">(</span><span class="n">BufferedImage</span> <span class="n">bi</span><span class="o">,</span> <span class="n">File</span> <span class="n">destFile</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">FileOutputStream</span> <span class="n">fos</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">destFile</span><span class="o">);</span>
</span><span class='line'>          <span class="n">JPEGImageEncoder</span> <span class="n">encoder</span> <span class="o">=</span> <span class="n">JPEGCodec</span><span class="o">.</span><span class="na">createJPEGEncoder</span><span class="o">(</span><span class="n">fos</span><span class="o">);</span>
</span><span class='line'>          <span class="n">encoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">bi</span><span class="o">);</span>
</span><span class='line'>          <span class="n">fos</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 转换图片格式 到 gif 不知到好用不</span>
</span><span class='line'><span class="cm">  * @param im</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writeGIFImage</span><span class="o">(</span><span class="n">RenderedImage</span> <span class="n">ri</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">writeImage</span><span class="o">(</span><span class="n">ri</span><span class="o">,</span> <span class="s">&quot;GIF&quot;</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 转换图片格式 到 BMP</span>
</span><span class='line'><span class="cm">  * @param im</span>
</span><span class='line'><span class="cm">  * @param fileName</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="nf">writeBMPImage</span><span class="o">(</span><span class="n">RenderedImage</span> <span class="n">ri</span><span class="o">,</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">writeImage</span><span class="o">(</span><span class="n">ri</span><span class="o">,</span> <span class="s">&quot;BMP&quot;</span><span class="o">,</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java 执行 Mac(Unix) 脚本命令]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/05/java-zhi-xing-mac-unix-jiao-ben-ming-ling/"/>
    <updated>2013-02-05T12:44:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/05/java-zhi-xing-mac-unix-jiao-ben-ming-ling</id>
    <content type="html"><![CDATA[<p>直接上代码：</p>

<!-- more -->




<figure class='code'><figcaption><span>UnixScript.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">bruce</span><span class="o">.</span><span class="na">pocket</span><span class="o">.</span><span class="na">tools</span><span class="o">.</span><span class="na">utils</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.BufferedWriter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.OutputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.OutputStreamWriter</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author Bruce Yang</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UnixScript</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 执行 mac(unix) 脚本命令~</span>
</span><span class='line'><span class="cm">  * @param command</span>
</span><span class='line'><span class="cm">  * @return</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">execute</span><span class="o">(</span><span class="n">String</span> <span class="n">command</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span><span class="o">[]</span> <span class="n">cmd</span> <span class="o">=</span> <span class="o">{</span><span class="s">&quot;/bin/bash&quot;</span><span class="o">};</span>
</span><span class='line'>      <span class="n">Runtime</span> <span class="n">rt</span> <span class="o">=</span> <span class="n">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">();</span>
</span><span class='line'>      <span class="n">Process</span> <span class="n">proc</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">proc</span> <span class="o">=</span> <span class="n">rt</span><span class="o">.</span><span class="na">exec</span><span class="o">(</span><span class="n">cmd</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// 打开流</span>
</span><span class='line'>      <span class="n">OutputStream</span> <span class="n">os</span> <span class="o">=</span> <span class="n">proc</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">();</span>
</span><span class='line'>      <span class="n">BufferedWriter</span> <span class="n">bw</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedWriter</span><span class="o">(</span><span class="k">new</span> <span class="n">OutputStreamWriter</span><span class="o">(</span><span class="n">os</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">bw</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">command</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">bw</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>          <span class="n">bw</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>          
</span><span class='line'>          <span class="cm">/** 真奇怪，把控制台的输出打印一遍之后竟然能正常终止了~ */</span>
</span><span class='line'>          <span class="n">readConsole</span><span class="o">(</span><span class="n">proc</span><span class="o">);</span>
</span><span class='line'>          
</span><span class='line'>          <span class="cm">/** waitFor() 的作用在于 java 程序是否等待 Terminal 执行脚本完毕~ */</span>
</span><span class='line'>          <span class="n">proc</span><span class="o">.</span><span class="na">waitFor</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">retCode</span> <span class="o">=</span> <span class="n">proc</span><span class="o">.</span><span class="na">exitValue</span><span class="o">();</span>
</span><span class='line'><span class="c1">//       System.err.println(&quot;unix script retCode = &quot; + retCode);</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">retCode</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">readConsole</span><span class="o">(</span><span class="n">proc</span><span class="o">);</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;UnixScriptUil.execute 出错了!!&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">retCode</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 读取控制命令的输出结果</span>
</span><span class='line'><span class="cm">  * 原文链接：http://lavasoft.blog.51cto.com/62575/15599</span>
</span><span class='line'><span class="cm">  * @param cmd 命令</span>
</span><span class='line'><span class="cm">  * @return 控制命令的输出结果</span>
</span><span class='line'><span class="cm">  * @throws IOException</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">readConsole</span><span class="o">(</span><span class="n">Process</span> <span class="n">process</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">StringBuffer</span> <span class="n">cmdOut</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>
</span><span class='line'>      <span class="n">InputStream</span> <span class="n">fis</span> <span class="o">=</span> <span class="n">process</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>
</span><span class='line'>      <span class="n">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">fis</span><span class="o">));</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">String</span> <span class="n">line</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">while</span> <span class="o">((</span><span class="n">line</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">cmdOut</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">line</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">getProperty</span><span class="o">(</span><span class="s">&quot;line.separator&quot;</span><span class="o">));</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'><span class="c1">//       System.out.println(&quot;执行系统命令后的控制台输出为：\n&quot; + cmdOut.toString());</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">cmdOut</span><span class="o">.</span><span class="na">toString</span><span class="o">().</span><span class="na">trim</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java Get classes In Package]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/05/java-get-classes-in-package/"/>
    <updated>2013-02-05T12:30:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/05/java-get-classes-in-package</id>
    <content type="html"><![CDATA[<p>直接上代码：</p>

<!-- more -->




<figure class='code'><figcaption><span>GetClassesInPackage.java  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">org</span><span class="o">.</span><span class="na">bruce</span><span class="o">.</span><span class="na">pocket</span><span class="o">.</span><span class="na">tools</span><span class="o">.</span><span class="na">utils</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.FileInputStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.jar.JarEntry</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.jar.JarInputStream</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * @author Bruce Yang</span>
</span><span class='line'><span class="cm"> * http://www.roseindia.net/java/java-get-example/get-classes-package.shtml</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">GetClassesInPackage</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="n">getJar</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="nf">getClasseNamesInPackage</span><span class="o">(</span><span class="n">String</span> <span class="n">jarName</span><span class="o">,</span> <span class="n">String</span> <span class="n">packageName</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">getJar</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Jar \&quot;&quot;</span> <span class="o">+</span> <span class="n">jarName</span> <span class="o">+</span> <span class="s">&quot;\&quot; for \&quot;&quot;</span> <span class="o">+</span> <span class="n">packageName</span> <span class="o">+</span> <span class="sc">&#39;\&quot;&#39;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">arrayList</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>      <span class="c1">// replaceAll 第一个参数是正则字符串，第二个参数是普通的替换字符串，不需要对正则进行转义~</span>
</span><span class='line'>      <span class="n">packageName</span> <span class="o">=</span> <span class="n">packageName</span><span class="o">.</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;\\.&quot;</span><span class="o">,</span> <span class="s">&quot;/&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">JarInputStream</span> <span class="n">jarFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JarInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">jarName</span><span class="o">));</span>
</span><span class='line'>          <span class="n">JarEntry</span> <span class="n">jarEntry</span><span class="o">;</span>
</span><span class='line'>          
</span><span class='line'>          <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">jarEntry</span> <span class="o">=</span> <span class="n">jarFile</span><span class="o">.</span><span class="na">getNextJarEntry</span><span class="o">();</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">jarEntry</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="k">break</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">((</span><span class="n">jarEntry</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">startsWith</span><span class="o">(</span><span class="n">packageName</span><span class="o">))</span>
</span><span class='line'>                      <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">jarEntry</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">endsWith</span><span class="o">(</span><span class="s">&quot;.class&quot;</span><span class="o">)))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">arrayList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">jarEntry</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">replaceAll</span><span class="o">(</span><span class="s">&quot;/&quot;</span><span class="o">,</span> <span class="s">&quot;.&quot;</span><span class="o">));</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">arrayList</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">jarPath</span> <span class="o">=</span> <span class="s">&quot;/Users/user/Desktop/JavaDynamicComiple.jar&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">pkgPath</span> <span class="o">=</span> <span class="s">&quot;org.bruce.pocket.tools.items&quot;</span><span class="o">;</span>
</span><span class='line'>      <span class="n">List</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">GetClassesInPackage</span><span class="o">.</span><span class="na">getClasseNamesInPackage</span><span class="o">(</span><span class="n">jarPath</span><span class="o">,</span> <span class="n">pkgPath</span><span class="o">);</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Found: &quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">item</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">item</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 代码高亮]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/03/octopress-dai-ma-gao-liang/"/>
    <updated>2013-02-03T17:43:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/03/octopress-dai-ma-gao-liang</id>
    <content type="html"><![CDATA[<p>原文链接：<br/>
<a href="http://xiongbupt.github.com/blog/2012/06/08/octopressdai-ma-gao-liang/">http://xiongbupt.github.com/blog/2012/06/08/octopressdai-ma-gao-liang/</a><br/>
现在博客已经基本搭建完毕，下面对从<code>jekyll bootstrap</code>搬迁到做一个基本介绍。首先是代码高亮部分，下面的文章主要来自于<a href="http://octopress.org/docs/blogging/code/" title="Octopress代码高亮">Octopress关于代码高亮部分</a>。文章主要是对上面的内容进行一个简单的翻译，以及简单介绍从<code>jekyll bootstrap</code>上面的代码移动到<code>Octopress</code>上面做一个简单的介绍。</p>

<!-- more -->


<h2>共享代码片段</h2>

<p>在博客上共享代码片段应该是简单的，并且代码应该具有简单的高亮功能。Octopress也具有这种功能，在<code>jekyll</code>上，其使用的是<code>pygment</code>来实现代码高亮的功能，Octopress实现的更好。在Octopress上面有下面几种选择：</p>

<ul>
<li>使用<a href="http://ethanschoonover.com/solarized" title="Solarized高亮">Solarized高亮</a>主题来实现（该方法未尝试，实际上不知道怎么弄，只是凭借个人的猜测）。</li>
<li>使用Gist的代码内嵌。</li>
<li>从自己的文件系统中插入代码片段，该代码具有下载链接。</li>
<li>简单的内嵌代码块带有<code>&lt;div class='bogus-wrapper'&gt;&lt;notextile&gt;&lt;figure&gt;</code>和<code>&lt;figcaption&gt;</code>和可选的下载链接。</li>
<li>Pygments caching（似乎还是使用Pygnment来实现代码高亮）。</li>
<li>通过javascript脚本使得代码具有行号。</li>
</ul>


<h3>Solarized高亮</h3>

<p>这部分内容自己没有尝试，待更新。</p>

<h3>反引号的代码块</h3>

<p>同时使用<code>backtick_codelock</code>过滤器，可以使用Github的最适用的代码高亮块。使用三个反引号开始，后面跟着一个空格，接下来是高亮语言，具体语法如下所示：</p>

<pre><code>  ``` [language] [title] [url] [link text]
  code snippet
  ```
</code></pre>

<p>按照上述方式便可以对相应的代码块进行高亮，如下面的例子。</p>

<h4>example1（原文)</h4>

<pre><code> ```
 $sudo give me a hug
 ```
</code></pre>

<p>按照上面的方式在文本中输入之后，产生的效果如下：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$sudo give me a hug</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>example2带有说明和连接</h4>

<pre><code> ``` ruby Discover if a number is prime http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/ Source Article
 class Fixnum
   def prime?
     ('1' * self) !~ /^1?$|^(11+?)\1+$/
   end
 end
 ```
</code></pre>

<p>产生的代码片段如下：</p>

<figure class='code'><figcaption><span>Discover if a number is prime</span><a href='http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Fixnum</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prime?</span>
</span><span class='line'>    <span class="p">(</span><span class="s1">&#39;1&#39;</span> <span class="o">*</span> <span class="nb">self</span><span class="p">)</span> <span class="o">!~</span> <span class="sr">/^1?$|^(11+?)\1+$/</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Gist代码内嵌</h3>

<p>当使用这种方式的代码高亮时，仅仅需要的是gist的id，对gist不了解的可以上google搜索下，个人的理解是，gist对每段用户上传的代码段都会有一个对应的id，当用户给出对应的代码的id后，将会从gist上面下载对应的已经高亮的html文件，最终在用户的页面上显示出来。</p>

<h4>语法</h4>

<pre><code> { % gist gist_id [filename] %}
</code></pre>

<h4>example</h4>

<pre><code> { % gist 996818 %}
</code></pre>

<p>上述代码的片段在Octopress中的markdown文件中输入之后，得到的效果如下：</p>

<div><script src='https://gist.github.com/996818.js'></script>
<noscript><pre><code>@@ -590,7 +590,7 @@ class SpritesTest &lt; Test::Unit::TestCase
  it &quot;should generate a sprite from nested folders&quot; do
    css = render &lt;&lt;-SCSS
-     @import &quot;nested/*.png&quot;;
+     @import &quot;nested/**/*.png&quot;;
      @include all-nested-sprites;
    SCSS
    assert_correct css, &lt;&lt;-CSS</code></pre></noscript></div>


<p>如果一个gist的id对应有多个文件，这时需要对想要高亮的文件添加文件名，具体语法如下所示：</p>

<pre><code>  { % gist 1059334 svg_bullets.rb %}
  { % gist 1059334 usage.scss %}
</code></pre>

<p>总体来说，gist代码高亮是很简单的，只是需要将代码上传到<a href="https://gist.github.com/">gist</a>，然后获取相应的id然后按照上面的语法进行设置即可。只是每次在写博客时，都需要对博客文章中的代码拷贝到网址上生成，在没有网时，代码高亮比较麻烦。</p>

<h3>从本地文件中引入代码</h3>

<p>这种方式在Arch上面有个小问题，在Arch上的报错如下所示：</p>

<figure class='code'><figcaption><span>Arch error</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Building site: <span class="nb">source</span> -&gt; public
</span><span class='line'>  File <span class="s2">&quot;&lt;string&gt;&quot;</span>, line 1
</span><span class='line'>    import sys; print sys.executable
</span><span class='line'>                        ^
</span><span class='line'>SyntaxError: invalid syntax
</span></code></pre></td></tr></table></div></figure>


<p>上网搜索之后在<a href="http://blog.gonzih.org/blog/2011/09/21/fix-octopress-pygments-error-on-arch-linux/">该网址</a>发现解决方法。 <br/>
这种方式需要使用python2来完成代码高亮的操作，由于Arch的python指向的是python3，而python3无法完成该功能，因此需要在<code>plugin</code>文件夹中再添加一个新文件，指定在<code>Octopress</code>运行时使用的是python2，具体增加的文件内容如下所示，文件的名字为<code>ruby_python_arch_linux_fix.rb</code><br/>
File /Users/user/git/Octopress/source/downloads/code/ruby/ruby_python_arch_linux_fix.rb could not be found</p>

<p>在完成该操作之后，仍然报错，得到如下错误：</p>

<figure class='code'><figcaption><span>Error message</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>LoadError: Could not open library <span class="s1">&#39;lib.so&#39;</span>: lib.so: cannot open shared object file: No such file or directory
</span></code></pre></td></tr></table></div></figure>


<p>参考<a href="https://github.com/tmm1/pygments.rb/issues/10">该网址</a>的由<code>elidos</code>提出的解决方法可以知道是<code>rubypython</code>自身的bug，需要修复，具体修改文件在Arch上面为<code>/usr/lib/ruby/gems/1.9.1/gems/rubypython-0.5.3/lib/rubypython/pythonexec.rb</code>，修改位置大概在126行左右，修改后的内容如下所示：</p>

<figure class='code'><figcaption><span>fix the rubypython bug</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">--126 %x(#{@python} -c &quot;#{command}&quot;).chomp if @python</span>
</span><span class='line'><span class="gi">++126 %x(&quot;#{@python} -c #{command}&quot;).chomp if @python</span>
</span></code></pre></td></tr></table></div></figure>


<p>完成该修改之后，便可以使用这种包含代码的方式来进行代码高亮。 <br/>
使用这种方式的语法也参见<a href="http://octopress.org/docs/blogging/code/" title="Octopress代码高亮">octopress手册</a>，此处不再进行详细说明，这种方式的代码是单独存放成一个文件保存在本地系统下，当代码长度较长，又不想放在博客的正文中时，使用该方法比较好。<br/>
简单记录下这种方式的语法如下所示：（目前不知道为什么，在octopress中输入{ %的方式都会进行代码解析，所以上面的{ %都进行了添加了<code></code>来取消，在实际文章中输入的时候，将<code></code>取消掉）</p>

<pre><code>{ % include_code [title] [lang:language] path/to/file %}
</code></pre>

<p>其中的中括号的内容是可选的，具体语言便是这种方式，当需要强制高亮时，需要指定<code>lang:</code>这个参数，很好用。</p>

<h3>使用Code Block的方式</h3>

<p>目前自己的博客这种方式用的比较多，前面写的文章目前全部修改成为了这种方式，感觉这种方式和<code>pygnment</code>的方式差不多，之前全部采用的是<code>pygnment</code>的方式，利用正则表达式把所有文章的代码高亮全部改成了使用<code>code block</code>。它的具体语法如下所示：（与<code>pygnment</code>很相似，指定语言即可）</p>

<pre><code>  { % codeblock [title] [lang:language] [url] [link text] %}
  code snippet
  { % endcodeblock %}
</code></pre>

<p>和之前描述的类似，中括号的内容是可选的。</p>

<h4>使用正则表达式替换</h4>

<p>这种方式可以替换博客内容，使得博客中所有文章的代码高亮使用<code>Code Block</code>。自己使用的是<code>sed</code>来完成的操作，似乎都没有用到正则表达式，只是简单的替换，做个简单的记录吧。</p>

<h5>替换方法</h5>

<p>进入到<code>source/_posts</code>目录下，在终端输入如下代码：</p>

<figure class='code'><figcaption><span>Sed查看文章代码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sed -n <span class="s1">&#39;s/\(\ highlight\ \)/\1/p&#39;</span> *
</span></code></pre></td></tr></table></div></figure>


<p>上面将会把当前目录下的含有{\% highlight的文件的那行都显示出来，中间会将含有该特殊字符的行都打印出来，中间可以看到自己的博客内容都用到了哪些类型文件的语法高亮，将对应的代码高亮进行替换即可。<br/>
其实这种方式就是简单的搜索替换，应该算不上使用正则表达式了，只是写下来做下笔记了，防止以后再用具体操作如下所示：</p>

<figure class='code'><figcaption><span>Sed替换文件内容</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sed -i <span class="s1">&#39;s/\(\ highlight\ bash %}\)/\ codeblock\ lang:bash\ %}/&#39;</span> *
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 中的 SEO]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/03/octopress-zhong-de-seo/"/>
    <updated>2013-02-03T16:12:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/03/octopress-zhong-de-seo</id>
    <content type="html"><![CDATA[<p>原文链接：<br/>
<a href="http://codemacro.com/2012/09/06/octopress-seo/">loop in codes &#8211; Kevin Lynx BLOG</a><br/>
Octopress 默认为每个页面添加 meta description，其内容为当前文章的前150个字符，<br/>
如果是首页就会是第一篇文章的前 150 个字符。这里主要通过增加 meta keywords 来提高 SEO。</p>

<!-- more -->


<h2>为每篇文章增加 keywors 和 description</h2>

<p>就像我的这篇博客，这下文章头得填很多数据了，有点麻烦：</p>

<figure class='code'><figcaption><span>code snippet 1 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "Octopress中的SEO"
</span><span class='line'>date: 2012-09-06 19:02
</span><span class='line'>comments: true
</span><span class='line'>categories: tips
</span><span class='line'>tags: [tips, octopress]
</span><span class='line'>keywords: seo, octopress
</span><span class='line'>description: Octopress默认为每个页面添加`meta description`，其内容为当前文章的前150个字符，如果是首页就会是第一篇文章的前150个字符。这里主要通过增加`meta keywords`来提高SEO。
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<p>这样，每篇文章页面头就会自动增加 meta keywords 项，description也会使用这里填的，<br/>
而不是自动为文章前若干个字符。这个功能的实现在 <code>_includes/head.html</code> 中。</p>

<figure class='code'><figcaption><span>code snippet 2  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;author&quot;</span> <span class="na">content=</span><span class="s">&quot;Kevin Lynx&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;description&quot;</span> <span class="na">content=</span><span class="s">&quot;Octopress默认为每个页面添加`meta description`，其内容为当前文章的前150个字符，如果是首页就会是第一篇文章的前150个字符。这里主要通过增加`meta keywords`来提高SEO。 &quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;keywords&quot;</span> <span class="na">content=</span><span class="s">&quot;seo, octopress&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>为页面 (Page) 增加 keywords</h2>

<p>上面只是修正了每篇博客页面的 meta 信息，octopress 中还有几个页面需要修正，例如首页，<br/>
这个可以通过修改 <code>_includes/head.html</code> 来完成。替换相关内容为以下：</p>

<figure class='code'><figcaption><span>code snippet 3  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;author&quot;</span> <span class="na">content=</span><span class="s">&quot;{{ site.author }}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>{% capture description %}{% if page.description %}{{ page.description }}{% elsif site.description %}{{ site.description }}{%else%}{{ content | raw_content }}{% endif %}{% endcapture %}
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;description&quot;</span> <span class="na">content=</span><span class="s">&quot;{{ description | strip_html | condense_spaces | truncate:150 }}&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>{% if page.keywords %}<span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;keywords&quot;</span> <span class="na">content=</span><span class="s">&quot;{{ page.keywords }}&quot;</span><span class="nt">&gt;</span>{%else%}<span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;keywords&quot;</span> <span class="na">content=</span><span class="s">&quot;{{ site.keywords }}&quot;</span><span class="nt">&gt;</span>{% endif %}
</span></code></pre></td></tr></table></div></figure>


<p>如果页面没有提供 keywords 或者 description 的话，<br/>
就使用 site 里的设置，也就需要修改 <code>_config.yml</code>：</p>

<figure class='code'><figcaption><span>code snippet 4 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>description: loop in codes, Kevin Lynx blog
</span><span class='line'>keywords: c/c++, mmo, game develop, lisp, ruby, lua, web development</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为 Octopress 添加查看访问量的功能]]></title>
    <link href="http://yang3wei.github.com/blog/2013/02/03/wei-octopress-tian-jia-cha-kan-fang-wen-liang-de-gong-neng/"/>
    <updated>2013-02-03T16:03:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/02/03/wei-octopress-tian-jia-cha-kan-fang-wen-liang-de-gong-neng</id>
    <content type="html"><![CDATA[<p>原文链接：<a href="http://colors4.us/blog/2012/01/08/octopressbo-ke-cong-ling-kai-shi-iii/">sourrabbit &amp; linpx</a><br/>
我在看了<a href="http://www.whatwherewhy.me/colophon/">这个</a>网页后，发现我还可以添加网站分析，毕竟是自己努力出来的东西，<br/>
看看大伙是否有兴趣访问还是不错的，不过很多情况是远逊于预期。:)</p>

<!--  more -->


<p>先于 <code>Google Analytics</code> 开通和自己网站相关的服务，<br/>
比如登记自己的网址，取得 GA 的 <code>Track ID</code>，应该如该样式 <code>UA-28584XXX-X</code>.
修改 <code>_config.yml</code> 最后部分，将 ID 置于 <code>google_analytics_tracking_id:</code>项目之后，rake一下就行了。<br/>
之后进入 GA 网站看 report 吧，你就会知道何时多少人访问过你的网站。</p>
]]></content>
  </entry>
  
</feed>
