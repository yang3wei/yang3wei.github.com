<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress相关 | yang3wei的专栏]]></title>
  <link href="http://yang3wei.github.com/blog/categories/octopress相关/atom.xml" rel="self"/>
  <link href="http://yang3wei.github.com/"/>
  <updated>2013-01-31T21:11:19+08:00</updated>
  <id>http://yang3wei.github.com/</id>
  <author>
    <name><![CDATA[yang3wei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[灾后重建 octopress 博客遇到的问题]]></title>
    <link href="http://yang3wei.github.com/blog/2013/01/31/zai-hou-zhong-jian-octopress-bo-ke-yu-dao-de-wen-ti/"/>
    <updated>2013-01-31T16:58:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/01/31/zai-hou-zhong-jian-octopress-bo-ke-yu-dao-de-wen-ti</id>
    <content type="html"><![CDATA[<p>今天上午十点的时候试了一下 <code>git pull</code> 命令，<br/>
结果导致 <code>octopress</code> 博客在我本地的目录乱成了一团浆糊，<br/>
因为对 <code>git</code> 的了解不是很充分，所以在多番努力修复无果之后，我决定重新洗牌。</p>

<!-- more -->


<p>话说 <code>git</code> 的分支、合并什么的确实有些不容易理解~<br/>
其实 <code>blog</code> 还是能够正常使用的，但是我本地 <code>octopress</code> 的目录被完全破坏掉了，<br/>
失去了我对它的掌控，另外就是，在提交的时候老提示类似如下的信息</p>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
nothing to commit (working directory clean)</code></pre>


<p>我是一个追求完美的人，这些个多余的东西让我浑身不自在，于是我有了 <code>重装</code> 的想法，<br/>
重装其实也有其他的用意，比如说，让我对架设 octopress 博客的流程更加轻车熟路些。<br/>
因为之前走过一遍，所以我在做费时评估时是准备在 10 分钟内搞定的。</p>

<p>但是现实往往是那么地不可预料，这不，在重装的过程中又遇到了一些问题，- -、</p>

<h3>第一步，清除所有陈旧的东西</h3>

<p>将 <code>octopress</code> 博客的本地目录拽入垃圾箱；<br/>
在 <code>github</code> 里面删除 <code>yang3wei.github.com</code> 博客仓库。<br/>
ok，就这么多！</p>

<h3>第二步，在 github 上面重建 yang3wei.github.com 仓库</h3>

<p>这个不多说，<code>github</code> 官网上面有做全方位地向导。</p>

<h3>第三步，重新布置 octopress 博客的本地目录</h3>

<p>这个也没什么好说的，顺着 <code>octopress</code> 主页底部的 <code>start here</code> 链接一路往下走即可。</p>

<p>但是这里面有猫腻，如果处理的不好，将导致管理 octopress 博客出现一些混乱！<br/>
这里说一下存在问题的处理方式：<br/>
按照 <code>octopress</code> 主页上面介绍的搭建流程，<br/>
我开启一个 <code>Termimal</code> 窗口，直接在里面粘贴并执行如下的命令：<br/>
<code>git clone git://github.com/imathis/octopress.git octopress</code><br/>
<code>Terminal</code> 窗口开启的时候默认的所在目录为 <code>~</code>，<br/>
上面的命令会将 <code>octopress</code> 的安装文件克隆到本地的 <code>~/octopress</code> 目录。<br/>
之后我规规矩矩地执行下列命令：<code>cd octopress</code>、<code>rake install</code>，</p>

<p>然后我点击 <code>Next Steps</code> 下面的 <code>Set up deployment</code> 链接进入到创建 <code>github</code> 博客仓库的环节。<br/>
按照 <code>octopress</code> 给出的提示，我在 <code>github</code> 里面创建了一个名为 <code>yang3wei.github.com</code> 的仓库。
之后我复制好 <code>github</code> 所生成的命令文本：</p>

<pre><code>touch README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/yang3wei/yang3wei.github.com.git
git push -u origin master
</code></pre>


<p>二话不说跑到之前打开的那个 <code>Terminal</code> 窗口里面就粘贴执行了，<br/>
但在执行这组命令时并没有想象中的顺利，在执行倒数第二行命令的时候出现了故障：<br/>
<code>fatal: remote origin already exists</code><br/>
<code>googling</code> 一番以后找到问题的解决方案，在执行倒数第二行命令前先执行一遍如下命令：<br/>
<code>git remote rm origin</code><br/>
然后，依次粘贴执行前述命令块儿的最后两条命令，其间没有再生出其他的枝节。<br/>
问题解决方案的相关链接：<a href="http://stackoverflow.com/questions/10904339/github-fatal-remote-origin-already-exists">Github “fatal: remote origin already exists”</a></p>

<p>做完了上面的操作，就算是将 <code>github</code> 上 <code>yang3wei.github.com</code> 仓库的本地目录给布置好了。<br/>
之后点进 <a href="http://octopress.org/docs/deploying/github/">Deploying to Github Pages</a> 链接，继续按照提示往下走，<br/>
我在之前提到的那个 <code>Terminal</code> 窗口里面再次粘贴并执行如下命令块儿：</p>

<pre><code>rake setup_github_pages
rake generate
rake deploy
git add .
git commit -m "first commit"
git push origin source
</code></pre>


<p>在依次执行到最后一条命令 <code>git push origin source</code> 时，<br/>
问题再次降临，本地提交的数据死活推不进 <code>github</code> 服务器。<br/>
我用 <code>git status</code> 和 <code>git branch -a</code> 命令查看了一下当前的分支状态和所有的分支条目，<br/>
发现 <code>source</code> 分支根本就不存在，当前所处的也只是 <code>master</code> 分支。<br/>
我感到非常的不可思议，因为在我之前顺利搭建好 octopress 博客的时候，<br/>
我是一直都工作在 <code>source</code> 分支下面的，现在却仅仅只有一个 <code>master</code> 分支！<br/>
我重复删除创建实践了很多次，最终却都只得到上述的结局。<br/>
有几次我忍不住按照 git 给出的提示执行了 <code>git pull</code> 命令，结果一下就完蛋了：<br/>
静态页的数据直接被拉到 <code>octopress</code> 根目录，把根目录弄得混乱的一塌糊涂。</p>

<h3>真相在哪里？</h3>

<p>聪明的看官可能已经发现问题的所在了！<br/>
我不明所以地将 <code>yang3wei.github.com</code> 仓库的本地目录和 <code>~/octopress</code> 目录重叠了起来。<br/>
正是因为这一点导致了我 <code>n + 1</code> 次的重建失败！正确的处理方法：<br/>
<strong>使用除 <code>~/octopress</code> 目录之外的其他目录作为 <code>yang3wei.github.com</code> 的本地目录。</strong><br/>
庆幸我是一个执着的人，没有 <code>n + 1</code> 次的失败，哪有第 <code>n + 2</code> 次的成功？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[(扩充)Octopress 怎么开启评论功能]]></title>
    <link href="http://yang3wei.github.com/blog/2013/01/30/zhuan-zai-octopress-zen-yao-kai-qi-ping-lun-gong-neng/"/>
    <updated>2013-01-30T18:09:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/01/30/zhuan-zai-octopress-zen-yao-kai-qi-ping-lun-gong-neng</id>
    <content type="html"><![CDATA[<p>原文链接：<br/>
<a href="http://gangmax.me/blog/2012/01/20/how-to-use-disqus-in-octopress/" title="Blog of GangMax">http://gangmax.me/blog/2012/01/20/how-to-use-disqus-in-octopress/</a></p>

<h3>1.Octopress 默认支持 disqus，开启即可</h3>

<!-- more -->


<p>这两天我一直想给 octopress 加入评论功能。<br/>
于是我尝试搜索 <code>disqus octopress jekyll</code> 这样的关键字，但是没有找到具体的做法。
后来我想到：可以查看一个具有评论功能的 github octopress 实例代码，看看别人是怎么做的，比如<a href="https://github.com/roylez/roylez.github.com">这个</a>。</p>

<p>我首先查看 <code>source/_layout/post.html</code>，看到里面有处理 disqus 的相关代码。<br/>
我的第一反应是我应该在我自己的对应文件里面也加上相应的代码。<br/>
但是随即发现我的文件中已经有了一模一样的代码。</p>

<p>也就是说，其实 <code>octopress/jekyll</code> 默认就有这些代码。<br/>
这说明 octopress 自身就支持 disqus，<br/>
可能这就是为什么没有人评论该怎么在 octopress 里面加入 disqus 支持的原因。</p>

<p>于是打开 <code>_config.yml</code>，找到了 disqus 相关的配置项，修改即可：</p>

<pre><code>disqus_short_name: your_disqus_short_name
disqus_show_comment_count: true</code></pre>


<p>当然，前提是你需要先注册一个 <a href="http://www.disqus.com/">disqus</a> 帐号，这个就不用我多说了。</p>

<h3>2.一个要注意的地方</h3>

<p>原文请参看如下链接：<br/>
<a href="http://www.ducea.com/2012/11/12/disqus-comments-not-visible-in-octopress/" title="MDLog:/sysadmin">http://www.ducea.com/2012/11/12/disqus-comments-not-visible-in-octopress/</a>
大意就是在更改 octopress 配置文件 _config.yml 时，<br/>
下面两者有很大的区别，后者多加了一个斜杠将直接导致看不见 disqus 的评论内容！
<strong><code>url: http://yang3wei.github.com</code>  <br/>
<code>url: http://yang3wei.github.com/</code></strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[(扩充)为 octopress 添加标签云]]></title>
    <link href="http://yang3wei.github.com/blog/2013/01/30/zhuan-zai-wei-octopress-tian-jia-biao-qian-yun/"/>
    <updated>2013-01-30T02:54:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/01/30/zhuan-zai-wei-octopress-tian-jia-biao-qian-yun</id>
    <content type="html"><![CDATA[<p>原文链接：<a href="http://codemacro.com/2012/07/18/add-tag-to-octopress/" title="loop in codes">http://codemacro.com/2012/07/18/add-tag-to-octopress/</a><br/>
同添加 <code>category list</code> 一样，网络上有很多方法，这里列举一种。<br/>
首先将以下两个项目克隆到本地：</p>

<pre><code>https://github.com/robbyedwards/octopress-tag-pages 
https://github.com/robbyedwards/octopress-tag-cloudclone
</code></pre>


<p>这两个项目分别用于产生 <code>tag page</code> 和 <code>tag cloud</code>。<br/>
针对这两个插件，需要手工复制一些文件到你的 octopress 目录。</p>

<!-- more -->


<h3>1.octopress-tag-pages</h3>

<p>复制 <code>tag_generator.rb</code> 到 <code>/plugins</code> 目录。<br/>
复制 <code>tag_index.html</code> 到 <code>/source/_layouts</code> 目录。<br/>
复制 <code>tag_feed.xml</code> 到 <code>/source/_includes/custom/</code> 目录。<br/>
其他文件就不需要复制了，都是些例子。</p>

<h3>2.octopress-tag-cloud</h3>

<p>复制 <code>tag_cloud.rb</code> 到 <code>/plugins</code> 目录。<br/>
复制以下代码到 <code>/source/_includes/custom/asides/tags.html</code>。<br/>
<strong>注意：先去掉 % 前面的反斜杠</strong></p>

<pre><code>&lt;section&gt;
    &lt;h1&gt;Tags&lt;/h1&gt;
    &lt;ul class="tag-cloud"&gt;
        {\% tag_cloud font-size: 100-210%, limit: 49, style: para \%}
    &lt;/ul&gt;
&lt;/section&gt;
</code></pre>


<p><code>tag_cloud</code> 的参数中：<br/>
<code>style: para</code> 指定不使用 <code>li</code> 来分割；<br/>
<code>limit</code> 限定 10 个 tag；<br/>
<code>font-size</code> 指定 tag 的大小范围，具体参数参看官方文档。</p>

<p>最后，当然是在 <code>_config.yml</code> 的 <code>default_asides</code> 中添加这个 <code>tag cloud</code> 到导航栏，例如：</p>

<pre><code>default_asides: [asides/category_list.html, asides/recent_posts.html, custom/asides/tags.html]</code></pre>


<h3>3.本人扩充: 有一个要注意的地方</h3>

<p>结合自身经历，我按照前文所述操作且核对了很多次，<br/>
发现在 <code>rake generate</code> 和 <code>rake preview</code> 以后，<br/>
在预览页面却依然无法得到正常的结果，具体表现如下：<br/>
标签云确实是出现在了右栏里面，不过当我点击某个 tag 的时候，<br/>
跳转到的却不是有效的地址，而仅仅只是一个 tag 关键词！<br/>
灰常地荒谬，灰常地震惊，我甚至一度思忖，作者是不是故意在和我开玩笑。<br/>
经历了艰辛地排查，终于我在 <code>firebug</code> 下面发现了一些蛛丝马迹：<br/>
常规情况下 tag 对应的地址应该是 <code>/tags/关键字</code>，<br/>
但是我发现在我的站点上面却不是这样的，仅仅只有 <code>//关键字</code>，<br/>
体现在浏览器里面就仅仅是一个 tag 关键字了，因为两个斜杠都被滤掉了~<br/>
发现了问题的症结以后，我就跑到 _config.yml 配置文件去中查看，<br/>
并且拿自己的配置文件和其他正常人的配置文件作对比，果然发现了一些猫腻：<br/>
我的配置文件中少了一行配置：<code>tag_dir: tags</code>，也算是歪打正着了，<br/>
把这一行配置加进去之后，执行 <code>rake generate</code> 和 <code>rake preview</code> 命令，<br/>
转到浏览器里面键入 <code>localhost:4000</code> 进行查看，标签云的功能总算是回归正常了~</p>

<p>谈一谈我对此的感受吧：<br/>
之前我也没有删掉过 tag_dir 这一行配置，也就是说 octopress 本身就没有包含这一行配置~<br/>
我很奇怪为什么其他人竟然都没有提出甚至谈及这个问题，<br/>
难道是 octopress 在升级的过程中刚才将这一行配置去掉？<br/>
不论如何，此次经历还是让我相当的不愉快，我花了至少五个小时来解决这个问题！！<br/>
这让我难以接受，要知道此时此刻我本该已经躺在床上呼呼大睡了！<br/>
直言不讳吧，虽然拿 MacVim 写 markdown 很舒服，但我不得不承认：<br/>
octopress 毕竟还是没能达到我心目中理想的高度，此次就是不成熟的一个典型体现~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 新增博文时要注意的地方]]></title>
    <link href="http://yang3wei.github.com/blog/2013/01/28/octopress-xin-zeng-bo-wen-shi-yao-zhu-yi-de-di-fang/"/>
    <updated>2013-01-28T22:11:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/01/28/octopress-xin-zeng-bo-wen-shi-yao-zhu-yi-de-di-fang</id>
    <content type="html"><![CDATA[<p>用 MacVim 的请注意，执行 rake deploy 的时候，<br/>
切记要将 MacVim 正在编辑的 markdown 博文文件保存并关闭掉~<br/>
因为在 deploy 的时候会对 source/_posts 目录下的文件执行 cp 操作~<br/>
如果 MacVim 当前正在编辑博文的 markdown 文件的话，<br/>
很有可能在执行 rake deploy 的时候给予失败的提示~<br/>
究其根源就是因为 MacVim 锁定了某个文件（swp 格式的），<br/>
然后对 rake deploy 命令的执行造成了阻碍~</p>

<!-- more -->


<p>
不知道其他的版本的 vim（vim、gvim，etc） 会不会也受到这个问题的影响~<br/>
我在 google 上面搜寻了一下这个问题，没有找到什么有用的资料~<br/>
能够解决掉这个问题还是占了很大的运气成分的，<br/>
刚开始我还误以为是 markdown、md 后缀带来的这个问题~<br/>
因为在我将 source/_posts 目录下的所有博文文件后缀由 markdown 改为 md 以后，<br/>
发现又能正常的执行 rake deploy 命令了~</p>

<h2>关于 swp 文件</h2>

<p>1.swp 文件是 vim 防止终端崩溃后恢复文件用的。<br/>
每次当文件内容被修改而没有用 :w 保存的时候，都会有这么一个文件，<br/>
这样可以解决多个用户编辑同一个文件，或忘记存盘而先关了终端的情况</p>

<p>2.兄弟，那可是一个好东东啊，你还嫌它？<br/>
我在 solaris 中误删了刚写的 shell 脚本，只有哭的份！</p>

<h2>octopress 发布博文的常规流程</h2>

<p>作为一个过来人，我觉得这是一个非常有必要记录一下的问题！<br/>
发布第一篇博文时该怎么弄我是咨询过 google 的~<br/>
我最初的认识是这样的：<br/>
在 Terminal 里面，通过 <code>cd ~/octopress</code> 命令切换到 octopress 的默认目录~<br/>
然后，执行 <code>rake new_post["博文标题"]</code> 命令，<br/>
它的作用是在 ~/octopress/source/_posts 目录下新建一个 “日期_时间_博文标题.markdown” 文件~<br/>
接下来，通过 MacVim 等编辑器按照 markdown 的语法在上述新建的文件中撰写博文~<br/>
撰写完毕之后再依次执行 <code>rake generate</code>、<code>rake preview</code>、<code>rake deploy</code> 命令<br/>
它们的作用分别是：<br/>
由 markdown 文件生成静态 html 页面，<br/>
开启本地服务器提供预览（访问 <code>http://localhost:4000</code>），<br/>
将静态页面部署到 github 博客服务器供他人访问。<br/>
其中，rake preview 命令是否执行是可选的，<br/>
如果你足够自信的话，完全可以跳过这一步直接进行部署~</p>

<p>这种流程是没有问题的，不过效率比较低！<br/>
假如在 _posts 目录中有 800 个 markdown 文件，<br/>
那么在执行 rake generate 命令时，会重新解析所有的 markdown 文件~<br/>
这是对生命和电能的巨大浪费，可以使用如下步骤来提升效率：<br/>
在撰写博文伊始就在 Terminal 中执行 rake preview 命令开启本地预览功能，<br/>
它会实时监控 _posts 目录，你的新增、保存动作都会被捕捉到，<br/>
最最重要的一点是，你每执行一次保存操作，更新的内容都能在浏览器中有所反映，<br/>
待工作完毕之后，你只需要部署、提交源文件一次就行了，大大地提高了撰写博文的效率！</p>

<h2>twitter 被屏蔽导致持续请求的问题</h2>

<p>国内用 octopress 架设好博客以后，<br/>
因为天朝屏蔽了 twitter，而 octopress 又默认启用了 twitter，<br/>
所以会导致一个问题（我用的是 mac 平台的 chrome 浏览器）：<br/>
博客页面打开时，标签页里面的圆圈要转动很久才停止，<br/>
浏览器左下角呈现字样：<br/>
<strong>Waiting for platform.twitter.com...</strong></p>

<p>怎么解决这个问题呢？<br/>
打开 octopress 所在的目录，编辑 _config.yml 文件，<br/>
将 <code>twitter_follow_button</code> 和 <code>twitter_tweet_button</code> 的值设置为 false 即可！</p>

<h2>谈一下自己对 markdown 格式的感受：</h2>

<p>markdown 格式用来写博文真的挺好的，没有糊里花哨的颜色料理，<br/>
可以很好的区分开代码和文字，加粗样式什么的用起来也挺方便灵活的~<br/>
给我的感觉就是：方便实用，精炼简洁，没有一丝冗余之感~<br/>
另外，我非常喜欢 octopress 的默认主题，简洁而大气，<br/>
我想我应该不会为了避免撞衫而去寻找其他的主题了，有了这个我就已经感到非常满足了~<br/>
此刻我用 MacVim 写着 markdown 格式的博文，这感觉真是爽透了~<br/>
从未曾想象此刻能如此轻松惬意地书写着博文，这美妙的初体验我将铭记于心！<br/>
最后的最后，此种方式的博文书写，本地机器和 github 服务器人手一份拷贝，<br/>
再也不用担心数据丢失的问题了~</p>

<h2>后记：  </h2>

<p>历经磨难终于在 github 上面架好了自己的 blog，灰常开心啊~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[(转载)我为什么要从wordpress转到octopress]]></title>
    <link href="http://yang3wei.github.com/blog/2013/01/03/zhuan-zai-wo-wei-shi-yao-yao-cong-wordpress-zhuan-dao-octopress/"/>
    <updated>2013-01-03T13:44:00+08:00</updated>
    <id>http://yang3wei.github.com/blog/2013/01/03/zhuan-zai-wo-wei-shi-yao-yao-cong-wordpress-zhuan-dao-octopress</id>
    <content type="html"><![CDATA[<p>原文链接：<a href="http://zilongshanren.com/blog/2013/01/03/migrate-to-octopress/" title="子龙山人">http://zilongshanren.com/blog/2013/01/03/migrate-to-octopress/</a>
<img class="right" src="/images/posts/octpress-logo.png" width="300" height="300"></p>

<h2>我的博客写作历史</h2>

<p>我是从2011年3月开始写博客的，博客主要是分享学习cocos2d、以及iOS游戏开发的一些内容。目前，该博客已经超过80万的访问量了。Amazing!</p>

<p>其实我最早开始写博客可能是07年了。那时候刚开始学c语言，为了锻炼自己的c语言能力，在百度知道里面回答各种c语言基础题，为了一个所谓的“专家”称号而乐此不疲。后来，由于找我做“学生成绩管理系统”的人实在是太多了，我就在百度开设了自己的第一个博客。当然，主要的内容就是c语言制作XX管理系统，还有一些算法题的解法以及一些百度知道的问题的答案。后来由于学习的压力，加上疏于打理，渐渐的我也不准备写博客了。</p>

<!-- more -->


<p>再到后来，我又在csdn开始过博客。因为我很喜欢看书，很多牛人都主张要写博客。因为书写确实可以整理自己的思路，同时可以和别人分享自己的idea，这本身也是很有乐趣的一件事情。可是好景不长，没有坚持多久，这个博客又荒废了。纠其原因，我总结了如下三点：</p>

<ul>
<li><p>  自己还处在学习基础知识的阶段，写的大都是读书笔记类的东西，没有读者，也没有反馈，写起来没劲</p></li>
<li><p>  写博客还是不方便，排版困难，写一篇博客通常要花费几个小时的时间</p></li>
<li><p>   积累不够，没有东西写，而且没有一个好的规划，不能坚持。我现在打算是每周一篇blog，这样的时间目前还算能接受</p></li>
</ul>


<p>再后来，自己保送了研究生，开始关注前沿的技术和行业发展了。特别是10年，我开始接触iOS游戏开发,开始接触了Git、Cocos2d、Github和Vim等。一切都开始朝着良性的方向发展了。</p>

<p>在刚开始学习Cocos2D的时候，国内那时候中文资料特别少，唯一的资料就是知易的。但是，我通过google，我发现国外还是有许多优秀的cocos2d教程的。当时，我也看到有一些人在翻译教程。但是质量不是很高，包括准确度和阅读体验都不是很好。恰好那时候，我对博客园也产生了浓厚的兴趣，于是乎便产生了要在博客园开始一个专门介绍Cocos2D游戏开发的博客。</p>

<p>由于当时移动互联网被炒得很火，同时很多小公司需要Cocos2D，这个博客凭着天时也火起来了。一旦开始火起来，我的压力就大了。我当时还在兼职，工作压力还蛮大的，学校事情也多，手上还有一个游戏项目，而且全部只能靠我自己。但是，每每我不想翻译的时候，只要想到还有那么多读者在等着我发文章，我就又有动力了。为此，那段时间，我晚上写代码一度到2、3点。时间确实是不够。</p>

<p>后面我便萌生念头，让热心网友和我一起来做翻译的事情。果然，程序员社区还是有很多热心人士的，Iven、小狼、北方、skingTree，Benna，糖炒小虾、u0u0、无敌葫芦娃、蓝羽、大侠自来也等等。这些人给我的博客贡献了不少文章，再次感谢你们！</p>

<p>后来，由于读者数量越来越多。我又建了相应的QQ群，由于QQ群讨论的很多东西都流失了。同样的问题被反复问及，有时候不回答，别人还以为你不友好。所以，也导致我和Iven后来一起创办“泰然论坛”的想法。</p>

<p>讲了这么多，其实我觉得写博客并没有那么难。看到国外好的文章，我们可以举手之劳翻译之。自己花了几个小时解决某个问题的方案也可以用博客来记录之。这样做不仅可以方便以后查阅，还可以帮助到他人，交到很多朋友，何乐而不为呢？</p>

<p>再后来，我又自己申请域名，建立了自己的wordpress博客。到现在，我放弃了自己花了200块大洋买的空间，回归开源的怀抱，我采用Github来托管我的博客。</p>

<p>为什么我要这样折腾呢？</p>

<h2>为什么转到wordpress</h2>

<p>其实我完全可以在博客园上面一直写博客，而且免费，平台大，人气足，往首页随便发一篇文章都有好几百的pv。但是，我想拥有自己的域名，拥有自己的主机空间。说白了，我想折腾了。</p>

<p>当然，折腾是有代价的。除了经济上的开销以外，更多的是新平台，新环境的适应。我在wordpress平台上面大概花了2-3个月，也发表了10几篇文章。（有中文的，也有英文的，现在都转到octopress博客平台上来了。）</p>

<p>wordpress给我的感觉是很成熟，很傻瓜化，很容易上手，安装过程只要1分钟。然后选择一个合适的主题，装上一堆插件就可以马上写博客了。作为一个非常成熟的CMS系统，wordpress真的很强大，而且速度很快。作为个人博客来讲，真的够用了。</p>

<p>但是，我不喜欢它的编辑器，太简陋了，没有博客园的好用。其实博客园的也不太好用，因为我习惯了博客园的编辑器，所以会觉得wordpress更烂。当然，我也有尝试使用百度开发的ueditor编辑器。虽然功能强大了，但是，有时候容易把好不容易排好版的文章的样式给搞乱。这个实在是让人抓狂。(后面我发现，我不是不喜欢wordpress的编辑器，而是不喜欢那样写博客的方式，我希望写博客和写代码一样方便)</p>

<p>而且wordpress采用php开发，php我不熟悉，所以，有些定制功能，我可能不会。如果全部是带着问题到处google，我也觉得累。为了写一篇博客，何苦这么麻烦了。更何况我对php开发web应用也没多大兴趣。（其实我一直就不太喜欢web开发，不管是任何平台的。不过最近我对django和ruby
on rails有了一点兴趣了。）</p>

<p>我冲着wordpress更多的控制权，我投奔了她的怀抱。但是，由于我不喜欢她的编辑文章和发布博客的方式，我最终还是决定离开她了。</p>

<h2>为什么我转到octopress</h2>

<p>在转到<a href="http://octopress.org/">octopress</a>之前，先讲一个小插曲。我以前学习过vim，不过没有认真对待它。前段时间为了使用cocos2d-x的lua和jsbinding来写点东西。发现没有好用的编辑器，textMate和sublime text2都不错，可是它们离我心目中的IDE还差不少。由于，我google之，我发现vim满足我的要求。于是乎，我重拾vim。这一次，我学习得非常快。我采用github和pathogen来管理我的vim插件和配置。而且由于practical Vim这本书的出现，让我对vim的认识更多了。</p>

<blockquote><p>Vim真是无所不能!</p></blockquote>

<p>由于我疯狂地学习vim、实践vim，现在我已经对它爱不释手了。真的不想再换编辑器了，呵呵。要充分发挥vim的能力，首先你得是一个TouchTypist。意味着你至少要能够盲打，同时，你要彻底说服自己不再用鼠标。我是怎么从一个windows用户，天天用鼠标+现代IDE来开发程序的程序员转向vim的呢？答案其实很简单：自从我接触mac以后，自从我接触mac的touch板以后。鼠标对我来说就是多余的，除了打dota的时候可能需要使用。mac系统的手势太好用了。</p>

<p>用了vim以后，我就开始尝试用markdown语法+vim编辑器来向wordpress平台发博客。但是，它对图片和代码支持不好。wordpress本身也没有提供太好的markdown语法的支持。于是乎，我就找到了octopress。</p>

<blockquote><p>Octopress: A blogging framework for hackers.</p></blockquote>

<p>这是octopress的首页说明，酷吧！使用octopress，你可以像写代码一样写博客。同时，它与vim完美结合，并且让我的coding、blogging、git工作流程顺畅无比。我从未如此开心，原来博客还可以这样写的。当然，这里我不是推销员，我只是介绍一下我喜欢的菜。具体用什么工具和博客平台，是大家的选择，萝卜白菜各有所爱嘛。而且最重要的不是平台，而是博文，要坚持写博客才是最重要的。但是，octopress让我有想写博客的欲望。：）</p>

<p>最后，octopress采用Html5+css3构建，同时支持<a href="http://liquidmarkup.org/">liquid</a>和ruby。（其实python也有类似的博客系统，不过貌似octopress社区更活跃一点）我可以通过此博客慢慢过渡到Ruby on Rails.</p>

<p>关于octopress博客的搭建，大家可以google之。网上有大量的文章可供参考，其实官方的文档就足够了，非常详尽。如果大家想折腾的，可以去尝试一下。如果遇到什么问题，可以在本文下方留言。如果问题我也遇到了，我会跟大家分享滴～</p>

<p>最后，贴几篇文章，讲老外为什么从wordpress转到jekyll的（octopress基于jekyll，但是，更容易使用，推荐像我一样的新手使用）</p>

<p><a href="http://vitobotta.com/migrating-from-wordpress-to-jekyll-part-one-why-I-gave-up-on-wordpress/">why I migrate from wordpress to jekyll</a></p>

<p><a href="http://vitobotta.com/how-to-migrate-from-wordpress-to-jekyll/">How to migrate from wordpress to jekyll</a></p>

<p>最后，我贴出本文的vim中markdown编辑的一个截图吧,秀一下，呵呵：）</p>

<p><img class="left" src="/images/posts/vimoctopress.png" width="750" height="300"></p>
]]></content>
  </entry>
  
</feed>
